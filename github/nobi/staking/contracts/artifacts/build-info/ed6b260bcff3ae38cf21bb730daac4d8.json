{
	"id": "ed6b260bcff3ae38cf21bb730daac4d8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol": {
				"content": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./helpers/ReentrancyGuard.sol\";\nimport \"./helpers/Ownable.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./libraries/Math.sol\";\nimport \"./libraries/SafeMath.sol\";\nimport \"./libraries/SafeERC20.sol\";\n\n//solhint-disable not-rely-on-time\ncontract MultiRewardsStake is ReentrancyGuard, Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    // Base staking info\n    IERC20 public stakingToken;\n    uint256 public periodFinish;\n    uint256 public rewardsDuration;\n    uint256 public lastUpdateTime;\n    \n    // User reward info\n    mapping(address => mapping (address => uint256)) private _userRewardPerTokenPaid;\n    mapping(address => mapping (address => uint256)) private _rewards;\n\n    // Reward token data\n    uint256 private _totalRewardTokens;\n    mapping (uint => RewardToken) private _rewardTokens;\n    mapping (address => uint) private _rewardTokenToIndex;\n\n    // User deposit data\n    uint256 private _totalSupply;\n    mapping(address => uint256) private _balances;\n\n    // Store reward token data\n    struct RewardToken {\n        address token;\n        uint256 rewardRate;\n        uint256 rewardPerTokenStored;\n    }\n\n    constructor(\n        address[] memory rewardTokens_,\n        address stakingToken_\n    ) {\n        stakingToken = IERC20(stakingToken_);\n        _totalRewardTokens = rewardTokens_.length;\n\n        for (uint i; i < rewardTokens_.length; i++) {\n            _rewardTokens[i + 1] = RewardToken({\n                token: rewardTokens_[i],\n                rewardRate: 0,\n                rewardPerTokenStored: 0\n            });\n            _rewardTokenToIndex[rewardTokens_[i]] = i + 1;\n        }\n\n        rewardsDuration = 14 days;\n    }\n\n    /* VIEWS */\n\n    function totalSupply() external view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) external view returns (uint256) {\n        return _balances[account];\n    }\n\n    function lastTimeRewardApplicable() public view returns (uint256) {\n        return Math.min(block.timestamp, periodFinish);\n    }\n\n    function totalRewardTokens() external view returns (uint256) {\n        return _totalRewardTokens;\n    }\n\n    // Get reward rate for all tokens\n    function rewardPerToken() public view returns (uint256[] memory) {\n        uint256[] memory tokens = new uint256[](_totalRewardTokens);\n        if (_totalSupply == 0) {\n            for (uint i = 0; i < _totalRewardTokens; i++) {\n                tokens[i] = _rewardTokens[i + 1].rewardPerTokenStored;\n            }\n        } else {\n            for (uint i = 0; i < _totalRewardTokens; i++) {\n                RewardToken storage rewardToken = _rewardTokens[i + 1];\n                tokens[i] = rewardToken.rewardPerTokenStored.add(\n                    lastTimeRewardApplicable()\n                    .sub(lastUpdateTime)\n                    .mul(rewardToken.rewardRate)\n                    .mul(1e18)\n                    .div(_totalSupply)\n                );\n            }\n        }\n\n        return tokens;\n    }\n\n    // Get reward rate for individual token\n    function rewardForToken(address token) public view returns (uint256) {\n        uint256 index = _rewardTokenToIndex[token];\n        if (_totalSupply == 0) {\n            return _rewardTokens[index].rewardPerTokenStored;\n        } else {\n            return _rewardTokens[index].rewardPerTokenStored.add(\n                lastTimeRewardApplicable()\n                .sub(lastUpdateTime)\n                .mul(_rewardTokens[index].rewardRate)\n                .mul(1e18)\n                .div(_totalSupply)\n            );\n        }\n    }\n\n    function getRewardTokens() public view returns (RewardToken[] memory) {\n        RewardToken[] memory tokens = new RewardToken[](_totalRewardTokens);\n        for (uint i = 0; i < _totalRewardTokens; i++) {\n            tokens[i] = _rewardTokens[i + 1];\n        }\n\n        return tokens;\n    }\n\n    function earned(address account) public view returns (uint256[] memory) {\n        uint256[] memory earnings = new uint256[](_totalRewardTokens);\n        uint256[] memory tokenRewards = rewardPerToken();\n        for (uint i = 0; i < _totalRewardTokens; i++) {\n            address token = _rewardTokens[i + 1].token;\n            earnings[i] = _balances[account]\n                .mul(tokenRewards[i]\n                    .sub(_userRewardPerTokenPaid[account][token])\n                )\n                .div(1e18)\n                .add(_rewards[account][token]\n            );\n        }\n\n        return earnings;\n    }\n\n    function getRewardForDuration() external view returns (uint256[] memory) {\n        uint256[] memory currentRewards = new uint256[](_totalRewardTokens);\n        for (uint i = 0; i < _totalRewardTokens; i++) {\n            currentRewards[i] = _rewardTokens[i + 1].rewardRate.mul(rewardsDuration);\n        }\n\n        return currentRewards;\n    }\n\n    /* === MUTATIONS === */\n\n    function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\n        require(amount > 0, \"Cannot stake 0\");\n        uint256 currentBalance = stakingToken.balanceOf(address(this));\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\n        uint256 newBalance = stakingToken.balanceOf(address(this));\n        uint256 supplyDiff = newBalance.sub(currentBalance);\n        _totalSupply = _totalSupply.add(supplyDiff);\n        _balances[msg.sender] = _balances[msg.sender].add(supplyDiff);\n        emit Staked(msg.sender, amount);\n    }\n\n    function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\n        require(amount > 0, \"Cannot withdraw 0\");\n        _totalSupply = _totalSupply.sub(amount);\n        _balances[msg.sender] = _balances[msg.sender].sub(amount);\n        stakingToken.safeTransfer(msg.sender, amount);\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    function getReward() public nonReentrant updateReward(msg.sender) {\n        for (uint i = 0; i < _totalRewardTokens; i++) {\n            uint256 currentReward = _rewards[msg.sender][_rewardTokens[i + 1].token];\n            if (currentReward > 0) {\n                _rewards[msg.sender][_rewardTokens[i + 1].token] = 0;\n                IERC20(_rewardTokens[i + 1].token).safeTransfer(msg.sender, currentReward);\n                emit RewardPaid(msg.sender, currentReward);\n            }\n        }\n    }\n\n    function exit() external {\n        withdraw(_balances[msg.sender]);\n        getReward();\n    }\n\n    /* === RESTRICTED FUNCTIONS === */\n\n    function depositRewardTokens(uint256[] memory amount) external onlyOwner {\n        require(amount.length == _totalRewardTokens, \"Wrong amounts\");\n\n        // uint256[] memory newRewards = new uint256[](_totalRewardTokens);\n        for (uint i = 0; i < _totalRewardTokens; i++) {\n            RewardToken storage rewardToken = _rewardTokens[i + 1];\n            uint256 prevBalance = IERC20(rewardToken.token).balanceOf(address(this));\n            IERC20(rewardToken.token).safeTransferFrom(msg.sender, address(this), amount[i]);\n            uint reward = IERC20(rewardToken.token).balanceOf(address(this)).sub(prevBalance);\n            if (block.timestamp >= periodFinish) {\n                rewardToken.rewardRate = reward.div(rewardsDuration);\n            } else {\n                uint256 remaining = periodFinish.sub(block.timestamp);\n                uint256 leftover = remaining.mul(rewardToken.rewardRate);\n                rewardToken.rewardRate = reward.add(leftover).div(rewardsDuration);\n            }\n\n            uint256 balance = IERC20(rewardToken.token).balanceOf(address(this));\n            require(rewardToken.rewardRate <= balance.div(rewardsDuration), \"Reward too high\");\n            emit RewardAdded(reward);\n        }\n\n        lastUpdateTime = block.timestamp;\n        periodFinish = block.timestamp.add(rewardsDuration);\n\n        // notifyRewardAmount(newRewards);\n    }\n\n    function notifyRewardAmount(uint256[] memory reward) public onlyOwner updateReward(address(0)) {\n        require(reward.length == _totalRewardTokens, \"Wrong reward amounts\");\n        for (uint i = 0; i < _totalRewardTokens; i++) {\n            RewardToken storage rewardToken = _rewardTokens[i + 1];\n            if (block.timestamp >= periodFinish) {\n                rewardToken.rewardRate = reward[i].div(rewardsDuration);\n            } else {\n                uint256 remaining = periodFinish.sub(block.timestamp);\n                uint256 leftover = remaining.mul(rewardToken.rewardRate);\n                rewardToken.rewardRate = reward[i].add(leftover).div(rewardsDuration);\n            }\n\n            uint256 balance = IERC20(rewardToken.token).balanceOf(address(this));\n            require(rewardToken.rewardRate <= balance.div(rewardsDuration), \"Reward too high\");\n            emit RewardAdded(reward[i]);\n        }\n\n        lastUpdateTime = block.timestamp;\n        periodFinish = block.timestamp.add(rewardsDuration);\n    }\n\n    function addRewardToken(address token) external onlyOwner {\n        require(_totalRewardTokens < 6, \"Too many tokens\");\n        require(IERC20(token).balanceOf(address(this)) > 0, \"Must prefund contract\");\n\n        // Increment total reward tokens\n        _totalRewardTokens += 1;\n\n        // Create new reward token record\n        _rewardTokens[_totalRewardTokens] = RewardToken({\n            token: token,\n            rewardRate: 0,\n            rewardPerTokenStored: 0\n        });\n\n        _rewardTokenToIndex[token] = _totalRewardTokens;\n\n        uint256[] memory rewardAmounts = new uint256[](_totalRewardTokens);\n\n        for (uint i = 0; i < _totalRewardTokens; i++) {\n            if (i == _totalRewardTokens - 1) {\n                rewardAmounts[i] = IERC20(token).balanceOf(address(this));\n            }\n        }\n\n        notifyRewardAmount(rewardAmounts);\n    }\n\n    function removeRewardToken(address token) public onlyOwner updateReward(address(0)) {\n        require(_totalRewardTokens > 1, \"Cannot have 0 reward tokens\");\n        // Get the index of token to remove\n        uint indexToDelete = _rewardTokenToIndex[token];\n\n        // Start at index of token to remove. Remove token and move all later indices lower.\n        for (uint i = indexToDelete; i <= _totalRewardTokens; i++) {\n            // Get token of one later index\n            RewardToken storage rewardToken = _rewardTokens[i + 1];\n\n            // Overwrite existing index with index + 1 record\n            _rewardTokens[i] = rewardToken;\n\n            // Delete original\n            delete _rewardTokens[i + 1];\n\n            // Set new index\n            _rewardTokenToIndex[rewardToken.token] = i;\n        }\n\n        _totalRewardTokens -= 1;\n    }\n\n    function emergencyWithdrawal(address token) external onlyOwner updateReward(address(0)) {\n        uint256 balance = IERC20(token).balanceOf(address(this));\n        require(balance > 0, \"Contract holds no tokens\");\n        IERC20(token).transfer(owner(), balance);\n        removeRewardToken(token);\n    }\n\n    /* === MODIFIERS === */\n\n    modifier updateReward(address account) {\n        uint256[] memory rewardsPerToken = rewardPerToken();\n        uint256[] memory currentEarnings = earned(account);\n        lastUpdateTime = lastTimeRewardApplicable();\n        for (uint i = 0; i < _totalRewardTokens; i++) {\n            RewardToken storage rewardToken = _rewardTokens[i + 1];\n            rewardToken.rewardPerTokenStored = rewardsPerToken[i];\n            if (account != address(0)) {\n                _rewards[account][rewardToken.token] = currentEarnings[i];\n                _userRewardPerTokenPaid[account][rewardToken.token] = rewardsPerToken[i];                \n            }\n        }\n        _;\n    }\n\n    /* === EVENTS === */\n\n    event RewardAdded(uint256 reward);\n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    event RewardPaid(address indexed user, uint256 reward);\n}"
			},
			"github/nobi/staking/contracts/libraries/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IERC20.sol\";\nimport \"./Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}"
			},
			"github/nobi/staking/contracts/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}"
			},
			"github/nobi/staking/contracts/libraries/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a / b + (a % b == 0 ? 0 : 1);\n    }\n}"
			},
			"github/nobi/staking/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the amount of decimals in the token\n     */\n    function decimals() external view returns (uint256);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"github/nobi/staking/contracts/helpers/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}"
			},
			"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}"
			},
			"github/nobi/staking/contracts/libraries/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"github/nobi/staking/contracts/helpers/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol": {
				"MultiRewardsStake": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "rewardTokens_",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "stakingToken_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "addRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "amount",
									"type": "uint256[]"
								}
							],
							"name": "depositRewardTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "emergencyWithdrawal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardForDuration",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardTokens",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "rewardRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "rewardPerTokenStored",
											"type": "uint256"
										}
									],
									"internalType": "struct MultiRewardsStake.RewardToken[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "reward",
									"type": "uint256[]"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodFinish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "removeRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "rewardForToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewardTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":301:11934  contract MultiRewardsStake is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1220:1750  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  sstore\n    /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":914:946  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"github/nobi/staking/contracts/helpers/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":914:932  _transferOwnership */\n  tag_12\n    /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":914:946  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_9:\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1319:1331  stakingToken */\n  0x02\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1319:1355  stakingToken = IERC20(stakingToken_) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1386:1406  rewardTokens_.length */\n  dup2\n  mload\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1365:1383  _totalRewardTokens */\n  0x08\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1365:1406  _totalRewardTokens = rewardTokens_.length */\n  sstore\n  0x00\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1417:1708  for (uint i; i < rewardTokens_.length; i++) {... */\ntag_14:\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1434:1447  rewardTokens_ */\n  dup3\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1434:1454  rewardTokens_.length */\n  mload\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1430:1431  i */\n  dup2\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1430:1454  i < rewardTokens_.length */\n  lt\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1417:1708  for (uint i; i < rewardTokens_.length; i++) {... */\n  iszero\n  tag_15\n  jumpi\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1498:1638  RewardToken({... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1535:1548  rewardTokens_ */\n  dup5\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1549:1550  i */\n  dup4\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1535:1551  rewardTokens_[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_17\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x32)\n  revert(0x00, 0x24)\ntag_17:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1498:1638  RewardToken({... */\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1581:1582  0 */\n  0x00\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1498:1638  RewardToken({... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1622:1623  0 */\n  0x00\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1498:1638  RewardToken({... */\n  dup2\n  mstore\n  pop\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1475:1488  _rewardTokens */\n  0x09\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1475:1495  _rewardTokens[i + 1] */\n  0x00\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1489:1490  i */\n  dup4\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1493:1494  1 */\n  0x01\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1489:1494  i + 1 */\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1475:1495  _rewardTokens[i + 1] */\n  dup2\n  mstore\n  0x20\n  dup1\n  dup3\n  add\n  swap3\n  swap1\n  swap3\n  mstore\n  0x40\n  swap1\n  dup2\n  add\n  0x00\n  keccak256\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1475:1638  _rewardTokens[i + 1] = RewardToken({... */\n  dup4\n  mload\n  dup2\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  or\n  dup2\n  sstore\n  swap2\n  dup4\n  add\n  mload\n  0x01\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  sstore\n  swap3\n  add\n  mload\n  0x02\n  swap1\n  swap2\n  add\n  sstore\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1692:1697  i + 1 */\n  tag_20\n  swap1\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1692:1693  i */\n  dup3\n  swap1\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1692:1697  i + 1 */\n  tag_19\n  jump\t// in\ntag_20:\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1652:1671  _rewardTokenToIndex */\n  0x0a\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1652:1689  _rewardTokenToIndex[rewardTokens_[i]] */\n  0x00\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1672:1685  rewardTokens_ */\n  dup6\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1686:1687  i */\n  dup5\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1672:1688  rewardTokens_[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_21\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x32)\n  revert(0x00, 0x24)\ntag_21:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1652:1689  _rewardTokenToIndex[rewardTokens_[i]] */\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1652:1697  _rewardTokenToIndex[rewardTokens_[i]] = i + 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1456:1459  i++ */\n  dup1\n  dup1\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap2\n  pop\n  pop\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1417:1708  for (uint i; i < rewardTokens_.length; i++) {... */\n  jump(tag_14)\ntag_15:\n  pop\n  pop\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1736:1743  14 days */\n  0x127500\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1718:1733  rewardsDuration */\n  0x04\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1718:1743  rewardsDuration = 14 days */\n  sstore\n  pop\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":301:11934  contract MultiRewardsStake is ReentrancyGuard, Ownable {... */\n  jump(tag_27)\n    /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2355:2361  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2371:2388  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2355:2361  _owner */\n  swap2\n  and\n  swap2\n    /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2371:2388  _owner = newOwner */\n  swap1\n    /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2355:2361  _owner */\n  dup3\n  swap1\n    /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2336:2352  address oldOwner */\n  0x00\n  swap1\n    /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_28:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:117   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:117   */\ntag_30:\n    /* \"#utility.yul\":74:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:1468   */\ntag_3:\n    /* \"#utility.yul\":300:306   */\n  0x00\n    /* \"#utility.yul\":308:314   */\n  dup1\n    /* \"#utility.yul\":361:363   */\n  0x40\n    /* \"#utility.yul\":349:358   */\n  dup4\n    /* \"#utility.yul\":340:347   */\n  dup6\n    /* \"#utility.yul\":336:359   */\n  sub\n    /* \"#utility.yul\":332:364   */\n  slt\n    /* \"#utility.yul\":329:331   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":382:388   */\n  dup2\n    /* \"#utility.yul\":374:380   */\n  dup3\n    /* \"#utility.yul\":367:389   */\n  revert\n    /* \"#utility.yul\":329:331   */\ntag_32:\n    /* \"#utility.yul\":414:430   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":479:493   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":476:478   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":511:517   */\n  dup4\n    /* \"#utility.yul\":503:509   */\n  dup5\n    /* \"#utility.yul\":496:518   */\n  revert\n    /* \"#utility.yul\":476:478   */\ntag_33:\n    /* \"#utility.yul\":554:560   */\n  dup2\n    /* \"#utility.yul\":543:552   */\n  dup6\n    /* \"#utility.yul\":539:561   */\n  add\n    /* \"#utility.yul\":529:561   */\n  swap2\n  pop\n    /* \"#utility.yul\":599:606   */\n  dup6\n    /* \"#utility.yul\":592:596   */\n  0x1f\n    /* \"#utility.yul\":588:590   */\n  dup4\n    /* \"#utility.yul\":584:597   */\n  add\n    /* \"#utility.yul\":580:607   */\n  slt\n    /* \"#utility.yul\":570:572   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":626:632   */\n  dup4\n    /* \"#utility.yul\":618:624   */\n  dup5\n    /* \"#utility.yul\":611:633   */\n  revert\n    /* \"#utility.yul\":570:572   */\ntag_34:\n    /* \"#utility.yul\":660:662   */\n  dup2\n    /* \"#utility.yul\":654:663   */\n  mload\n    /* \"#utility.yul\":682:686   */\n  0x20\n    /* \"#utility.yul\":705:707   */\n  dup3\n    /* \"#utility.yul\":701:703   */\n  dup3\n    /* \"#utility.yul\":698:708   */\n  gt\n    /* \"#utility.yul\":695:697   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":711:729   */\n  tag_36\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":757:759   */\n  dup2\n    /* \"#utility.yul\":754:755   */\n  0x05\n    /* \"#utility.yul\":750:760   */\n  shl\n    /* \"#utility.yul\":789:791   */\n  0x40\n    /* \"#utility.yul\":783:792   */\n  mload\n    /* \"#utility.yul\":852:854   */\n  0x1f\n    /* \"#utility.yul\":848:855   */\n  not\n    /* \"#utility.yul\":843:845   */\n  0x3f\n    /* \"#utility.yul\":839:841   */\n  dup4\n    /* \"#utility.yul\":835:846   */\n  add\n    /* \"#utility.yul\":831:856   */\n  and\n    /* \"#utility.yul\":823:829   */\n  dup2\n    /* \"#utility.yul\":819:857   */\n  add\n    /* \"#utility.yul\":907:913   */\n  dup2\n    /* \"#utility.yul\":895:905   */\n  dup2\n    /* \"#utility.yul\":892:914   */\n  lt\n    /* \"#utility.yul\":887:889   */\n  dup7\n    /* \"#utility.yul\":875:885   */\n  dup3\n    /* \"#utility.yul\":872:890   */\n  gt\n    /* \"#utility.yul\":869:915   */\n  or\n    /* \"#utility.yul\":866:868   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":918:936   */\n  tag_39\n  tag_37\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":954:956   */\n  0x40\n    /* \"#utility.yul\":947:969   */\n  mstore\n    /* \"#utility.yul\":1004:1022   */\n  dup4\n  dup2\n  mstore\n    /* \"#utility.yul\":1038:1053   */\n  dup3\n  dup2\n  add\n  swap5\n  pop\n    /* \"#utility.yul\":1073:1084   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":1103:1114   */\n  dup3\n  dup8\n  add\n    /* \"#utility.yul\":1099:1119   */\n  dup5\n  add\n    /* \"#utility.yul\":1096:1129   */\n  dup12\n  lt\n    /* \"#utility.yul\":1093:1095   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1147:1153   */\n  dup9\n    /* \"#utility.yul\":1139:1145   */\n  dup10\n    /* \"#utility.yul\":1132:1154   */\n  revert\n    /* \"#utility.yul\":1093:1095   */\ntag_40:\n    /* \"#utility.yul\":1174:1180   */\n  dup9\n    /* \"#utility.yul\":1165:1180   */\n  swap7\n  pop\n    /* \"#utility.yul\":1189:1369   */\ntag_41:\n    /* \"#utility.yul\":1203:1205   */\n  dup5\n    /* \"#utility.yul\":1200:1201   */\n  dup8\n    /* \"#utility.yul\":1197:1206   */\n  lt\n    /* \"#utility.yul\":1189:1369   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1260:1294   */\n  tag_44\n    /* \"#utility.yul\":1290:1293   */\n  dup2\n    /* \"#utility.yul\":1260:1294   */\n  tag_28\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1248:1295   */\n  dup7\n  mstore\n    /* \"#utility.yul\":1221:1222   */\n  0x01\n    /* \"#utility.yul\":1214:1223   */\n  swap7\n  swap1\n  swap7\n  add\n  swap6\n    /* \"#utility.yul\":1315:1327   */\n  swap5\n  dup4\n  add\n  swap5\n    /* \"#utility.yul\":1347:1359   */\n  dup4\n  add\n    /* \"#utility.yul\":1189:1369   */\n  jump(tag_41)\ntag_43:\n  pop\n    /* \"#utility.yul\":1388:1394   */\n  swap7\n  pop\n    /* \"#utility.yul\":1413:1462   */\n  tag_45\n  swap1\n  pop\n    /* \"#utility.yul\":1443:1461   */\n  dup8\n  dup3\n  add\n    /* \"#utility.yul\":1413:1462   */\n  tag_28\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1403:1462   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":319:1468   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1473:1601   */\ntag_19:\n    /* \"#utility.yul\":1513:1516   */\n  0x00\n    /* \"#utility.yul\":1544:1545   */\n  dup3\n    /* \"#utility.yul\":1540:1546   */\n  not\n    /* \"#utility.yul\":1537:1538   */\n  dup3\n    /* \"#utility.yul\":1534:1547   */\n  gt\n    /* \"#utility.yul\":1531:1533   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1550:1568   */\n  tag_48\n  tag_49\n  jump\t// in\ntag_48:\n  pop\n    /* \"#utility.yul\":1586:1595   */\n  add\n  swap1\n    /* \"#utility.yul\":1521:1601   */\n  jump\t// out\n    /* \"#utility.yul\":1606:1741   */\ntag_23:\n    /* \"#utility.yul\":1645:1648   */\n  0x00\n  not(0x00)\n    /* \"#utility.yul\":1666:1683   */\n  dup3\n  eq\n    /* \"#utility.yul\":1663:1665   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1686:1704   */\n  tag_52\n  tag_49\n  jump\t// in\ntag_52:\n  pop\n    /* \"#utility.yul\":1733:1734   */\n  0x01\n    /* \"#utility.yul\":1722:1735   */\n  add\n  swap1\n    /* \"#utility.yul\":1653:1741   */\n  jump\t// out\n    /* \"#utility.yul\":1746:1873   */\ntag_49:\n    /* \"#utility.yul\":1807:1817   */\n  0x4e487b71\n    /* \"#utility.yul\":1802:1805   */\n  0xe0\n    /* \"#utility.yul\":1798:1818   */\n  shl\n    /* \"#utility.yul\":1795:1796   */\n  0x00\n    /* \"#utility.yul\":1788:1819   */\n  mstore\n    /* \"#utility.yul\":1838:1842   */\n  0x11\n    /* \"#utility.yul\":1835:1836   */\n  0x04\n    /* \"#utility.yul\":1828:1843   */\n  mstore\n    /* \"#utility.yul\":1862:1866   */\n  0x24\n    /* \"#utility.yul\":1859:1860   */\n  0x00\n    /* \"#utility.yul\":1852:1867   */\n  revert\n    /* \"#utility.yul\":1878:2005   */\ntag_37:\n    /* \"#utility.yul\":1939:1949   */\n  0x4e487b71\n    /* \"#utility.yul\":1934:1937   */\n  0xe0\n    /* \"#utility.yul\":1930:1950   */\n  shl\n    /* \"#utility.yul\":1927:1928   */\n  0x00\n    /* \"#utility.yul\":1920:1951   */\n  mstore\n    /* \"#utility.yul\":1970:1974   */\n  0x41\n    /* \"#utility.yul\":1967:1968   */\n  0x04\n    /* \"#utility.yul\":1960:1975   */\n  mstore\n    /* \"#utility.yul\":1994:1998   */\n  0x24\n    /* \"#utility.yul\":1991:1992   */\n  0x00\n    /* \"#utility.yul\":1984:1999   */\n  revert\n    /* \"#utility.yul\":1910:2005   */\ntag_27:\n    /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":301:11934  contract MultiRewardsStake is ReentrancyGuard, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":301:11934  contract MultiRewardsStake is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xc4f59f9b\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xe71e7f78\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xe71e7f78\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe9fad8ee\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xebe2b12b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0xc4f59f9b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa54f5e0d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x80faa57d\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x386a9525\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x6a1af3b7\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x6a1af3b7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6e353a1d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x386a9525\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3d509c97\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x1c03e6cc\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x1c03e6cc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1c1f78eb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1b0875a6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3955:4565  function earned(address account) public view returns (uint256[] memory) {... */\n    tag_3:\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1773:1864  function totalSupply() external view returns (uint256) {... */\n    tag_4:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1845:1857  _totalSupply */\n      sload(0x0b)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1773:1864  function totalSupply() external view returns (uint256) {... */\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":11308:11333   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":11296:11298   */\n      0x20\n        /* \"#utility.yul\":11281:11299   */\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1773:1864  function totalSupply() external view returns (uint256) {... */\n      tag_39\n        /* \"#utility.yul\":11263:11339   */\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2121:2224  function totalRewardTokens() external view returns (uint256) {... */\n    tag_5:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2199:2217  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2121:2224  function totalRewardTokens() external view returns (uint256) {... */\n      jump(tag_41)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8954:9824  function addRewardToken(address token) external onlyOwner {... */\n    tag_6:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4571:4912  function getRewardForDuration() external view returns (uint256[] memory) {... */\n    tag_7:\n      tag_35\n      tag_52\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5525:5876  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {... */\n    tag_8:\n      tag_48\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":517:547  uint256 public rewardsDuration */\n    tag_9:\n      tag_41\n      sload(0x04)\n      dup2\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5882:6380  function getReward() public nonReentrant updateReward(msg.sender) {... */\n    tag_10:\n      tag_48\n      tag_62\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9830:10679  function removeRewardToken(address token) public onlyOwner updateReward(address(0)) {... */\n    tag_11:\n      tag_48\n      tag_64\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6526:7913  function depositRewardTokens(uint256[] memory amount) external onlyOwner {... */\n    tag_12:\n      tag_48\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10685:10988  function emergencyWithdrawal(address token) external onlyOwner updateReward(address(0)) {... */\n    tag_13:\n      tag_48\n      tag_71\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1870:1980  function balanceOf(address account) external view returns (uint256) {... */\n    tag_14:\n      tag_41\n      tag_74\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_74:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1955:1973  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1929:1936  uint256 */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1955:1973  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1955:1964  _balances */\n      0x0c\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1955:1973  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1870:1980  function balanceOf(address account) external view returns (uint256) {... */\n      jump\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1661:1762  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_48\n      tag_78\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":452:478  IERC20 public stakingToken */\n    tag_16:\n      sload(0x02)\n      tag_79\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n    tag_79:\n      mload(0x40)\n        /* \"#utility.yul\":2734:2776   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2722:2777   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2704:2778   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":452:478  IERC20 public stakingToken */\n      tag_39\n        /* \"#utility.yul\":2659:2784   */\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1986:2115  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_17:\n      tag_41\n      tag_84\n      jump\t// in\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n    tag_18:\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1101:1107  _owner */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x01))\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n      jump(tag_79)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3126:3653  function rewardForToken(address token) public view returns (uint256) {... */\n    tag_19:\n      tag_41\n      tag_91\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4947:5519  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {... */\n    tag_20:\n      tag_48\n      tag_95\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3659:3949  function getRewardTokens() public view returns (RewardToken[] memory) {... */\n    tag_21:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":553:582  uint256 public lastUpdateTime */\n    tag_22:\n      tag_41\n      sload(0x05)\n      dup2\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2268:3076  function rewardPerToken() public view returns (uint256[] memory) {... */\n    tag_23:\n      tag_35\n      tag_105\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7919:8948  function notifyRewardAmount(uint256[] memory reward) public onlyOwner updateReward(address(0)) {... */\n    tag_24:\n      tag_48\n      tag_108\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6386:6480  function exit() external {... */\n    tag_25:\n      tag_48\n      tag_111\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":484:511  uint256 public periodFinish */\n    tag_26:\n      tag_41\n      sload(0x03)\n      dup2\n      jump\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1911:2109  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      tag_48\n      tag_116\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3955:4565  function earned(address account) public view returns (uint256[] memory) {... */\n    tag_38:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4009:4025  uint256[] memory */\n      0x60\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4037:4062  uint256[] memory earnings */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4079:4097  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4065:4098  new uint256[](_totalRewardTokens) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_119\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_119:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_120\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_120:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4037:4098  uint256[] memory earnings = new uint256[](_totalRewardTokens) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4108:4137  uint256[] memory tokenRewards */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4140:4156  rewardPerToken() */\n      tag_121\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4140:4154  rewardPerToken */\n      tag_105\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4140:4156  rewardPerToken() */\n      jump\t// in\n    tag_121:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4108:4156  uint256[] memory tokenRewards = rewardPerToken() */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4171:4177  uint i */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4166:4533  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n    tag_122:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4187:4205  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4183:4184  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4183:4205  i < _totalRewardTokens */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4166:4533  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4226:4239  address token */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4242:4255  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4226:4239  address token */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4256:4261  i + 1 */\n      tag_125\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4256:4257  i */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4260:4261  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4256:4261  i + 1 */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4242:4262  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4242:4268  _rewardTokens[i + 1].token */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4484:4501  _rewards[account] */\n      dup11\n      dup2\n      and\n      dup1\n      dup5\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4484:4492  _rewards */\n      0x07\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4484:4501  _rewards[account] */\n      dup7\n      mstore\n      dup5\n      dup5\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4242:4268  _rewardTokens[i + 1].token */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4484:4508  _rewards[account][token] */\n      dup1\n      dup5\n      mstore\n      swap1\n      dup6\n      mstore\n      dup4\n      dup4\n      keccak256\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4377:4409  _userRewardPerTokenPaid[account] */\n      swap2\n      dup4\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4377:4400  _userRewardPerTokenPaid */\n      0x06\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4377:4409  _userRewardPerTokenPaid[account] */\n      dup6\n      mstore\n      dup4\n      dup4\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4377:4416  _userRewardPerTokenPaid[account][token] */\n      dup2\n      dup5\n      mstore\n      swap1\n      swap5\n      mstore\n      swap2\n      swap1\n      keccak256\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4336:4351  tokenRewards[i] */\n      dup6\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4242:4268  _rewardTokens[i + 1].token */\n      swap3\n      swap4\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4296:4522  _balances[account]... */\n      tag_127\n      swap3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4296:4462  _balances[account]... */\n      tag_128\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4457:4461  1e18 */\n      0x0de0b6b3a7640000\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4296:4435  _balances[account]... */\n      tag_129\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4336:4417  tokenRewards[i]... */\n      tag_130\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4336:4348  tokenRewards */\n      dup11\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4349:4350  i */\n      dup11\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4336:4351  tokenRewards[i] */\n      dup2\n      lt\n      tag_131\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_131:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4336:4376  tokenRewards[i]... */\n      tag_132\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4336:4417  tokenRewards[i]... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_130:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4296:4314  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup13\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4296:4305  _balances */\n      0x0c\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4296:4314  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4296:4335  _balances[account]... */\n      tag_133\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4296:4435  _balances[account]... */\n      jump\t// in\n    tag_129:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4296:4456  _balances[account]... */\n      swap1\n      tag_134\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4296:4462  _balances[account]... */\n      jump\t// in\n    tag_128:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4296:4483  _balances[account]... */\n      swap1\n      tag_135\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4296:4522  _balances[account]... */\n      jump\t// in\n    tag_127:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4282:4290  earnings */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4291:4292  i */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4282:4293  earnings[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_136\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_136:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4282:4522  earnings[i] = _balances[account]... */\n      mstore\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4207:4210  i++ */\n      dup1\n      tag_137\n      dup2\n      tag_138\n      jump\t// in\n    tag_137:\n      swap2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4166:4533  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      jump(tag_122)\n    tag_123:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4550:4558  earnings */\n      swap1\n      swap4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3955:4565  function earned(address account) public view returns (uint256[] memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8954:9824  function addRewardToken(address token) external onlyOwner {... */\n    tag_50:\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1101:1107  _owner */\n      sload(0x01)\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1101:1107  _owner */\n      and\n        /* \"github/nobi/staking/contracts/helpers/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      eq\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9177:9179   */\n      0x20\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9159:9180   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9196:9214   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9189:9219   */\n      mstore\n        /* \"#utility.yul\":9255:9289   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9235:9253   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9228:9290   */\n      mstore\n        /* \"#utility.yul\":9307:9325   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9051:9052  6 */\n      0x06\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9030:9048  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9030:9052  _totalRewardTokens < 6 */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9022:9072  require(_totalRewardTokens < 6, \"Too many tokens\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6340:6342   */\n      0x20\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9022:9072  require(_totalRewardTokens < 6, \"Too many tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6322:6343   */\n      mstore\n        /* \"#utility.yul\":6379:6381   */\n      0x0f\n        /* \"#utility.yul\":6359:6377   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6352:6382   */\n      mstore\n        /* \"#utility.yul\":6418:6435   */\n      0x546f6f206d616e7920746f6b656e730000000000000000000000000000000000\n        /* \"#utility.yul\":6398:6416   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6391:6436   */\n      mstore\n        /* \"#utility.yul\":6453:6471   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9022:9072  require(_totalRewardTokens < 6, \"Too many tokens\") */\n      tag_146\n        /* \"#utility.yul\":6312:6477   */\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9022:9072  require(_totalRewardTokens < 6, \"Too many tokens\") */\n    tag_149:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9090:9128  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9122:9126  this */\n      address\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9090:9128  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2704:2778   */\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9131:9132  0 */\n      0x00\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9090:9113  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2677:2695   */\n      0x24\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9090:9128  IERC20(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9090:9132  IERC20(token).balanceOf(address(this)) > 0 */\n      gt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9082:9158  require(IERC20(token).balanceOf(address(this)) > 0, \"Must prefund contract\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7790:7792   */\n      0x20\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9082:9158  require(IERC20(token).balanceOf(address(this)) > 0, \"Must prefund contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7772:7793   */\n      mstore\n        /* \"#utility.yul\":7829:7831   */\n      0x15\n        /* \"#utility.yul\":7809:7827   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7802:7832   */\n      mstore\n        /* \"#utility.yul\":7868:7891   */\n      0x4d7573742070726566756e6420636f6e74726163740000000000000000000000\n        /* \"#utility.yul\":7848:7866   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7841:7892   */\n      mstore\n        /* \"#utility.yul\":7909:7927   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9082:9158  require(IERC20(token).balanceOf(address(this)) > 0, \"Must prefund contract\") */\n      tag_146\n        /* \"#utility.yul\":7762:7933   */\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9082:9158  require(IERC20(token).balanceOf(address(this)) > 0, \"Must prefund contract\") */\n    tag_158:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9232:9233  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9210:9228  _totalRewardTokens */\n      0x08\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9210:9233  _totalRewardTokens += 1 */\n      dup3\n      dup3\n      sload\n      tag_161\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_161:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9322:9435  RewardToken({... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      0x00\n      0x20\n      dup1\n      dup6\n      add\n      dup3\n      dup2\n      mstore\n      dup6\n      dup8\n      add\n      dup4\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9300:9318  _totalRewardTokens */\n      0x08\n      dup1\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9286:9319  _rewardTokens[_totalRewardTokens] */\n      dup6\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9286:9299  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9286:9319  _rewardTokens[_totalRewardTokens] */\n      dup5\n      mstore\n      dup9\n      dup6\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9286:9435  _rewardTokens[_totalRewardTokens] = RewardToken({... */\n      swap8\n      mload\n      dup9\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      swap8\n      and\n      swap7\n      swap1\n      swap7\n      or\n      dup8\n      sstore\n      swap1\n      mload\n      0x01\n      dup8\n      add\n      sstore\n      mload\n      0x02\n      swap1\n      swap6\n      add\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9475:9493  _totalRewardTokens */\n      swap2\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9446:9472  _rewardTokenToIndex[token] */\n      swap1\n      dup3\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9446:9465  _rewardTokenToIndex */\n      0x0a\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9446:9472  _rewardTokenToIndex[token] */\n      swap1\n      swap3\n      mstore\n      swap2\n      dup3\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9446:9493  _rewardTokenToIndex[token] = _totalRewardTokens */\n      dup2\n      swap1\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9537:9570  new uint256[](_totalRewardTokens) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_162\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_162:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_163:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9504:9570  uint256[] memory rewardAmounts = new uint256[](_totalRewardTokens) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9586:9592  uint i */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9581:9774  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n    tag_164:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9602:9620  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9598:9599  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9598:9620  i < _totalRewardTokens */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9581:9774  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9671:9672  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9650:9668  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9650:9672  _totalRewardTokens - 1 */\n      tag_167\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9645:9646  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9645:9672  i == _totalRewardTokens - 1 */\n      eq\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9641:9764  if (i == _totalRewardTokens - 1) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9711:9749  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9743:9747  this */\n      address\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9711:9749  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2704:2778   */\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9711:9734  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2677:2695   */\n      0x24\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9711:9749  IERC20(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_173\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_174:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9692:9705  rewardAmounts */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9706:9707  i */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9692:9708  rewardAmounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_175\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_175:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9692:9749  rewardAmounts[i] = IERC20(token).balanceOf(address(this)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9641:9764  if (i == _totalRewardTokens - 1) {... */\n    tag_169:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9622:9625  i++ */\n      dup1\n      tag_176\n      dup2\n      tag_138\n      jump\t// in\n    tag_176:\n      swap2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9581:9774  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      jump(tag_164)\n    tag_165:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9784:9817  notifyRewardAmount(rewardAmounts) */\n      tag_177\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9803:9816  rewardAmounts */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9784:9802  notifyRewardAmount */\n      tag_109\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9784:9817  notifyRewardAmount(rewardAmounts) */\n      jump\t// in\n    tag_177:\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1311:1312  _ */\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8954:9824  function addRewardToken(address token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4571:4912  function getRewardForDuration() external view returns (uint256[] memory) {... */\n    tag_52:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4626:4642  uint256[] memory */\n      0x60\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4654:4685  uint256[] memory currentRewards */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4702:4720  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4688:4721  new uint256[](_totalRewardTokens) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_179\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_179:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_180\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_180:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4654:4721  uint256[] memory currentRewards = new uint256[](_totalRewardTokens) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4736:4742  uint i */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4731:4874  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n    tag_181:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4752:4770  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4748:4749  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4748:4770  i < _totalRewardTokens */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4731:4874  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4847:4862  rewardsDuration */\n      sload(0x04)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4811:4863  _rewardTokens[i + 1].rewardRate.mul(rewardsDuration) */\n      tag_184\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4811:4824  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4811:4831  _rewardTokens[i + 1] */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4825:4830  i + 1 */\n      tag_185\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4825:4826  i */\n      dup6\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4829:4830  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4825:4830  i + 1 */\n      tag_126\n      jump\t// in\n    tag_185:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4811:4831  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4811:4842  _rewardTokens[i + 1].rewardRate */\n      0x01\n      add\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4811:4846  _rewardTokens[i + 1].rewardRate.mul */\n      tag_133\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4811:4863  _rewardTokens[i + 1].rewardRate.mul(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_184:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4791:4805  currentRewards */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4806:4807  i */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4791:4808  currentRewards[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_186\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_186:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4791:4863  currentRewards[i] = _rewardTokens[i + 1].rewardRate.mul(rewardsDuration) */\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4772:4775  i++ */\n      dup1\n      tag_187\n      dup2\n      tag_138\n      jump\t// in\n    tag_187:\n      swap2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4731:4874  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      jump(tag_181)\n    tag_182:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4891:4905  currentRewards */\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4571:4912  function getRewardForDuration() external view returns (uint256[] memory) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5525:5876  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {... */\n    tag_57:\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10651:10653   */\n      0x20\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10633:10654   */\n      mstore\n        /* \"#utility.yul\":10690:10692   */\n      0x1f\n        /* \"#utility.yul\":10670:10688   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10663:10693   */\n      mstore\n        /* \"#utility.yul\":10729:10762   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10709:10727   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10702:10763   */\n      mstore\n        /* \"#utility.yul\":10780:10798   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_146\n        /* \"#utility.yul\":10623:10804   */\n      jump\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_189:\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      swap1\n      dup2\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5592:5602  msg.sender */\n      caller\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11123  rewardPerToken() */\n      tag_193\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11121  rewardPerToken */\n      tag_105\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11123  rewardPerToken() */\n      jump\t// in\n    tag_193:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11072:11123  uint256[] memory rewardsPerToken = rewardPerToken() */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11133:11165  uint256[] memory currentEarnings */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11183  earned(account) */\n      tag_194\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11175:11182  account */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11174  earned */\n      tag_38\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11183  earned(account) */\n      jump\t// in\n    tag_194:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11133:11183  uint256[] memory currentEarnings = earned(account) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11236  lastTimeRewardApplicable() */\n      tag_195\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11234  lastTimeRewardApplicable */\n      tag_84\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11236  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_195:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11193:11207  lastUpdateTime */\n      0x05\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11193:11236  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11251:11257  uint i */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n    tag_196:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11267:11285  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11263:11264  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11263:11285  i < _totalRewardTokens */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11337  RewardToken storage rewardToken */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11340:11353  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11337  RewardToken storage rewardToken */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11359  i + 1 */\n      tag_199\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11355  i */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11358:11359  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11359  i + 1 */\n      tag_126\n      jump\t// in\n    tag_199:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11340:11360  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11360  RewardToken storage rewardToken = _rewardTokens[i + 1] */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11409:11424  rewardsPerToken */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11425:11426  i */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11409:11427  rewardsPerToken[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_200\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_200:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11374:11406  rewardToken.rewardPerTokenStored */\n      0x02\n      dup3\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11374:11427  rewardToken.rewardPerTokenStored = rewardsPerToken[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11445:11466  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      iszero\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11441:11664  if (account != address(0)) {... */\n      tag_201\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11525:11540  currentEarnings */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11541:11542  i */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11525:11543  currentEarnings[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_202\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_202:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11503  _rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11494  _rewards */\n      0x07\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11503  _rewards[account] */\n      dup5\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11504:11521  rewardToken.token */\n      dup7\n      sload\n      swap1\n      swap4\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11522  _rewards[account][rewardToken.token] */\n      dup3\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11543  _rewards[account][rewardToken.token] = currentEarnings[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11633  rewardsPerToken[i] */\n      dup4\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11630  rewardsPerToken */\n      dup5\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11631:11632  i */\n      dup4\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11633  rewardsPerToken[i] */\n      dup2\n      lt\n      tag_203\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_203:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11593  _userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11584  _userRewardPerTokenPaid */\n      0x06\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11593  _userRewardPerTokenPaid[account] */\n      dup5\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11594:11611  rewardToken.token */\n      dup7\n      sload\n      swap1\n      swap4\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11612  _userRewardPerTokenPaid[account][rewardToken.token] */\n      dup3\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11633  _userRewardPerTokenPaid[account][rewardToken.token] = rewardsPerToken[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11441:11664  if (account != address(0)) {... */\n    tag_201:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11287:11290  i++ */\n      dup1\n      tag_204\n      dup2\n      tag_138\n      jump\t// in\n    tag_204:\n      swap2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      jump(tag_196)\n    tag_197:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5631:5632  0 */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5622:5628  amount */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5622:5632  amount > 0 */\n      gt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5614:5654  require(amount > 0, \"Cannot withdraw 0\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":8831:8833   */\n      0x20\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5614:5654  require(amount > 0, \"Cannot withdraw 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8813:8834   */\n      mstore\n        /* \"#utility.yul\":8870:8872   */\n      0x11\n        /* \"#utility.yul\":8850:8868   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8843:8873   */\n      mstore\n        /* \"#utility.yul\":8909:8928   */\n      0x43616e6e6f742077697468647261772030000000000000000000000000000000\n        /* \"#utility.yul\":8889:8907   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8882:8929   */\n      mstore\n        /* \"#utility.yul\":8946:8964   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5614:5654  require(amount > 0, \"Cannot withdraw 0\") */\n      tag_146\n        /* \"#utility.yul\":8803:8970   */\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5614:5654  require(amount > 0, \"Cannot withdraw 0\") */\n    tag_206:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5679:5691  _totalSupply */\n      sload(0x0b)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5679:5703  _totalSupply.sub(amount) */\n      tag_209\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5696:5702  amount */\n      dup6\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5679:5695  _totalSupply.sub */\n      tag_132\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5679:5703  _totalSupply.sub(amount) */\n      jump\t// in\n    tag_209:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5664:5676  _totalSupply */\n      0x0b\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5664:5703  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5747:5757  msg.sender */\n      caller\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5737:5758  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5737:5746  _balances */\n      0x0c\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5737:5758  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5737:5770  _balances[msg.sender].sub(amount) */\n      tag_210\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5763:5769  amount */\n      dup6\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5737:5762  _balances[msg.sender].sub */\n      tag_132\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5737:5770  _balances[msg.sender].sub(amount) */\n      jump\t// in\n    tag_210:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5723:5733  msg.sender */\n      caller\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5713:5734  _balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5713:5722  _balances */\n      0x0c\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5713:5734  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5713:5770  _balances[msg.sender] = _balances[msg.sender].sub(amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5780:5792  stakingToken */\n      sload(0x02)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5780:5825  stakingToken.safeTransfer(msg.sender, amount) */\n      tag_211\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5713:5734  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5780:5792  stakingToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5818:5824  amount */\n      dup7\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5780:5805  stakingToken.safeTransfer */\n      tag_212\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5780:5825  stakingToken.safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_211:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5840:5869  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":11308:11333   */\n      dup5\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5850:5860  msg.sender */\n      caller\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5840:5869  Withdrawn(msg.sender, amount) */\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n      swap1\n        /* \"#utility.yul\":11296:11298   */\n      0x20\n        /* \"#utility.yul\":11281:11299   */\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5840:5869  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5525:5876  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5882:6380  function getReward() public nonReentrant updateReward(msg.sender) {... */\n    tag_62:\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10651:10653   */\n      0x20\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10633:10654   */\n      mstore\n        /* \"#utility.yul\":10690:10692   */\n      0x1f\n        /* \"#utility.yul\":10670:10688   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10663:10693   */\n      mstore\n        /* \"#utility.yul\":10729:10762   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10709:10727   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10702:10763   */\n      mstore\n        /* \"#utility.yul\":10780:10798   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_146\n        /* \"#utility.yul\":10623:10804   */\n      jump\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_215:\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      swap1\n      dup2\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5936:5946  msg.sender */\n      caller\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11123  rewardPerToken() */\n      tag_218\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11121  rewardPerToken */\n      tag_105\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11123  rewardPerToken() */\n      jump\t// in\n    tag_218:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11072:11123  uint256[] memory rewardsPerToken = rewardPerToken() */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11133:11165  uint256[] memory currentEarnings */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11183  earned(account) */\n      tag_219\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11175:11182  account */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11174  earned */\n      tag_38\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11183  earned(account) */\n      jump\t// in\n    tag_219:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11133:11183  uint256[] memory currentEarnings = earned(account) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11236  lastTimeRewardApplicable() */\n      tag_220\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11234  lastTimeRewardApplicable */\n      tag_84\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11236  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_220:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11193:11207  lastUpdateTime */\n      0x05\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11193:11236  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11251:11257  uint i */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n    tag_221:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11267:11285  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11263:11264  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11263:11285  i < _totalRewardTokens */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11337  RewardToken storage rewardToken */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11340:11353  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11337  RewardToken storage rewardToken */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11359  i + 1 */\n      tag_224\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11355  i */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11358:11359  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11359  i + 1 */\n      tag_126\n      jump\t// in\n    tag_224:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11340:11360  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11360  RewardToken storage rewardToken = _rewardTokens[i + 1] */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11409:11424  rewardsPerToken */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11425:11426  i */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11409:11427  rewardsPerToken[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_225\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_225:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11374:11406  rewardToken.rewardPerTokenStored */\n      0x02\n      dup3\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11374:11427  rewardToken.rewardPerTokenStored = rewardsPerToken[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11445:11466  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      iszero\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11441:11664  if (account != address(0)) {... */\n      tag_226\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11525:11540  currentEarnings */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11541:11542  i */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11525:11543  currentEarnings[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_227\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_227:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11503  _rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11494  _rewards */\n      0x07\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11503  _rewards[account] */\n      dup5\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11504:11521  rewardToken.token */\n      dup7\n      sload\n      swap1\n      swap4\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11522  _rewards[account][rewardToken.token] */\n      dup3\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11543  _rewards[account][rewardToken.token] = currentEarnings[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11633  rewardsPerToken[i] */\n      dup4\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11630  rewardsPerToken */\n      dup5\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11631:11632  i */\n      dup4\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11633  rewardsPerToken[i] */\n      dup2\n      lt\n      tag_228\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_228:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11593  _userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11584  _userRewardPerTokenPaid */\n      0x06\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11593  _userRewardPerTokenPaid[account] */\n      dup5\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11594:11611  rewardToken.token */\n      dup7\n      sload\n      swap1\n      swap4\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11612  _userRewardPerTokenPaid[account][rewardToken.token] */\n      dup3\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11633  _userRewardPerTokenPaid[account][rewardToken.token] = rewardsPerToken[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11441:11664  if (account != address(0)) {... */\n    tag_226:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11287:11290  i++ */\n      dup1\n      tag_229\n      dup2\n      tag_138\n      jump\t// in\n    tag_229:\n      swap2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      jump(tag_221)\n    tag_222:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5963:5969  uint i */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5958:6374  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n    tag_231:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5979:5997  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5975:5976  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5975:5997  i < _totalRewardTokens */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5958:6374  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6051:6061  msg.sender */\n      caller\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6018:6039  uint256 currentReward */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6042:6062  _rewards[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6042:6050  _rewards */\n      0x07\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6042:6062  _rewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6018:6039  uint256 currentReward */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6063:6076  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6018:6039  uint256 currentReward */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6077:6082  i + 1 */\n      tag_234\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6077:6078  i */\n      dup7\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6081:6082  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6077:6082  i + 1 */\n      tag_126\n      jump\t// in\n    tag_234:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6063:6083  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6063:6089  _rewardTokens[i + 1].token */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6042:6090  _rewards[msg.sender][_rewardTokens[i + 1].token] */\n      dup5\n      mstore\n      swap2\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      swap2\n      add\n      swap1\n      keccak256\n      sload\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6108:6125  currentReward > 0 */\n      dup1\n      iszero\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6104:6364  if (currentReward > 0) {... */\n      tag_235\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6154:6164  msg.sender */\n      caller\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6196:6197  0 */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6145:6165  _rewards[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6145:6153  _rewards */\n      0x07\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6145:6165  _rewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6196:6197  0 */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6166:6179  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6196:6197  0 */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6180:6185  i + 1 */\n      tag_236\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6180:6181  i */\n      dup8\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6184:6185  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6180:6185  i + 1 */\n      tag_126\n      jump\t// in\n    tag_236:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6166:6186  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6166:6192  _rewardTokens[i + 1].token */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6145:6193  _rewards[msg.sender][_rewardTokens[i + 1].token] */\n      dup5\n      mstore\n      swap2\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      swap2\n      add\n      dup2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6145:6197  _rewards[msg.sender][_rewardTokens[i + 1].token] = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6215:6289  IERC20(_rewardTokens[i + 1].token).safeTransfer(msg.sender, currentReward) */\n      tag_237\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6263:6273  msg.sender */\n      caller\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6275:6288  currentReward */\n      dup4\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6222:6235  _rewardTokens */\n      0x09\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6236:6241  i + 1 */\n      tag_238\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6236:6237  i */\n      dup8\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6166:6192  _rewardTokens[i + 1].token */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6236:6241  i + 1 */\n      tag_126\n      jump\t// in\n    tag_238:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6222:6242  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6222:6248  _rewardTokens[i + 1].token */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6215:6289  IERC20(_rewardTokens[i + 1].token).safeTransfer(msg.sender, currentReward) */\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6215:6262  IERC20(_rewardTokens[i + 1].token).safeTransfer */\n      tag_212\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6215:6289  IERC20(_rewardTokens[i + 1].token).safeTransfer(msg.sender, currentReward) */\n      jump\t// in\n    tag_237:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6312:6349  RewardPaid(msg.sender, currentReward) */\n      mload(0x40)\n        /* \"#utility.yul\":11308:11333   */\n      dup2\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6323:6333  msg.sender */\n      caller\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6312:6349  RewardPaid(msg.sender, currentReward) */\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n      swap1\n        /* \"#utility.yul\":11296:11298   */\n      0x20\n        /* \"#utility.yul\":11281:11299   */\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6312:6349  RewardPaid(msg.sender, currentReward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6104:6364  if (currentReward > 0) {... */\n    tag_235:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5999:6002  i++ */\n      dup1\n      tag_240\n      dup2\n      tag_138\n      jump\t// in\n    tag_240:\n      swap2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5958:6374  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      jump(tag_231)\n    tag_232:\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5882:6380  function getReward() public nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9830:10679  function removeRewardToken(address token) public onlyOwner updateReward(address(0)) {... */\n    tag_65:\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1101:1107  _owner */\n      sload(0x01)\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1101:1107  _owner */\n      and\n        /* \"github/nobi/staking/contracts/helpers/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      eq\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9177:9179   */\n      0x20\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9159:9180   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9196:9214   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9189:9219   */\n      mstore\n        /* \"#utility.yul\":9255:9289   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9235:9253   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9228:9290   */\n      mstore\n        /* \"#utility.yul\":9307:9325   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_146\n        /* \"#utility.yul\":9149:9331   */\n      jump\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_244:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9910:9911  0 */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11072:11104  uint256[] memory rewardsPerToken */\n      dup1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11123  rewardPerToken() */\n      tag_247\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11121  rewardPerToken */\n      tag_105\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11123  rewardPerToken() */\n      jump\t// in\n    tag_247:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11072:11123  uint256[] memory rewardsPerToken = rewardPerToken() */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11133:11165  uint256[] memory currentEarnings */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11183  earned(account) */\n      tag_248\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11175:11182  account */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11174  earned */\n      tag_38\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11183  earned(account) */\n      jump\t// in\n    tag_248:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11133:11183  uint256[] memory currentEarnings = earned(account) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11236  lastTimeRewardApplicable() */\n      tag_249\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11234  lastTimeRewardApplicable */\n      tag_84\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11236  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_249:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11193:11207  lastUpdateTime */\n      0x05\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11193:11236  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11251:11257  uint i */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n    tag_250:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11267:11285  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11263:11264  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11263:11285  i < _totalRewardTokens */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11337  RewardToken storage rewardToken */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11340:11353  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11337  RewardToken storage rewardToken */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11359  i + 1 */\n      tag_253\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11355  i */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11358:11359  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11359  i + 1 */\n      tag_126\n      jump\t// in\n    tag_253:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11340:11360  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11360  RewardToken storage rewardToken = _rewardTokens[i + 1] */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11409:11424  rewardsPerToken */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11425:11426  i */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11409:11427  rewardsPerToken[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_254\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_254:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11374:11406  rewardToken.rewardPerTokenStored */\n      0x02\n      dup3\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11374:11427  rewardToken.rewardPerTokenStored = rewardsPerToken[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11445:11466  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      iszero\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11441:11664  if (account != address(0)) {... */\n      tag_255\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11525:11540  currentEarnings */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11541:11542  i */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11525:11543  currentEarnings[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_256\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_256:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11503  _rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11494  _rewards */\n      0x07\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11503  _rewards[account] */\n      dup5\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11504:11521  rewardToken.token */\n      dup7\n      sload\n      swap1\n      swap4\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11522  _rewards[account][rewardToken.token] */\n      dup3\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11543  _rewards[account][rewardToken.token] = currentEarnings[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11633  rewardsPerToken[i] */\n      dup4\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11630  rewardsPerToken */\n      dup5\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11631:11632  i */\n      dup4\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11633  rewardsPerToken[i] */\n      dup2\n      lt\n      tag_257\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_257:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11593  _userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11584  _userRewardPerTokenPaid */\n      0x06\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11593  _userRewardPerTokenPaid[account] */\n      dup5\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11594:11611  rewardToken.token */\n      dup7\n      sload\n      swap1\n      swap4\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11612  _userRewardPerTokenPaid[account][rewardToken.token] */\n      dup3\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11633  _userRewardPerTokenPaid[account][rewardToken.token] = rewardsPerToken[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11441:11664  if (account != address(0)) {... */\n    tag_255:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11287:11290  i++ */\n      dup1\n      tag_258\n      dup2\n      tag_138\n      jump\t// in\n    tag_258:\n      swap2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      jump(tag_250)\n    tag_251:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9953:9954  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9932:9950  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9932:9954  _totalRewardTokens > 1 */\n      gt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9924:9986  require(_totalRewardTokens > 1, \"Cannot have 0 reward tokens\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7027:7029   */\n      0x20\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9924:9986  require(_totalRewardTokens > 1, \"Cannot have 0 reward tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7009:7030   */\n      mstore\n        /* \"#utility.yul\":7066:7068   */\n      0x1b\n        /* \"#utility.yul\":7046:7064   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7039:7069   */\n      mstore\n        /* \"#utility.yul\":7105:7134   */\n      0x43616e6e6f74206861766520302072657761726420746f6b656e730000000000\n        /* \"#utility.yul\":7085:7103   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7078:7135   */\n      mstore\n        /* \"#utility.yul\":7152:7170   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9924:9986  require(_totalRewardTokens > 1, \"Cannot have 0 reward tokens\") */\n      tag_146\n        /* \"#utility.yul\":6999:7176   */\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9924:9986  require(_totalRewardTokens > 1, \"Cannot have 0 reward tokens\") */\n    tag_260:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10061:10087  _rewardTokenToIndex[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10040:10058  uint indexToDelete */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10061:10087  _rewardTokenToIndex[token] */\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10061:10080  _rewardTokenToIndex */\n      0x0a\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10061:10087  _rewardTokenToIndex[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10191:10639  for (uint i = indexToDelete; i <= _totalRewardTokens; i++) {... */\n    tag_263:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10225:10243  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10220:10221  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10220:10243  i <= _totalRewardTokens */\n      gt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10191:10639  for (uint i = indexToDelete; i <= _totalRewardTokens; i++) {... */\n      tag_264\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10308:10339  RewardToken storage rewardToken */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10342:10355  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10308:10339  RewardToken storage rewardToken */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10356:10361  i + 1 */\n      tag_266\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10356:10357  i */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10360:10361  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10356:10361  i + 1 */\n      tag_126\n      jump\t// in\n    tag_266:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10342:10362  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10439:10455  _rewardTokens[i] */\n      dup6\n      dup3\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10439:10452  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10439:10455  _rewardTokens[i] */\n      swap4\n      dup5\n      swap1\n      mstore\n      swap2\n      dup2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10439:10469  _rewardTokens[i] = rewardToken */\n      dup3\n      sload\n      dup2\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      or\n      dup2\n      sstore\n      0x01\n      dup1\n      dup5\n      add\n      sload\n      dup2\n      dup4\n      add\n      sstore\n      0x02\n      dup1\n      dup6\n      add\n      sload\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10342:10362  _rewardTokens[i + 1] */\n      swap2\n      swap4\n      pop\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10536:10541  i + 1 */\n      tag_267\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10453:10454  i */\n      dup6\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10536:10541  i + 1 */\n      tag_126\n      jump\t// in\n    tag_267:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10522:10542  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10515:10542  delete _rewardTokens[i + 1] */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup3\n      swap1\n      sstore\n      0x02\n      add\n      dup2\n      swap1\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10606:10623  rewardToken.token */\n      swap3\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10515:10542  delete _rewardTokens[i + 1] */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10606:10623  rewardToken.token */\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10586:10624  _rewardTokenToIndex[rewardToken.token] */\n      dup4\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10586:10605  _rewardTokenToIndex */\n      0x0a\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10586:10624  _rewardTokenToIndex[rewardToken.token] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10586:10628  _rewardTokenToIndex[rewardToken.token] = i */\n      dup2\n      swap1\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10627:10628  i */\n      dup1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10245:10248  i++ */\n      tag_268\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10627:10628  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10245:10248  i++ */\n      tag_138\n      jump\t// in\n    tag_268:\n      swap2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10191:10639  for (uint i = indexToDelete; i <= _totalRewardTokens; i++) {... */\n      jump(tag_263)\n    tag_264:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10671:10672  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10649:10667  _totalRewardTokens */\n      0x08\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10649:10672  _totalRewardTokens -= 1 */\n      dup3\n      dup3\n      sload\n      tag_269\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_269:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":9830:10679  function removeRewardToken(address token) public onlyOwner updateReward(address(0)) {... */\n      jump\t// out\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6526:7913  function depositRewardTokens(uint256[] memory amount) external onlyOwner {... */\n    tag_69:\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1101:1107  _owner */\n      sload(0x01)\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1101:1107  _owner */\n      and\n        /* \"github/nobi/staking/contracts/helpers/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      eq\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9177:9179   */\n      0x20\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9159:9180   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9196:9214   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9189:9219   */\n      mstore\n        /* \"#utility.yul\":9255:9289   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9235:9253   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9228:9290   */\n      mstore\n        /* \"#utility.yul\":9307:9325   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_146\n        /* \"#utility.yul\":9149:9331   */\n      jump\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_273:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6634:6652  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6617:6623  amount */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6617:6630  amount.length */\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6617:6652  amount.length == _totalRewardTokens */\n      eq\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6609:6670  require(amount.length == _totalRewardTokens, \"Wrong amounts\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":8489:8491   */\n      0x20\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6609:6670  require(amount.length == _totalRewardTokens, \"Wrong amounts\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8471:8492   */\n      mstore\n        /* \"#utility.yul\":8528:8530   */\n      0x0d\n        /* \"#utility.yul\":8508:8526   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8501:8531   */\n      mstore\n        /* \"#utility.yul\":8567:8582   */\n      0x57726f6e6720616d6f756e747300000000000000000000000000000000000000\n        /* \"#utility.yul\":8547:8565   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8540:8583   */\n      mstore\n        /* \"#utility.yul\":8600:8618   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6609:6670  require(amount.length == _totalRewardTokens, \"Wrong amounts\") */\n      tag_146\n        /* \"#utility.yul\":8461:8624   */\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6609:6670  require(amount.length == _totalRewardTokens, \"Wrong amounts\") */\n    tag_276:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6762:6768  uint i */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6757:7759  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n    tag_279:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6778:6796  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6774:6775  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6774:6796  i < _totalRewardTokens */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6757:7759  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6817:6848  RewardToken storage rewardToken */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6851:6864  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6817:6848  RewardToken storage rewardToken */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6865:6870  i + 1 */\n      tag_282\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6865:6866  i */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6869:6870  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6865:6870  i + 1 */\n      tag_126\n      jump\t// in\n    tag_282:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6851:6871  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6914:6931  rewardToken.token */\n      dup1\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6907:6957  IERC20(rewardToken.token).balanceOf(address(this)) */\n      swap3\n      mload\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6951:6955  this */\n      address\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6907:6957  IERC20(rewardToken.token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2704:2778   */\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6851:6871  _rewardTokens[i + 1] */\n      swap1\n      swap4\n      pop\n      swap1\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6914:6931  rewardToken.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6907:6942  IERC20(rewardToken.token).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2677:2695   */\n      0x24\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6907:6957  IERC20(rewardToken.token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_284\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_284:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_286:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_287\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_287:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6885:6957  uint256 prevBalance = IERC20(rewardToken.token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6971:7051  IERC20(rewardToken.token).safeTransferFrom(msg.sender, address(this), amount[i]) */\n      tag_288\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7014:7024  msg.sender */\n      caller\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7034:7038  this */\n      address\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7041:7047  amount */\n      dup7\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7048:7049  i */\n      dup7\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7041:7050  amount[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_289\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_289:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6978:6995  rewardToken.token */\n      dup6\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6971:7051  IERC20(rewardToken.token).safeTransferFrom(msg.sender, address(this), amount[i]) */\n      swap2\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6971:7013  IERC20(rewardToken.token).safeTransferFrom */\n      tag_290\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6971:7051  IERC20(rewardToken.token).safeTransferFrom(msg.sender, address(this), amount[i]) */\n      jump\t// in\n    tag_288:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7086:7103  rewardToken.token */\n      dup2\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7079:7129  IERC20(rewardToken.token).balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7123:7127  this */\n      address\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7079:7129  IERC20(rewardToken.token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2704:2778   */\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7065:7076  uint reward */\n      0x00\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7079:7146  IERC20(rewardToken.token).balanceOf(address(this)).sub(prevBalance) */\n      tag_291\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7134:7145  prevBalance */\n      dup5\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7086:7103  rewardToken.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7079:7114  IERC20(rewardToken.token).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2677:2695   */\n      0x24\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7079:7129  IERC20(rewardToken.token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_293\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_293:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_295\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_295:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_296\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_296:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7079:7133  IERC20(rewardToken.token).balanceOf(address(this)).sub */\n      swap1\n      tag_132\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7079:7146  IERC20(rewardToken.token).balanceOf(address(this)).sub(prevBalance) */\n      jump\t// in\n    tag_291:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7065:7146  uint reward = IERC20(rewardToken.token).balanceOf(address(this)).sub(prevBalance) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7183:7195  periodFinish */\n      sload(0x03)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7164:7179  block.timestamp */\n      timestamp\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7164:7195  block.timestamp >= periodFinish */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7160:7532  if (block.timestamp >= periodFinish) {... */\n      tag_297\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7251:7266  rewardsDuration */\n      sload(0x04)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7240:7267  reward.div(rewardsDuration) */\n      tag_298\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7240:7246  reward */\n      dup3\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7240:7250  reward.div */\n      tag_134\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7240:7267  reward.div(rewardsDuration) */\n      jump\t// in\n    tag_298:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7215:7237  rewardToken.rewardRate */\n      0x01\n      dup5\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7215:7267  rewardToken.rewardRate = reward.div(rewardsDuration) */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7160:7532  if (block.timestamp >= periodFinish) {... */\n      jump(tag_299)\n    tag_297:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7326:7338  periodFinish */\n      sload(0x03)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7306:7323  uint256 remaining */\n      0x00\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7326:7359  periodFinish.sub(block.timestamp) */\n      tag_300\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7343:7358  block.timestamp */\n      timestamp\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7326:7342  periodFinish.sub */\n      tag_132\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7326:7359  periodFinish.sub(block.timestamp) */\n      jump\t// in\n    tag_300:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7306:7359  uint256 remaining = periodFinish.sub(block.timestamp) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7377:7393  uint256 leftover */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7396:7433  remaining.mul(rewardToken.rewardRate) */\n      tag_301\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7410:7421  rewardToken */\n      dup6\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7410:7432  rewardToken.rewardRate */\n      0x01\n      add\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7396:7405  remaining */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7396:7409  remaining.mul */\n      tag_133\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7396:7433  remaining.mul(rewardToken.rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_301:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7501:7516  rewardsDuration */\n      sload(0x04)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7377:7433  uint256 leftover = remaining.mul(rewardToken.rewardRate) */\n      swap1\n      swap2\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7476:7517  reward.add(leftover).div(rewardsDuration) */\n      tag_302\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7476:7496  reward.add(leftover) */\n      tag_129\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7476:7482  reward */\n      dup6\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7377:7433  uint256 leftover = remaining.mul(rewardToken.rewardRate) */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7476:7486  reward.add */\n      tag_135\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7476:7496  reward.add(leftover) */\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7476:7517  reward.add(leftover).div(rewardsDuration) */\n    tag_302:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7451:7473  rewardToken.rewardRate */\n      0x01\n      dup7\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7451:7517  rewardToken.rewardRate = reward.add(leftover).div(rewardsDuration) */\n      sstore\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7160:7532  if (block.timestamp >= periodFinish) {... */\n    tag_299:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7571:7588  rewardToken.token */\n      dup3\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7564:7614  IERC20(rewardToken.token).balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7608:7612  this */\n      address\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7564:7614  IERC20(rewardToken.token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2704:2778   */\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7546:7561  uint256 balance */\n      0x00\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7571:7588  rewardToken.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7564:7599  IERC20(rewardToken.token).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2677:2695   */\n      0x24\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7564:7614  IERC20(rewardToken.token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_305\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_305:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_307\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_307:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_308\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_308:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7546:7614  uint256 balance = IERC20(rewardToken.token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7662:7690  balance.div(rewardsDuration) */\n      tag_309\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7674:7689  rewardsDuration */\n      sload(0x04)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7662:7669  balance */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7662:7673  balance.div */\n      tag_134\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7662:7690  balance.div(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_309:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7636:7647  rewardToken */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7636:7658  rewardToken.rewardRate */\n      0x01\n      add\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7636:7690  rewardToken.rewardRate <= balance.div(rewardsDuration) */\n      gt\n      iszero\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7628:7710  require(rewardToken.rewardRate <= balance.div(rewardsDuration), \"Reward too high\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9896:9898   */\n      0x20\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7628:7710  require(rewardToken.rewardRate <= balance.div(rewardsDuration), \"Reward too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9878:9899   */\n      mstore\n        /* \"#utility.yul\":9935:9937   */\n      0x0f\n        /* \"#utility.yul\":9915:9933   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9908:9938   */\n      mstore\n        /* \"#utility.yul\":9974:9991   */\n      0x52657761726420746f6f20686967680000000000000000000000000000000000\n        /* \"#utility.yul\":9954:9972   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9947:9992   */\n      mstore\n        /* \"#utility.yul\":10009:10027   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7628:7710  require(rewardToken.rewardRate <= balance.div(rewardsDuration), \"Reward too high\") */\n      tag_146\n        /* \"#utility.yul\":9868:10033   */\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7628:7710  require(rewardToken.rewardRate <= balance.div(rewardsDuration), \"Reward too high\") */\n    tag_310:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7729:7748  RewardAdded(reward) */\n      mload(0x40)\n        /* \"#utility.yul\":11308:11333   */\n      dup3\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7729:7748  RewardAdded(reward) */\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n      swap1\n        /* \"#utility.yul\":11296:11298   */\n      0x20\n        /* \"#utility.yul\":11281:11299   */\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7729:7748  RewardAdded(reward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6757:7759  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6798:6801  i++ */\n      dup1\n      dup1\n      tag_314\n      swap1\n      tag_138\n      jump\t// in\n    tag_314:\n      swap2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6757:7759  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      jump(tag_279)\n    tag_280:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7786:7801  block.timestamp */\n      timestamp\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7769:7783  lastUpdateTime */\n      0x05\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7769:7801  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7846:7861  rewardsDuration */\n      sload(0x04)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7826:7862  block.timestamp.add(rewardsDuration) */\n      tag_315\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7786:7801  block.timestamp */\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7826:7845  block.timestamp.add */\n      tag_135\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7826:7862  block.timestamp.add(rewardsDuration) */\n      jump\t// in\n    tag_315:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7811:7823  periodFinish */\n      0x03\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7811:7862  periodFinish = block.timestamp.add(rewardsDuration) */\n      sstore\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6526:7913  function depositRewardTokens(uint256[] memory amount) external onlyOwner {... */\n      jump\t// out\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10685:10988  function emergencyWithdrawal(address token) external onlyOwner updateReward(address(0)) {... */\n    tag_72:\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1101:1107  _owner */\n      sload(0x01)\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1101:1107  _owner */\n      and\n        /* \"github/nobi/staking/contracts/helpers/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      eq\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9177:9179   */\n      0x20\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9159:9180   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9196:9214   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9189:9219   */\n      mstore\n        /* \"#utility.yul\":9255:9289   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9235:9253   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9228:9290   */\n      mstore\n        /* \"#utility.yul\":9307:9325   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_146\n        /* \"#utility.yul\":9149:9331   */\n      jump\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_319:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10769:10770  0 */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11072:11104  uint256[] memory rewardsPerToken */\n      dup1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11123  rewardPerToken() */\n      tag_322\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11121  rewardPerToken */\n      tag_105\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11123  rewardPerToken() */\n      jump\t// in\n    tag_322:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11072:11123  uint256[] memory rewardsPerToken = rewardPerToken() */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11133:11165  uint256[] memory currentEarnings */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11183  earned(account) */\n      tag_323\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11175:11182  account */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11174  earned */\n      tag_38\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11183  earned(account) */\n      jump\t// in\n    tag_323:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11133:11183  uint256[] memory currentEarnings = earned(account) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11236  lastTimeRewardApplicable() */\n      tag_324\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11234  lastTimeRewardApplicable */\n      tag_84\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11236  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_324:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11193:11207  lastUpdateTime */\n      0x05\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11193:11236  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11251:11257  uint i */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n    tag_325:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11267:11285  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11263:11264  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11263:11285  i < _totalRewardTokens */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      iszero\n      tag_326\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11337  RewardToken storage rewardToken */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11340:11353  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11337  RewardToken storage rewardToken */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11359  i + 1 */\n      tag_328\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11355  i */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11358:11359  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11359  i + 1 */\n      tag_126\n      jump\t// in\n    tag_328:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11340:11360  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11360  RewardToken storage rewardToken = _rewardTokens[i + 1] */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11409:11424  rewardsPerToken */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11425:11426  i */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11409:11427  rewardsPerToken[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_329\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_329:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11374:11406  rewardToken.rewardPerTokenStored */\n      0x02\n      dup3\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11374:11427  rewardToken.rewardPerTokenStored = rewardsPerToken[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11445:11466  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      iszero\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11441:11664  if (account != address(0)) {... */\n      tag_330\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11525:11540  currentEarnings */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11541:11542  i */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11525:11543  currentEarnings[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_331\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_331:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11503  _rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11494  _rewards */\n      0x07\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11503  _rewards[account] */\n      dup5\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11504:11521  rewardToken.token */\n      dup7\n      sload\n      swap1\n      swap4\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11522  _rewards[account][rewardToken.token] */\n      dup3\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11543  _rewards[account][rewardToken.token] = currentEarnings[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11633  rewardsPerToken[i] */\n      dup4\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11630  rewardsPerToken */\n      dup5\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11631:11632  i */\n      dup4\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11633  rewardsPerToken[i] */\n      dup2\n      lt\n      tag_332\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_332:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11593  _userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11584  _userRewardPerTokenPaid */\n      0x06\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11593  _userRewardPerTokenPaid[account] */\n      dup5\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11594:11611  rewardToken.token */\n      dup7\n      sload\n      swap1\n      swap4\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11612  _userRewardPerTokenPaid[account][rewardToken.token] */\n      dup3\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11633  _userRewardPerTokenPaid[account][rewardToken.token] = rewardsPerToken[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11441:11664  if (account != address(0)) {... */\n    tag_330:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11287:11290  i++ */\n      dup1\n      tag_333\n      dup2\n      tag_138\n      jump\t// in\n    tag_333:\n      swap2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      jump(tag_325)\n    tag_326:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10801:10839  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10833:10837  this */\n      address\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10801:10839  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2704:2778   */\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10783:10798  uint256 balance */\n      0x00\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10801:10824  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2677:2695   */\n      0x24\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10801:10839  IERC20(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_336\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_336:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_338\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_338:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_339\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_339:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10783:10839  uint256 balance = IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10867:10868  0 */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10857:10864  balance */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10857:10868  balance > 0 */\n      gt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10849:10897  require(balance > 0, \"Contract holds no tokens\") */\n      tag_340\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":11011:11013   */\n      0x20\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10849:10897  require(balance > 0, \"Contract holds no tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10993:11014   */\n      mstore\n        /* \"#utility.yul\":11050:11052   */\n      0x18\n        /* \"#utility.yul\":11030:11048   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11023:11053   */\n      mstore\n        /* \"#utility.yul\":11089:11115   */\n      0x436f6e747261637420686f6c6473206e6f20746f6b656e730000000000000000\n        /* \"#utility.yul\":11069:11087   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11062:11116   */\n      mstore\n        /* \"#utility.yul\":11133:11151   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10849:10897  require(balance > 0, \"Contract holds no tokens\") */\n      tag_146\n        /* \"#utility.yul\":10983:11157   */\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10849:10897  require(balance > 0, \"Contract holds no tokens\") */\n    tag_340:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10914:10919  token */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10907:10929  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10930:10937  owner() */\n      tag_343\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1101:1107  _owner */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x01))\n      swap1\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10930:10937  owner() */\n    tag_343:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10907:10947  IERC20(token).transfer(owner(), balance) */\n      mload(0x40)\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n        /* \"#utility.yul\":3396:3438   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3384:3439   */\n      swap1\n      swap2\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10907:10947  IERC20(token).transfer(owner(), balance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3366:3440   */\n      mstore\n        /* \"#utility.yul\":3456:3474   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3449:3483   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":3339:3357   */\n      0x44\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10907:10947  IERC20(token).transfer(owner(), balance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_346\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_346:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_348\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_348:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_349\n      swap2\n      swap1\n      tag_350\n      jump\t// in\n    tag_349:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10957:10981  removeRewardToken(token) */\n      tag_351\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10975:10980  token */\n      dup6\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10957:10974  removeRewardToken */\n      tag_65\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10957:10981  removeRewardToken(token) */\n      jump\t// in\n    tag_351:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11683:11684  _ */\n      pop\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1311:1312  _ */\n      pop\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":10685:10988  function emergencyWithdrawal(address token) external onlyOwner updateReward(address(0)) {... */\n      pop\n      jump\t// out\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1661:1762  function renounceOwnership() public virtual onlyOwner {... */\n    tag_78:\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1101:1107  _owner */\n      sload(0x01)\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1101:1107  _owner */\n      and\n        /* \"github/nobi/staking/contracts/helpers/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      eq\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_356\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9177:9179   */\n      0x20\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9159:9180   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9196:9214   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9189:9219   */\n      mstore\n        /* \"#utility.yul\":9255:9289   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9235:9253   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9228:9290   */\n      mstore\n        /* \"#utility.yul\":9307:9325   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_146\n        /* \"#utility.yul\":9149:9331   */\n      jump\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_356:\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1725:1755  _transferOwnership(address(0)) */\n      tag_359\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1752:1753  0 */\n      0x00\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1725:1743  _transferOwnership */\n      tag_360\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1725:1755  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_359:\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1661:1762  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1986:2115  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_84:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2043:2050  uint256 */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2069:2108  Math.min(block.timestamp, periodFinish) */\n      tag_362\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2078:2093  block.timestamp */\n      timestamp\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2095:2107  periodFinish */\n      sload(0x03)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2069:2077  Math.min */\n      tag_363\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2069:2108  Math.min(block.timestamp, periodFinish) */\n      jump\t// in\n    tag_362:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2062:2108  return Math.min(block.timestamp, periodFinish) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":1986:2115  function lastTimeRewardApplicable() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3126:3653  function rewardForToken(address token) public view returns (uint256) {... */\n    tag_92:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3221:3247  _rewardTokenToIndex[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3186:3193  uint256 */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3221:3247  _rewardTokenToIndex[token] */\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3221:3240  _rewardTokenToIndex */\n      0x0a\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3221:3247  _rewardTokenToIndex[token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3261:3273  _totalSupply */\n      sload(0x0b)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3257:3647  if (_totalSupply == 0) {... */\n      tag_366\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3301:3321  _rewardTokens[index] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3301:3314  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3301:3321  _rewardTokens[index] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3301:3342  _rewardTokens[index].rewardPerTokenStored */\n      0x02\n      add\n      sload\n      swap3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3126:3653  function rewardForToken(address token) public view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3257:3647  if (_totalSupply == 0) {... */\n    tag_366:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3380:3636  _rewardTokens[index].rewardPerTokenStored.add(... */\n      tag_368\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3443:3622  lastTimeRewardApplicable()... */\n      tag_369\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3609:3621  _totalSupply */\n      sload(0x0b)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3443:3587  lastTimeRewardApplicable()... */\n      tag_129\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3582:3586  1e18 */\n      0x0de0b6b3a7640000\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3443:3560  lastTimeRewardApplicable()... */\n      tag_372\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3528:3541  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3528:3548  _rewardTokens[index] */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3542:3547  index */\n      dup9\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3528:3548  _rewardTokens[index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3528:3559  _rewardTokens[index].rewardRate */\n      0x01\n      add\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3443:3506  lastTimeRewardApplicable()... */\n      tag_372\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3491:3505  lastUpdateTime */\n      sload(0x05)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3443:3469  lastTimeRewardApplicable() */\n      tag_296\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3443:3467  lastTimeRewardApplicable */\n      tag_84\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3443:3469  lastTimeRewardApplicable() */\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3443:3506  lastTimeRewardApplicable()... */\n    tag_372:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3443:3527  lastTimeRewardApplicable()... */\n      swap1\n      tag_133\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3443:3560  lastTimeRewardApplicable()... */\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3443:3622  lastTimeRewardApplicable()... */\n    tag_369:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3380:3400  _rewardTokens[index] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3380:3393  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3380:3400  _rewardTokens[index] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3380:3421  _rewardTokens[index].rewardPerTokenStored */\n      0x02\n      add\n      sload\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3380:3425  _rewardTokens[index].rewardPerTokenStored.add */\n      tag_135\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3380:3636  _rewardTokens[index].rewardPerTokenStored.add(... */\n      jump\t// in\n    tag_368:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3373:3636  return _rewardTokens[index].rewardPerTokenStored.add(... */\n      swap4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3126:3653  function rewardForToken(address token) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4947:5519  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {... */\n    tag_96:\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_375\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10651:10653   */\n      0x20\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10633:10654   */\n      mstore\n        /* \"#utility.yul\":10690:10692   */\n      0x1f\n        /* \"#utility.yul\":10670:10688   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10663:10693   */\n      mstore\n        /* \"#utility.yul\":10729:10762   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10709:10727   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10702:10763   */\n      mstore\n        /* \"#utility.yul\":10780:10798   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_146\n        /* \"#utility.yul\":10623:10804   */\n      jump\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_375:\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      swap1\n      dup2\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5013:5023  msg.sender */\n      caller\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11123  rewardPerToken() */\n      tag_378\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11121  rewardPerToken */\n      tag_105\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11123  rewardPerToken() */\n      jump\t// in\n    tag_378:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11072:11123  uint256[] memory rewardsPerToken = rewardPerToken() */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11133:11165  uint256[] memory currentEarnings */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11183  earned(account) */\n      tag_379\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11175:11182  account */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11174  earned */\n      tag_38\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11183  earned(account) */\n      jump\t// in\n    tag_379:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11133:11183  uint256[] memory currentEarnings = earned(account) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11236  lastTimeRewardApplicable() */\n      tag_380\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11234  lastTimeRewardApplicable */\n      tag_84\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11236  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_380:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11193:11207  lastUpdateTime */\n      0x05\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11193:11236  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11251:11257  uint i */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n    tag_381:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11267:11285  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11263:11264  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11263:11285  i < _totalRewardTokens */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      iszero\n      tag_382\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11337  RewardToken storage rewardToken */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11340:11353  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11337  RewardToken storage rewardToken */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11359  i + 1 */\n      tag_384\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11355  i */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11358:11359  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11359  i + 1 */\n      tag_126\n      jump\t// in\n    tag_384:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11340:11360  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11360  RewardToken storage rewardToken = _rewardTokens[i + 1] */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11409:11424  rewardsPerToken */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11425:11426  i */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11409:11427  rewardsPerToken[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_385\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_385:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11374:11406  rewardToken.rewardPerTokenStored */\n      0x02\n      dup3\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11374:11427  rewardToken.rewardPerTokenStored = rewardsPerToken[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11445:11466  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      iszero\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11441:11664  if (account != address(0)) {... */\n      tag_386\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11525:11540  currentEarnings */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11541:11542  i */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11525:11543  currentEarnings[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_387\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_387:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11503  _rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11494  _rewards */\n      0x07\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11503  _rewards[account] */\n      dup5\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11504:11521  rewardToken.token */\n      dup7\n      sload\n      swap1\n      swap4\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11522  _rewards[account][rewardToken.token] */\n      dup3\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11543  _rewards[account][rewardToken.token] = currentEarnings[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11633  rewardsPerToken[i] */\n      dup4\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11630  rewardsPerToken */\n      dup5\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11631:11632  i */\n      dup4\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11633  rewardsPerToken[i] */\n      dup2\n      lt\n      tag_388\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_388:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11593  _userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11584  _userRewardPerTokenPaid */\n      0x06\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11593  _userRewardPerTokenPaid[account] */\n      dup5\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11594:11611  rewardToken.token */\n      dup7\n      sload\n      swap1\n      swap4\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11612  _userRewardPerTokenPaid[account][rewardToken.token] */\n      dup3\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11633  _userRewardPerTokenPaid[account][rewardToken.token] = rewardsPerToken[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11441:11664  if (account != address(0)) {... */\n    tag_386:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11287:11290  i++ */\n      dup1\n      tag_389\n      dup2\n      tag_138\n      jump\t// in\n    tag_389:\n      swap2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      jump(tag_381)\n    tag_382:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5052:5053  0 */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5043:5049  amount */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5043:5053  amount > 0 */\n      gt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5035:5072  require(amount > 0, \"Cannot stake 0\") */\n      tag_391\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6684:6686   */\n      0x20\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5035:5072  require(amount > 0, \"Cannot stake 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6666:6687   */\n      mstore\n        /* \"#utility.yul\":6723:6725   */\n      0x0e\n        /* \"#utility.yul\":6703:6721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6696:6726   */\n      mstore\n        /* \"#utility.yul\":6762:6778   */\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n        /* \"#utility.yul\":6742:6760   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6735:6779   */\n      mstore\n        /* \"#utility.yul\":6796:6814   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5035:5072  require(amount > 0, \"Cannot stake 0\") */\n      tag_146\n        /* \"#utility.yul\":6656:6820   */\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5035:5072  require(amount > 0, \"Cannot stake 0\") */\n    tag_391:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5107:5119  stakingToken */\n      sload(0x02)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5107:5144  stakingToken.balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5138:5142  this */\n      address\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5107:5144  stakingToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2704:2778   */\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5082:5104  uint256 currentBalance */\n      0x00\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5107:5119  stakingToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5107:5129  stakingToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2677:2695   */\n      0x24\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5107:5144  stakingToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_395\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_395:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_397\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_397:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_398\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_398:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5154:5166  stakingToken */\n      sload(0x02)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5082:5144  uint256 currentBalance = stakingToken.balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5154:5218  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_399\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5154:5166  stakingToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5184:5194  msg.sender */\n      caller\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5204:5208  this */\n      address\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5211:5217  amount */\n      dup9\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5154:5183  stakingToken.safeTransferFrom */\n      tag_290\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5154:5218  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_399:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5249:5261  stakingToken */\n      sload(0x02)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5249:5286  stakingToken.balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5280:5284  this */\n      address\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5249:5286  stakingToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2704:2778   */\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5228:5246  uint256 newBalance */\n      0x00\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5249:5261  stakingToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5249:5271  stakingToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2677:2695   */\n      0x24\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5249:5286  stakingToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_401\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_401:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_403\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_403:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_404\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_404:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5228:5286  uint256 newBalance = stakingToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5296:5314  uint256 supplyDiff */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5317:5347  newBalance.sub(currentBalance) */\n      tag_405\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5228:5286  uint256 newBalance = stakingToken.balanceOf(address(this)) */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5332:5346  currentBalance */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5317:5331  newBalance.sub */\n      tag_132\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5317:5347  newBalance.sub(currentBalance) */\n      jump\t// in\n    tag_405:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5372:5384  _totalSupply */\n      sload(0x0b)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5296:5347  uint256 supplyDiff = newBalance.sub(currentBalance) */\n      swap1\n      swap2\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5372:5400  _totalSupply.add(supplyDiff) */\n      tag_406\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5296:5347  uint256 supplyDiff = newBalance.sub(currentBalance) */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5372:5388  _totalSupply.add */\n      tag_135\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5372:5400  _totalSupply.add(supplyDiff) */\n      jump\t// in\n    tag_406:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5357:5369  _totalSupply */\n      0x0b\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5357:5400  _totalSupply = _totalSupply.add(supplyDiff) */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5444:5454  msg.sender */\n      caller\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5434:5455  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5434:5443  _balances */\n      0x0c\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5434:5455  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5434:5471  _balances[msg.sender].add(supplyDiff) */\n      tag_407\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5460:5470  supplyDiff */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5434:5459  _balances[msg.sender].add */\n      tag_135\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5434:5471  _balances[msg.sender].add(supplyDiff) */\n      jump\t// in\n    tag_407:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5420:5430  msg.sender */\n      caller\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5410:5431  _balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5410:5419  _balances */\n      0x0c\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5410:5431  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5410:5471  _balances[msg.sender] = _balances[msg.sender].add(supplyDiff) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5486:5512  Staked(msg.sender, amount) */\n      swap1\n      mload\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      swap1\n      tag_408\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5505:5511  amount */\n      dup11\n        /* \"#utility.yul\":11308:11333   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11296:11298   */\n      0x20\n        /* \"#utility.yul\":11281:11299   */\n      add\n      swap1\n        /* \"#utility.yul\":11263:11339   */\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":5486:5512  Staked(msg.sender, amount) */\n    tag_408:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":4947:5519  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3659:3949  function getRewardTokens() public view returns (RewardToken[] memory) {... */\n    tag_98:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3707:3727  RewardToken[] memory */\n      0x60\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3739:3766  RewardToken[] memory tokens */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3787:3805  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3769:3806  new RewardToken[](_totalRewardTokens) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_410\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_410:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_411\n      jumpi\n      dup2\n      0x20\n      add\n    tag_412:\n      tag_413\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_413:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_412\n      jumpi\n      swap1\n      pop\n    tag_411:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3739:3806  RewardToken[] memory tokens = new RewardToken[](_totalRewardTokens) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3821:3827  uint i */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3816:3919  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n    tag_415:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3837:3855  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3833:3834  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3833:3855  i < _totalRewardTokens */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3816:3919  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3888:3901  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3888:3908  _rewardTokens[i + 1] */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3902:3907  i + 1 */\n      tag_418\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3902:3903  i */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3906:3907  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3902:3907  i + 1 */\n      tag_126\n      jump\t// in\n    tag_418:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3888:3908  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3876:3908  tokens[i] = _rewardTokens[i + 1] */\n      dup2\n      mload\n      0x60\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      add\n      sload\n      swap1\n      dup3\n      add\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3876:3885  tokens[i] */\n      dup3\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3876:3882  tokens */\n      dup4\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3883:3884  i */\n      dup4\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3876:3885  tokens[i] */\n      dup2\n      lt\n      tag_419\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_419:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3876:3908  tokens[i] = _rewardTokens[i + 1] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3857:3860  i++ */\n      dup1\n      dup1\n      tag_420\n      swap1\n      tag_138\n      jump\t// in\n    tag_420:\n      swap2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":3816:3919  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      jump(tag_415)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2268:3076  function rewardPerToken() public view returns (uint256[] memory) {... */\n    tag_105:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2315:2331  uint256[] memory */\n      0x60\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2343:2366  uint256[] memory tokens */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2383:2401  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2369:2402  new uint256[](_totalRewardTokens) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_422\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_422:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_423\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_423:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2343:2402  uint256[] memory tokens = new uint256[](_totalRewardTokens) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2416:2428  _totalSupply */\n      sload(0x0b)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2432:2433  0 */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2416:2433  _totalSupply == 0 */\n      eq\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2412:3046  if (_totalSupply == 0) {... */\n      iszero\n      tag_424\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2454:2460  uint i */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2449:2581  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n    tag_425:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2470:2488  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2466:2467  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2466:2488  i < _totalRewardTokens */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2449:2581  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2525:2538  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2525:2545  _rewardTokens[i + 1] */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2539:2544  i + 1 */\n      tag_428\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2539:2540  i */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2543:2544  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2539:2544  i + 1 */\n      tag_126\n      jump\t// in\n    tag_428:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2525:2545  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2525:2566  _rewardTokens[i + 1].rewardPerTokenStored */\n      0x02\n      add\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2513:2519  tokens */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2520:2521  i */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2513:2522  tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_429\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_429:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2513:2566  tokens[i] = _rewardTokens[i + 1].rewardPerTokenStored */\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2490:2493  i++ */\n      dup1\n      tag_430\n      dup2\n      tag_138\n      jump\t// in\n    tag_430:\n      swap2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2449:2581  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      jump(tag_425)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2412:3046  if (_totalSupply == 0) {... */\n    tag_424:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2616:2622  uint i */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2611:3036  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n    tag_432:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2632:2650  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2628:2629  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2628:2650  i < _totalRewardTokens */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2611:3036  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2675:2706  RewardToken storage rewardToken */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2709:2722  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2675:2706  RewardToken storage rewardToken */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2723:2728  i + 1 */\n      tag_435\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2723:2724  i */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2727:2728  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2723:2728  i + 1 */\n      tag_126\n      jump\t// in\n    tag_435:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2709:2729  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2675:2729  RewardToken storage rewardToken = _rewardTokens[i + 1] */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2759:3021  rewardToken.rewardPerTokenStored.add(... */\n      tag_436\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2817:3003  lastTimeRewardApplicable()... */\n      tag_437\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2990:3002  _totalSupply */\n      sload(0x0b)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2817:2964  lastTimeRewardApplicable()... */\n      tag_129\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2959:2963  1e18 */\n      0x0de0b6b3a7640000\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2817:2933  lastTimeRewardApplicable()... */\n      tag_372\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2910:2921  rewardToken */\n      dup7\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2910:2932  rewardToken.rewardRate */\n      0x01\n      add\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2817:2884  lastTimeRewardApplicable()... */\n      tag_372\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2869:2883  lastUpdateTime */\n      sload(0x05)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2817:2843  lastTimeRewardApplicable() */\n      tag_296\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2817:2841  lastTimeRewardApplicable */\n      tag_84\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2817:2843  lastTimeRewardApplicable() */\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2817:3003  lastTimeRewardApplicable()... */\n    tag_437:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2759:2791  rewardToken.rewardPerTokenStored */\n      0x02\n      dup4\n      add\n      sload\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2759:2795  rewardToken.rewardPerTokenStored.add */\n      tag_135\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2759:3021  rewardToken.rewardPerTokenStored.add(... */\n      jump\t// in\n    tag_436:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2747:2753  tokens */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2754:2755  i */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2747:2756  tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_442\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_442:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2747:3021  tokens[i] = rewardToken.rewardPerTokenStored.add(... */\n      mstore\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2652:2655  i++ */\n      dup1\n      tag_443\n      dup2\n      tag_138\n      jump\t// in\n    tag_443:\n      swap2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":2611:3036  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      jump(tag_432)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7919:8948  function notifyRewardAmount(uint256[] memory reward) public onlyOwner updateReward(address(0)) {... */\n    tag_109:\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1101:1107  _owner */\n      sload(0x01)\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1101:1107  _owner */\n      and\n        /* \"github/nobi/staking/contracts/helpers/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      eq\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_447\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9177:9179   */\n      0x20\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9159:9180   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9196:9214   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9189:9219   */\n      mstore\n        /* \"#utility.yul\":9255:9289   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9235:9253   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9228:9290   */\n      mstore\n        /* \"#utility.yul\":9307:9325   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_146\n        /* \"#utility.yul\":9149:9331   */\n      jump\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_447:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8010:8011  0 */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11072:11104  uint256[] memory rewardsPerToken */\n      dup1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11123  rewardPerToken() */\n      tag_450\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11121  rewardPerToken */\n      tag_105\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11107:11123  rewardPerToken() */\n      jump\t// in\n    tag_450:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11072:11123  uint256[] memory rewardsPerToken = rewardPerToken() */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11133:11165  uint256[] memory currentEarnings */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11183  earned(account) */\n      tag_451\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11175:11182  account */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11174  earned */\n      tag_38\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11168:11183  earned(account) */\n      jump\t// in\n    tag_451:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11133:11183  uint256[] memory currentEarnings = earned(account) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11236  lastTimeRewardApplicable() */\n      tag_452\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11234  lastTimeRewardApplicable */\n      tag_84\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11210:11236  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_452:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11193:11207  lastUpdateTime */\n      0x05\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11193:11236  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11251:11257  uint i */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n    tag_453:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11267:11285  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11263:11264  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11263:11285  i < _totalRewardTokens */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      iszero\n      tag_454\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11337  RewardToken storage rewardToken */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11340:11353  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11337  RewardToken storage rewardToken */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11359  i + 1 */\n      tag_456\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11355  i */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11358:11359  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11354:11359  i + 1 */\n      tag_126\n      jump\t// in\n    tag_456:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11340:11360  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11306:11360  RewardToken storage rewardToken = _rewardTokens[i + 1] */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11409:11424  rewardsPerToken */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11425:11426  i */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11409:11427  rewardsPerToken[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_457\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_457:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11374:11406  rewardToken.rewardPerTokenStored */\n      0x02\n      dup3\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11374:11427  rewardToken.rewardPerTokenStored = rewardsPerToken[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11445:11466  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      iszero\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11441:11664  if (account != address(0)) {... */\n      tag_458\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11525:11540  currentEarnings */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11541:11542  i */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11525:11543  currentEarnings[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_459\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_459:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11503  _rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11494  _rewards */\n      0x07\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11503  _rewards[account] */\n      dup5\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11504:11521  rewardToken.token */\n      dup7\n      sload\n      swap1\n      swap4\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11522  _rewards[account][rewardToken.token] */\n      dup3\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11486:11543  _rewards[account][rewardToken.token] = currentEarnings[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11633  rewardsPerToken[i] */\n      dup4\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11630  rewardsPerToken */\n      dup5\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11631:11632  i */\n      dup4\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11615:11633  rewardsPerToken[i] */\n      dup2\n      lt\n      tag_460\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_460:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11593  _userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11584  _userRewardPerTokenPaid */\n      0x06\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11593  _userRewardPerTokenPaid[account] */\n      dup5\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11594:11611  rewardToken.token */\n      dup7\n      sload\n      swap1\n      swap4\n      and\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11612  _userRewardPerTokenPaid[account][rewardToken.token] */\n      dup3\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11561:11633  _userRewardPerTokenPaid[account][rewardToken.token] = rewardsPerToken[i] */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11441:11664  if (account != address(0)) {... */\n    tag_458:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11287:11290  i++ */\n      dup1\n      tag_461\n      dup2\n      tag_138\n      jump\t// in\n    tag_461:\n      swap2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":11246:11674  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      jump(tag_453)\n    tag_454:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8049:8067  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8032:8038  reward */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8032:8045  reward.length */\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8032:8067  reward.length == _totalRewardTokens */\n      eq\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8024:8092  require(reward.length == _totalRewardTokens, \"Wrong reward amounts\") */\n      tag_463\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":8140:8142   */\n      0x20\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8024:8092  require(reward.length == _totalRewardTokens, \"Wrong reward amounts\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8122:8143   */\n      mstore\n        /* \"#utility.yul\":8179:8181   */\n      0x14\n        /* \"#utility.yul\":8159:8177   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8152:8182   */\n      mstore\n        /* \"#utility.yul\":8218:8240   */\n      0x57726f6e672072657761726420616d6f756e7473000000000000000000000000\n        /* \"#utility.yul\":8198:8216   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8191:8241   */\n      mstore\n        /* \"#utility.yul\":8258:8276   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8024:8092  require(reward.length == _totalRewardTokens, \"Wrong reward amounts\") */\n      tag_146\n        /* \"#utility.yul\":8112:8282   */\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8024:8092  require(reward.length == _totalRewardTokens, \"Wrong reward amounts\") */\n    tag_463:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8107:8113  uint i */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8102:8838  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n    tag_466:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8123:8141  _totalRewardTokens */\n      sload(0x08)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8119:8120  i */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8119:8141  i < _totalRewardTokens */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8102:8838  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      iszero\n      tag_467\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8162:8193  RewardToken storage rewardToken */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8196:8209  _rewardTokens */\n      0x09\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8162:8193  RewardToken storage rewardToken */\n      dup2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8210:8215  i + 1 */\n      tag_469\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8210:8211  i */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8214:8215  1 */\n      0x01\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8210:8215  i + 1 */\n      tag_126\n      jump\t// in\n    tag_469:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8196:8216  _rewardTokens[i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8162:8216  RewardToken storage rewardToken = _rewardTokens[i + 1] */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8253:8265  periodFinish */\n      sload(0x03)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8234:8249  block.timestamp */\n      timestamp\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8234:8265  block.timestamp >= periodFinish */\n      lt\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8230:8608  if (block.timestamp >= periodFinish) {... */\n      tag_470\n      jumpi\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8310:8340  reward[i].div(rewardsDuration) */\n      tag_471\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8324:8339  rewardsDuration */\n      sload(0x04)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8310:8316  reward */\n      dup8\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8317:8318  i */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8310:8319  reward[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_472\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_472:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8310:8323  reward[i].div */\n      tag_134\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8310:8340  reward[i].div(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_471:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8285:8307  rewardToken.rewardRate */\n      0x01\n      dup3\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8285:8340  rewardToken.rewardRate = reward[i].div(rewardsDuration) */\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8230:8608  if (block.timestamp >= periodFinish) {... */\n      jump(tag_473)\n    tag_470:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8399:8411  periodFinish */\n      sload(0x03)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8379:8396  uint256 remaining */\n      0x00\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8399:8432  periodFinish.sub(block.timestamp) */\n      tag_474\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8416:8431  block.timestamp */\n      timestamp\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8399:8415  periodFinish.sub */\n      tag_132\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8399:8432  periodFinish.sub(block.timestamp) */\n      jump\t// in\n    tag_474:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8379:8432  uint256 remaining = periodFinish.sub(block.timestamp) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8450:8466  uint256 leftover */\n      0x00\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8469:8506  remaining.mul(rewardToken.rewardRate) */\n      tag_475\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8483:8494  rewardToken */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8483:8505  rewardToken.rewardRate */\n      0x01\n      add\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8469:8478  remaining */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8469:8482  remaining.mul */\n      tag_133\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8469:8506  remaining.mul(rewardToken.rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_475:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8450:8506  uint256 leftover = remaining.mul(rewardToken.rewardRate) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8549:8593  reward[i].add(leftover).div(rewardsDuration) */\n      tag_476\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8577:8592  rewardsDuration */\n      sload(0x04)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8549:8572  reward[i].add(leftover) */\n      tag_129\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8563:8571  leftover */\n      dup4\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8549:8555  reward */\n      dup12\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8556:8557  i */\n      dup9\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8549:8558  reward[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_478\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_478:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8549:8562  reward[i].add */\n      tag_135\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8549:8572  reward[i].add(leftover) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8549:8593  reward[i].add(leftover).div(rewardsDuration) */\n    tag_476:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8524:8546  rewardToken.rewardRate */\n      0x01\n      dup5\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8524:8593  rewardToken.rewardRate = reward[i].add(leftover).div(rewardsDuration) */\n      sstore\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8230:8608  if (block.timestamp >= periodFinish) {... */\n    tag_473:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8647:8664  rewardToken.token */\n      dup1\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8640:8690  IERC20(rewardToken.token).balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8684:8688  this */\n      address\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8640:8690  IERC20(rewardToken.token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2704:2778   */\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8622:8637  uint256 balance */\n      0x00\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8647:8664  rewardToken.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8640:8675  IERC20(rewardToken.token).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2677:2695   */\n      0x24\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8640:8690  IERC20(rewardToken.token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_480\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_480:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_482\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_482:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_483\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_483:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8622:8690  uint256 balance = IERC20(rewardToken.token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8738:8766  balance.div(rewardsDuration) */\n      tag_484\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8750:8765  rewardsDuration */\n      sload(0x04)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8738:8745  balance */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8738:8749  balance.div */\n      tag_134\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8738:8766  balance.div(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_484:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8712:8723  rewardToken */\n      dup3\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8712:8734  rewardToken.rewardRate */\n      0x01\n      add\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8712:8766  rewardToken.rewardRate <= balance.div(rewardsDuration) */\n      gt\n      iszero\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8704:8786  require(rewardToken.rewardRate <= balance.div(rewardsDuration), \"Reward too high\") */\n      tag_485\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9896:9898   */\n      0x20\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8704:8786  require(rewardToken.rewardRate <= balance.div(rewardsDuration), \"Reward too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9878:9899   */\n      mstore\n        /* \"#utility.yul\":9935:9937   */\n      0x0f\n        /* \"#utility.yul\":9915:9933   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9908:9938   */\n      mstore\n        /* \"#utility.yul\":9974:9991   */\n      0x52657761726420746f6f20686967680000000000000000000000000000000000\n        /* \"#utility.yul\":9954:9972   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9947:9992   */\n      mstore\n        /* \"#utility.yul\":10009:10027   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8704:8786  require(rewardToken.rewardRate <= balance.div(rewardsDuration), \"Reward too high\") */\n      tag_146\n        /* \"#utility.yul\":9868:10033   */\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8704:8786  require(rewardToken.rewardRate <= balance.div(rewardsDuration), \"Reward too high\") */\n    tag_485:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8805:8827  RewardAdded(reward[i]) */\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8817:8823  reward */\n      dup8\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8824:8825  i */\n      dup5\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8817:8826  reward[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_487\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_487:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8805:8827  RewardAdded(reward[i]) */\n      mload(0x40)\n      tag_488\n      swap2\n        /* \"#utility.yul\":11308:11333   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11296:11298   */\n      0x20\n        /* \"#utility.yul\":11281:11299   */\n      add\n      swap1\n        /* \"#utility.yul\":11263:11339   */\n      jump\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8805:8827  RewardAdded(reward[i]) */\n    tag_488:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8102:8838  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8143:8146  i++ */\n      dup1\n      dup1\n      tag_489\n      swap1\n      tag_138\n      jump\t// in\n    tag_489:\n      swap2\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8102:8838  for (uint i = 0; i < _totalRewardTokens; i++) {... */\n      jump(tag_466)\n    tag_467:\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8865:8880  block.timestamp */\n      timestamp\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8848:8862  lastUpdateTime */\n      0x05\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8848:8880  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8925:8940  rewardsDuration */\n      sload(0x04)\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8905:8941  block.timestamp.add(rewardsDuration) */\n      tag_490\n      swap2\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8865:8880  block.timestamp */\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8905:8924  block.timestamp.add */\n      tag_135\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8905:8941  block.timestamp.add(rewardsDuration) */\n      jump\t// in\n    tag_490:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8890:8902  periodFinish */\n      0x03\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":8890:8941  periodFinish = block.timestamp.add(rewardsDuration) */\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":7919:8948  function notifyRewardAmount(uint256[] memory reward) public onlyOwner updateReward(address(0)) {... */\n      jump\t// out\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6386:6480  function exit() external {... */\n    tag_111:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6440:6450  msg.sender */\n      caller\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6430:6451  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6430:6439  _balances */\n      0x0c\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6430:6451  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6421:6452  withdraw(_balances[msg.sender]) */\n      tag_492\n      swap1\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6421:6429  withdraw */\n      tag_57\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6421:6452  withdraw(_balances[msg.sender]) */\n      jump\t// in\n    tag_492:\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6462:6473  getReward() */\n      tag_359\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6462:6471  getReward */\n      tag_62\n        /* \"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":6462:6473  getReward() */\n      jump\t// in\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1911:2109  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_117:\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1101:1107  _owner */\n      sload(0x01)\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1101:1107  _owner */\n      and\n        /* \"github/nobi/staking/contracts/helpers/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      eq\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_497\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9177:9179   */\n      0x20\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9159:9180   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9196:9214   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9189:9219   */\n      mstore\n        /* \"#utility.yul\":9255:9289   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9235:9253   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9228:9290   */\n      mstore\n        /* \"#utility.yul\":9307:9325   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_146\n        /* \"#utility.yul\":9149:9331   */\n      jump\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_497:\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1999:2021  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1991:2064  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_500\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5933:5935   */\n      0x20\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1991:2064  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5915:5936   */\n      mstore\n        /* \"#utility.yul\":5972:5974   */\n      0x26\n        /* \"#utility.yul\":5952:5970   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5945:5975   */\n      mstore\n        /* \"#utility.yul\":6011:6045   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5991:6009   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5984:6046   */\n      mstore\n        /* \"#utility.yul\":6082:6090   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6062:6080   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6055:6091   */\n      mstore\n        /* \"#utility.yul\":6108:6127   */\n      0x84\n      add\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1991:2064  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_146\n        /* \"#utility.yul\":5905:6133   */\n      jump\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1991:2064  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_500:\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2074:2102  _transferOwnership(newOwner) */\n      tag_503\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2093:2101  newOwner */\n      dup2\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2074:2092  _transferOwnership */\n      tag_360\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2074:2102  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_503:\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":1911:2109  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_132:\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3192:3197  a - b */\n      tag_368\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3196:3197  b */\n      dup3\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3192:3193  a */\n      dup5\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3192:3197  a - b */\n      tag_168\n      jump\t// in\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_133:\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3535:3540  a * b */\n      tag_368\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3539:3540  b */\n      dup3\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3535:3536  a */\n      dup5\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3535:3540  a * b */\n      tag_508\n      jump\t// in\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_134:\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3920:3925  a / b */\n      tag_368\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3924:3925  b */\n      dup3\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3920:3921  a */\n      dup5\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":3920:3925  a / b */\n      tag_511\n      jump\t// in\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_135:\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":2825:2830  a + b */\n      tag_368\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":2829:2830  b */\n      dup3\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":2825:2826  a */\n      dup5\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":2825:2830  a + b */\n      tag_126\n      jump\t// in\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":699:904  function safeTransfer(... */\n    tag_212:\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":838:896  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n        /* \"#utility.yul\":3396:3438   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3384:3439   */\n      dup4\n      and\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":838:896  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3366:3440   */\n      mstore\n        /* \"#utility.yul\":3456:3474   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3449:3483   */\n      dup3\n      swap1\n      mstore\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":811:897  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_516\n      swap1\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":831:836  token */\n      dup5\n      swap1\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":861:884  token.transfer.selector */\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n      swap1\n        /* \"#utility.yul\":3339:3357   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":838:896  abi.encodeWithSelector(token.transfer.selector, to, value) */\n    tag_517:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":811:830  _callOptionalReturn */\n      tag_518\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":811:897  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_516:\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":699:904  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":910:1151  function safeTransferFrom(... */\n    tag_290:\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":1075:1143  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n        /* \"#utility.yul\":3001:3043   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3070:3085   */\n      dup1\n      dup6\n      and\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":1075:1143  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3052:3086   */\n      mstore\n        /* \"#utility.yul\":3122:3137   */\n      dup4\n      and\n        /* \"#utility.yul\":3102:3120   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3095:3138   */\n      mstore\n        /* \"#utility.yul\":3154:3172   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":3147:3181   */\n      dup3\n      swap1\n      mstore\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":1048:1144  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_520\n      swap1\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":1068:1073  token */\n      dup6\n      swap1\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":1098:1125  token.transferFrom.selector */\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      swap1\n        /* \"#utility.yul\":2964:2982   */\n      0x84\n      add\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":1075:1143  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      tag_517\n        /* \"#utility.yul\":2946:3187   */\n      jump\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":1048:1144  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n    tag_520:\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":910:1151  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_360:\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2355:2361  _owner */\n      0x01\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2371:2388  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2355:2361  _owner */\n      swap2\n      and\n      swap2\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2371:2388  _owner = newOwner */\n      swap1\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2355:2361  _owner */\n      dup3\n      swap1\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2336:2352  address oldOwner */\n      0x00\n      swap1\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"github/nobi/staking/contracts/helpers/Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"github/nobi/staking/contracts/libraries/Math.sol\":446:550  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_363:\n        /* \"github/nobi/staking/contracts/libraries/Math.sol\":504:511  uint256 */\n      0x00\n        /* \"github/nobi/staking/contracts/libraries/Math.sol\":534:535  b */\n      dup2\n        /* \"github/nobi/staking/contracts/libraries/Math.sol\":530:531  a */\n      dup4\n        /* \"github/nobi/staking/contracts/libraries/Math.sol\":530:535  a < b */\n      lt\n        /* \"github/nobi/staking/contracts/libraries/Math.sol\":530:543  a < b ? a : b */\n      tag_525\n      jumpi\n        /* \"github/nobi/staking/contracts/libraries/Math.sol\":542:543  b */\n      dup2\n        /* \"github/nobi/staking/contracts/libraries/Math.sol\":530:543  a < b ? a : b */\n      jump(tag_368)\n    tag_525:\n      pop\n        /* \"github/nobi/staking/contracts/libraries/Math.sol\":538:539  a */\n      swap1\n      swap2\n        /* \"github/nobi/staking/contracts/libraries/Math.sol\":446:550  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3205:3911  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_518:\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3624:3647  bytes memory returndata */\n      0x00\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3650:3719  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_528\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3678:3682  data */\n      dup3\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3650:3719  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3658:3663  token */\n      dup6\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3650:3677  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_529\n      swap1\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3650:3719  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_528:\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3733:3750  returndata.length */\n      dup1\n      mload\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3624:3719  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3733:3754  returndata.length > 0 */\n      iszero\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3729:3905  if (returndata.length > 0) {... */\n      tag_516\n      jumpi\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3828:3838  returndata */\n      dup1\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3817:3847  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_531\n      swap2\n      swap1\n      tag_350\n      jump\t// in\n    tag_531:\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3809:3894  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_516\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10240:10242   */\n      0x20\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3809:3894  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10222:10243   */\n      mstore\n        /* \"#utility.yul\":10279:10281   */\n      0x2a\n        /* \"#utility.yul\":10259:10277   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10252:10282   */\n      mstore\n        /* \"#utility.yul\":10318:10352   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":10298:10316   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10291:10353   */\n      mstore\n        /* \"#utility.yul\":10389:10401   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10369:10387   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10362:10402   */\n      mstore\n        /* \"#utility.yul\":10419:10438   */\n      0x84\n      add\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":3809:3894  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_146\n        /* \"#utility.yul\":10212:10444   */\n      jump\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":3846:4069  function functionCall(... */\n    tag_529:\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":3979:3991  bytes memory */\n      0x60\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":4010:4062  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_536\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":4032:4038  target */\n      dup5\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":4040:4044  data */\n      dup5\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":4046:4047  0 */\n      0x00\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":4049:4061  errorMessage */\n      dup6\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":4010:4031  functionCallWithValue */\n      tag_537\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":4010:4062  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_536:\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":4003:4062  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":3846:4069  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":4933:5432  function functionCallWithValue(... */\n    tag_537:\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5098:5110  bytes memory */\n      0x60\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5155:5160  value */\n      dup3\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5130:5151  address(this).balance */\n      selfbalance\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5130:5160  address(this).balance >= value */\n      lt\n      iszero\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5122:5203  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_539\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7383:7385   */\n      0x20\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5122:5203  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7365:7386   */\n      mstore\n        /* \"#utility.yul\":7422:7424   */\n      0x26\n        /* \"#utility.yul\":7402:7420   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7395:7425   */\n      mstore\n        /* \"#utility.yul\":7461:7495   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":7441:7459   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7434:7496   */\n      mstore\n        /* \"#utility.yul\":7532:7540   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7512:7530   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7505:7541   */\n      mstore\n        /* \"#utility.yul\":7558:7577   */\n      0x84\n      add\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5122:5203  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_146\n        /* \"#utility.yul\":7355:7583   */\n      jump\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5122:5203  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_539:\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":1450:1469  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      extcodesize\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5213:5273  require(isContract(target), \"Address: call to non-contract\") */\n      tag_544\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9538:9540   */\n      0x20\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5213:5273  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9520:9541   */\n      mstore\n        /* \"#utility.yul\":9577:9579   */\n      0x1d\n        /* \"#utility.yul\":9557:9575   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9550:9580   */\n      mstore\n        /* \"#utility.yul\":9616:9647   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":9596:9614   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9589:9648   */\n      mstore\n        /* \"#utility.yul\":9665:9683   */\n      0x64\n      add\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5213:5273  require(isContract(target), \"Address: call to non-contract\") */\n      tag_146\n        /* \"#utility.yul\":9510:9689   */\n      jump\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5213:5273  require(isContract(target), \"Address: call to non-contract\") */\n    tag_544:\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5285:5297  bool success */\n      0x00\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5299:5322  bytes memory returndata */\n      dup1\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5326:5332  target */\n      dup7\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5326:5337  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5345:5350  value */\n      dup6\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5352:5356  data */\n      dup8\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5326:5357  target.call{value: value}(data) */\n      mload(0x40)\n      tag_547\n      swap2\n      swap1\n      tag_548\n      jump\t// in\n    tag_547:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_551\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_550)\n    tag_551:\n      0x60\n      swap2\n      pop\n    tag_550:\n      pop\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5284:5357  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5374:5425  verifyCallResult(success, returndata, errorMessage) */\n      tag_552\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5391:5398  success */\n      dup3\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5400:5410  returndata */\n      dup3\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5412:5424  errorMessage */\n      dup7\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5374:5390  verifyCallResult */\n      tag_553\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5374:5425  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_552:\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":5367:5425  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":4933:5432  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":7546:8238  function verifyCallResult(... */\n    tag_553:\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":7692:7704  bytes memory */\n      0x60\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":7720:7727  success */\n      dup4\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":7716:8232  if (success) {... */\n      iszero\n      tag_556\n      jumpi\n      pop\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":7750:7760  returndata */\n      dup2\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":7743:7760  return returndata */\n      jump(tag_368)\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":7716:8232  if (success) {... */\n    tag_556:\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":7861:7878  returndata.length */\n      dup3\n      mload\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":7861:7882  returndata.length > 0 */\n      iszero\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":7857:8222  if (returndata.length > 0) {... */\n      tag_558\n      jumpi\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":8055:8065  returndata */\n      dup3\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":8049:8066  mload(returndata) */\n      mload\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":8115:8130  returndata_size */\n      dup1\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":8102:8112  returndata */\n      dup5\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":8098:8100  32 */\n      0x20\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":8094:8113  add(32, returndata) */\n      add\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":8087:8131  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":8004:8149  {... */\n    tag_558:\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":8194:8206  errorMessage */\n      dup2\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":8187:8207  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap2\n      swap1\n      tag_561\n      jump\t// in\n        /* \"#utility.yul\":14:343   */\n    tag_37:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_564:\n        /* \"#utility.yul\":191:200   */\n      dup2\n        /* \"#utility.yul\":178:201   */\n      calldataload\n        /* \"#utility.yul\":241:283   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":234:239   */\n      dup2\n        /* \"#utility.yul\":230:284   */\n      and\n        /* \"#utility.yul\":223:228   */\n      dup2\n        /* \"#utility.yul\":220:285   */\n      eq\n        /* \"#utility.yul\":210:212   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":304:310   */\n      dup2\n        /* \"#utility.yul\":296:302   */\n      dup3\n        /* \"#utility.yul\":289:311   */\n      revert\n        /* \"#utility.yul\":348:1578   */\n    tag_68:\n        /* \"#utility.yul\":432:438   */\n      0x00\n        /* \"#utility.yul\":463:465   */\n      0x20\n        /* \"#utility.yul\":506:508   */\n      dup1\n        /* \"#utility.yul\":494:503   */\n      dup4\n        /* \"#utility.yul\":485:492   */\n      dup6\n        /* \"#utility.yul\":481:504   */\n      sub\n        /* \"#utility.yul\":477:509   */\n      slt\n        /* \"#utility.yul\":474:476   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":527:533   */\n      dup2\n        /* \"#utility.yul\":519:525   */\n      dup3\n        /* \"#utility.yul\":512:534   */\n      revert\n        /* \"#utility.yul\":474:476   */\n    tag_567:\n        /* \"#utility.yul\":572:581   */\n      dup3\n        /* \"#utility.yul\":559:582   */\n      calldataload\n        /* \"#utility.yul\":601:619   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":642:644   */\n      dup1\n        /* \"#utility.yul\":634:640   */\n      dup3\n        /* \"#utility.yul\":631:645   */\n      gt\n        /* \"#utility.yul\":628:630   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":663:669   */\n      dup4\n        /* \"#utility.yul\":655:661   */\n      dup5\n        /* \"#utility.yul\":648:670   */\n      revert\n        /* \"#utility.yul\":628:630   */\n    tag_568:\n        /* \"#utility.yul\":706:712   */\n      dup2\n        /* \"#utility.yul\":695:704   */\n      dup6\n        /* \"#utility.yul\":691:713   */\n      add\n        /* \"#utility.yul\":681:713   */\n      swap2\n      pop\n        /* \"#utility.yul\":751:758   */\n      dup6\n        /* \"#utility.yul\":744:748   */\n      0x1f\n        /* \"#utility.yul\":740:742   */\n      dup4\n        /* \"#utility.yul\":736:749   */\n      add\n        /* \"#utility.yul\":732:759   */\n      slt\n        /* \"#utility.yul\":722:724   */\n      tag_569\n      jumpi\n        /* \"#utility.yul\":778:784   */\n      dup4\n        /* \"#utility.yul\":770:776   */\n      dup5\n        /* \"#utility.yul\":763:785   */\n      revert\n        /* \"#utility.yul\":722:724   */\n    tag_569:\n        /* \"#utility.yul\":819:821   */\n      dup2\n        /* \"#utility.yul\":806:822   */\n      calldataload\n        /* \"#utility.yul\":841:843   */\n      dup2\n        /* \"#utility.yul\":837:839   */\n      dup2\n        /* \"#utility.yul\":834:844   */\n      gt\n        /* \"#utility.yul\":831:833   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":847:865   */\n      tag_571\n      tag_572\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":893:895   */\n      dup1\n        /* \"#utility.yul\":890:891   */\n      0x05\n        /* \"#utility.yul\":886:896   */\n      shl\n        /* \"#utility.yul\":925:927   */\n      0x40\n        /* \"#utility.yul\":919:928   */\n      mload\n        /* \"#utility.yul\":984:1050   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":979:981   */\n      0x3f\n        /* \"#utility.yul\":975:977   */\n      dup4\n        /* \"#utility.yul\":971:982   */\n      add\n        /* \"#utility.yul\":967:1051   */\n      and\n        /* \"#utility.yul\":959:965   */\n      dup2\n        /* \"#utility.yul\":955:1052   */\n      add\n        /* \"#utility.yul\":1102:1108   */\n      dup2\n        /* \"#utility.yul\":1090:1100   */\n      dup2\n        /* \"#utility.yul\":1087:1109   */\n      lt\n        /* \"#utility.yul\":1082:1084   */\n      dup6\n        /* \"#utility.yul\":1070:1080   */\n      dup3\n        /* \"#utility.yul\":1067:1085   */\n      gt\n        /* \"#utility.yul\":1064:1110   */\n      or\n        /* \"#utility.yul\":1061:1063   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":1113:1131   */\n      tag_574\n      tag_572\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":1149:1151   */\n      0x40\n        /* \"#utility.yul\":1142:1164   */\n      mstore\n        /* \"#utility.yul\":1199:1217   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":1233:1248   */\n      dup6\n      dup2\n      add\n      swap4\n      pop\n        /* \"#utility.yul\":1268:1279   */\n      dup5\n      dup7\n      add\n        /* \"#utility.yul\":1298:1309   */\n      dup3\n      dup7\n      add\n        /* \"#utility.yul\":1294:1314   */\n      dup8\n      add\n        /* \"#utility.yul\":1291:1324   */\n      dup11\n      lt\n        /* \"#utility.yul\":1288:1290   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":1342:1348   */\n      dup8\n        /* \"#utility.yul\":1334:1340   */\n      dup9\n        /* \"#utility.yul\":1327:1349   */\n      revert\n        /* \"#utility.yul\":1288:1290   */\n    tag_575:\n        /* \"#utility.yul\":1369:1375   */\n      dup8\n        /* \"#utility.yul\":1360:1375   */\n      swap6\n      pop\n        /* \"#utility.yul\":1384:1547   */\n    tag_576:\n        /* \"#utility.yul\":1398:1400   */\n      dup4\n        /* \"#utility.yul\":1395:1396   */\n      dup7\n        /* \"#utility.yul\":1392:1401   */\n      lt\n        /* \"#utility.yul\":1384:1547   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":1455:1472   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1443:1473   */\n      dup6\n      mstore\n        /* \"#utility.yul\":1416:1417   */\n      0x01\n        /* \"#utility.yul\":1409:1418   */\n      swap6\n      swap1\n      swap6\n      add\n      swap5\n        /* \"#utility.yul\":1493:1505   */\n      swap4\n      dup7\n      add\n      swap4\n        /* \"#utility.yul\":1525:1537   */\n      dup7\n      add\n        /* \"#utility.yul\":1384:1547   */\n      jump(tag_576)\n    tag_578:\n      pop\n        /* \"#utility.yul\":1566:1572   */\n      swap9\n        /* \"#utility.yul\":443:1578   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1583:1880   */\n    tag_350:\n        /* \"#utility.yul\":1650:1656   */\n      0x00\n        /* \"#utility.yul\":1703:1705   */\n      0x20\n        /* \"#utility.yul\":1691:1700   */\n      dup3\n        /* \"#utility.yul\":1682:1689   */\n      dup5\n        /* \"#utility.yul\":1678:1701   */\n      sub\n        /* \"#utility.yul\":1674:1706   */\n      slt\n        /* \"#utility.yul\":1671:1673   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":1724:1730   */\n      dup1\n        /* \"#utility.yul\":1716:1722   */\n      dup2\n        /* \"#utility.yul\":1709:1731   */\n      revert\n        /* \"#utility.yul\":1671:1673   */\n    tag_580:\n        /* \"#utility.yul\":1761:1770   */\n      dup2\n        /* \"#utility.yul\":1755:1771   */\n      mload\n        /* \"#utility.yul\":1814:1819   */\n      dup1\n        /* \"#utility.yul\":1807:1820   */\n      iszero\n        /* \"#utility.yul\":1800:1821   */\n      iszero\n        /* \"#utility.yul\":1793:1798   */\n      dup2\n        /* \"#utility.yul\":1790:1822   */\n      eq\n        /* \"#utility.yul\":1780:1782   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":1841:1847   */\n      dup2\n        /* \"#utility.yul\":1833:1839   */\n      dup3\n        /* \"#utility.yul\":1826:1848   */\n      revert\n        /* \"#utility.yul\":1885:2075   */\n    tag_56:\n        /* \"#utility.yul\":1944:1950   */\n      0x00\n        /* \"#utility.yul\":1997:1999   */\n      0x20\n        /* \"#utility.yul\":1985:1994   */\n      dup3\n        /* \"#utility.yul\":1976:1983   */\n      dup5\n        /* \"#utility.yul\":1972:1995   */\n      sub\n        /* \"#utility.yul\":1968:2000   */\n      slt\n        /* \"#utility.yul\":1965:1967   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":2018:2024   */\n      dup1\n        /* \"#utility.yul\":2010:2016   */\n      dup2\n        /* \"#utility.yul\":2003:2025   */\n      revert\n        /* \"#utility.yul\":1965:1967   */\n    tag_583:\n      pop\n        /* \"#utility.yul\":2046:2069   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1955:2075   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2080:2274   */\n    tag_157:\n        /* \"#utility.yul\":2150:2156   */\n      0x00\n        /* \"#utility.yul\":2203:2205   */\n      0x20\n        /* \"#utility.yul\":2191:2200   */\n      dup3\n        /* \"#utility.yul\":2182:2189   */\n      dup5\n        /* \"#utility.yul\":2178:2201   */\n      sub\n        /* \"#utility.yul\":2174:2206   */\n      slt\n        /* \"#utility.yul\":2171:2173   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":2224:2230   */\n      dup1\n        /* \"#utility.yul\":2216:2222   */\n      dup2\n        /* \"#utility.yul\":2209:2231   */\n      revert\n        /* \"#utility.yul\":2171:2173   */\n    tag_585:\n      pop\n        /* \"#utility.yul\":2252:2268   */\n      mload\n      swap2\n        /* \"#utility.yul\":2161:2274   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2279:2553   */\n    tag_548:\n        /* \"#utility.yul\":2408:2411   */\n      0x00\n        /* \"#utility.yul\":2446:2452   */\n      dup3\n        /* \"#utility.yul\":2440:2453   */\n      mload\n        /* \"#utility.yul\":2462:2515   */\n      tag_587\n        /* \"#utility.yul\":2508:2514   */\n      dup2\n        /* \"#utility.yul\":2503:2506   */\n      dup5\n        /* \"#utility.yul\":2496:2500   */\n      0x20\n        /* \"#utility.yul\":2488:2494   */\n      dup8\n        /* \"#utility.yul\":2484:2501   */\n      add\n        /* \"#utility.yul\":2462:2515   */\n      tag_588\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":2531:2547   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":2416:2553   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:4393   */\n    tag_100:\n        /* \"#utility.yul\":3719:3721   */\n      0x20\n        /* \"#utility.yul\":3771:3792   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3841:3854   */\n      dup3\n      mload\n        /* \"#utility.yul\":3744:3762   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3863:3885   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3690:3694   */\n      0x00\n      swap2\n        /* \"#utility.yul\":3719:3721   */\n      swap1\n        /* \"#utility.yul\":3904:3906   */\n      0x40\n      swap1\n        /* \"#utility.yul\":3922:3940   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":3963:3978   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":3690:3694   */\n      dup6\n        /* \"#utility.yul\":4009:4367   */\n    tag_593:\n        /* \"#utility.yul\":4023:4029   */\n      dup3\n        /* \"#utility.yul\":4020:4021   */\n      dup2\n        /* \"#utility.yul\":4017:4030   */\n      lt\n        /* \"#utility.yul\":4009:4367   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":4082:4095   */\n      dup2\n      mload\n        /* \"#utility.yul\":4124:4133   */\n      dup1\n      mload\n        /* \"#utility.yul\":4135:4177   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4120:4178   */\n      and\n        /* \"#utility.yul\":4108:4179   */\n      dup6\n      mstore\n        /* \"#utility.yul\":4219:4230   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":4213:4231   */\n      mload\n        /* \"#utility.yul\":4199:4211   */\n      dup8\n      dup7\n      add\n        /* \"#utility.yul\":4192:4232   */\n      mstore\n        /* \"#utility.yul\":4272:4283   */\n      dup6\n      add\n        /* \"#utility.yul\":4266:4284   */\n      mload\n        /* \"#utility.yul\":4252:4264   */\n      dup6\n      dup6\n      add\n        /* \"#utility.yul\":4245:4285   */\n      mstore\n        /* \"#utility.yul\":4314:4318   */\n      0x60\n        /* \"#utility.yul\":4305:4319   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":4342:4357   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":4045:4046   */\n      0x01\n        /* \"#utility.yul\":4038:4047   */\n      add\n        /* \"#utility.yul\":4009:4367   */\n      jump(tag_593)\n    tag_595:\n      pop\n        /* \"#utility.yul\":4384:4387   */\n      swap2\n      swap8\n        /* \"#utility.yul\":3699:4393   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4398:5033   */\n    tag_40:\n        /* \"#utility.yul\":4569:4571   */\n      0x20\n        /* \"#utility.yul\":4621:4642   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4691:4704   */\n      dup3\n      mload\n        /* \"#utility.yul\":4594:4612   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":4713:4735   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4540:4544   */\n      0x00\n      swap2\n        /* \"#utility.yul\":4569:4571   */\n      swap1\n        /* \"#utility.yul\":4792:4807   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":4766:4768   */\n      0x40\n        /* \"#utility.yul\":4751:4769   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":4540:4544   */\n      dup5\n        /* \"#utility.yul\":4838:5007   */\n    tag_597:\n        /* \"#utility.yul\":4852:4858   */\n      dup2\n        /* \"#utility.yul\":4849:4850   */\n      dup2\n        /* \"#utility.yul\":4846:4859   */\n      lt\n        /* \"#utility.yul\":4838:5007   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":4913:4926   */\n      dup4\n      mload\n        /* \"#utility.yul\":4901:4927   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4982:4997   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":4947:4959   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":4874:4875   */\n      0x01\n        /* \"#utility.yul\":4867:4876   */\n      add\n        /* \"#utility.yul\":4838:5007   */\n      jump(tag_597)\n    tag_599:\n      pop\n        /* \"#utility.yul\":5024:5027   */\n      swap1\n      swap7\n        /* \"#utility.yul\":4549:5033   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5284:5726   */\n    tag_561:\n        /* \"#utility.yul\":5433:5435   */\n      0x20\n        /* \"#utility.yul\":5422:5431   */\n      dup2\n        /* \"#utility.yul\":5415:5436   */\n      mstore\n        /* \"#utility.yul\":5396:5400   */\n      0x00\n        /* \"#utility.yul\":5465:5471   */\n      dup3\n        /* \"#utility.yul\":5459:5472   */\n      mload\n        /* \"#utility.yul\":5508:5514   */\n      dup1\n        /* \"#utility.yul\":5503:5505   */\n      0x20\n        /* \"#utility.yul\":5492:5501   */\n      dup5\n        /* \"#utility.yul\":5488:5506   */\n      add\n        /* \"#utility.yul\":5481:5515   */\n      mstore\n        /* \"#utility.yul\":5524:5590   */\n      tag_602\n        /* \"#utility.yul\":5583:5589   */\n      dup2\n        /* \"#utility.yul\":5578:5580   */\n      0x40\n        /* \"#utility.yul\":5567:5576   */\n      dup6\n        /* \"#utility.yul\":5563:5581   */\n      add\n        /* \"#utility.yul\":5558:5560   */\n      0x20\n        /* \"#utility.yul\":5550:5556   */\n      dup8\n        /* \"#utility.yul\":5546:5561   */\n      add\n        /* \"#utility.yul\":5524:5590   */\n      tag_588\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":5642:5644   */\n      0x1f\n        /* \"#utility.yul\":5630:5645   */\n      add\n        /* \"#utility.yul\":5647:5713   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":5626:5714   */\n      and\n        /* \"#utility.yul\":5611:5715   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5717:5719   */\n      0x40\n        /* \"#utility.yul\":5607:5720   */\n      add\n      swap3\n        /* \"#utility.yul\":5405:5726   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11344:11472   */\n    tag_126:\n        /* \"#utility.yul\":11384:11387   */\n      0x00\n        /* \"#utility.yul\":11415:11416   */\n      dup3\n        /* \"#utility.yul\":11411:11417   */\n      not\n        /* \"#utility.yul\":11408:11409   */\n      dup3\n        /* \"#utility.yul\":11405:11418   */\n      gt\n        /* \"#utility.yul\":11402:11404   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":11421:11439   */\n      tag_621\n      tag_622\n      jump\t// in\n    tag_621:\n      pop\n        /* \"#utility.yul\":11457:11466   */\n      add\n      swap1\n        /* \"#utility.yul\":11392:11472   */\n      jump\t// out\n        /* \"#utility.yul\":11477:11751   */\n    tag_511:\n        /* \"#utility.yul\":11517:11518   */\n      0x00\n        /* \"#utility.yul\":11543:11544   */\n      dup3\n        /* \"#utility.yul\":11533:11535   */\n      tag_624\n      jumpi\n        /* \"#utility.yul\":11578:11655   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11575:11576   */\n      dup2\n        /* \"#utility.yul\":11568:11656   */\n      mstore\n        /* \"#utility.yul\":11679:11683   */\n      0x12\n        /* \"#utility.yul\":11676:11677   */\n      0x04\n        /* \"#utility.yul\":11669:11684   */\n      mstore\n        /* \"#utility.yul\":11707:11711   */\n      0x24\n        /* \"#utility.yul\":11704:11705   */\n      dup2\n        /* \"#utility.yul\":11697:11712   */\n      revert\n        /* \"#utility.yul\":11533:11535   */\n    tag_624:\n      pop\n        /* \"#utility.yul\":11736:11745   */\n      div\n      swap1\n        /* \"#utility.yul\":11523:11751   */\n      jump\t// out\n        /* \"#utility.yul\":11756:11984   */\n    tag_508:\n        /* \"#utility.yul\":11796:11803   */\n      0x00\n        /* \"#utility.yul\":11922:11923   */\n      dup2\n        /* \"#utility.yul\":11854:11920   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11850:11924   */\n      div\n        /* \"#utility.yul\":11847:11848   */\n      dup4\n        /* \"#utility.yul\":11844:11925   */\n      gt\n        /* \"#utility.yul\":11839:11840   */\n      dup3\n        /* \"#utility.yul\":11832:11841   */\n      iszero\n        /* \"#utility.yul\":11825:11842   */\n      iszero\n        /* \"#utility.yul\":11821:11926   */\n      and\n        /* \"#utility.yul\":11818:11820   */\n      iszero\n      tag_627\n      jumpi\n        /* \"#utility.yul\":11929:11947   */\n      tag_627\n      tag_622\n      jump\t// in\n    tag_627:\n      pop\n        /* \"#utility.yul\":11969:11978   */\n      mul\n      swap1\n        /* \"#utility.yul\":11808:11984   */\n      jump\t// out\n        /* \"#utility.yul\":11989:12114   */\n    tag_168:\n        /* \"#utility.yul\":12029:12033   */\n      0x00\n        /* \"#utility.yul\":12057:12058   */\n      dup3\n        /* \"#utility.yul\":12054:12055   */\n      dup3\n        /* \"#utility.yul\":12051:12059   */\n      lt\n        /* \"#utility.yul\":12048:12050   */\n      iszero\n      tag_630\n      jumpi\n        /* \"#utility.yul\":12062:12080   */\n      tag_630\n      tag_622\n      jump\t// in\n    tag_630:\n      pop\n        /* \"#utility.yul\":12099:12108   */\n      sub\n      swap1\n        /* \"#utility.yul\":12038:12114   */\n      jump\t// out\n        /* \"#utility.yul\":12119:12377   */\n    tag_588:\n        /* \"#utility.yul\":12191:12192   */\n      0x00\n        /* \"#utility.yul\":12201:12314   */\n    tag_632:\n        /* \"#utility.yul\":12215:12221   */\n      dup4\n        /* \"#utility.yul\":12212:12213   */\n      dup2\n        /* \"#utility.yul\":12209:12222   */\n      lt\n        /* \"#utility.yul\":12201:12314   */\n      iszero\n      tag_634\n      jumpi\n        /* \"#utility.yul\":12291:12302   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":12285:12303   */\n      mload\n        /* \"#utility.yul\":12272:12283   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":12265:12304   */\n      mstore\n        /* \"#utility.yul\":12237:12239   */\n      0x20\n        /* \"#utility.yul\":12230:12240   */\n      add\n        /* \"#utility.yul\":12201:12314   */\n      jump(tag_632)\n    tag_634:\n        /* \"#utility.yul\":12332:12338   */\n      dup4\n        /* \"#utility.yul\":12329:12330   */\n      dup2\n        /* \"#utility.yul\":12326:12339   */\n      gt\n        /* \"#utility.yul\":12323:12325   */\n      iszero\n      tag_520\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":12367:12368   */\n      0x00\n        /* \"#utility.yul\":12349:12365   */\n      swap2\n      add\n        /* \"#utility.yul\":12342:12369   */\n      mstore\n        /* \"#utility.yul\":12172:12377   */\n      jump\t// out\n        /* \"#utility.yul\":12382:12577   */\n    tag_138:\n        /* \"#utility.yul\":12421:12424   */\n      0x00\n        /* \"#utility.yul\":12452:12518   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12445:12450   */\n      dup3\n        /* \"#utility.yul\":12442:12519   */\n      eq\n        /* \"#utility.yul\":12439:12441   */\n      iszero\n      tag_638\n      jumpi\n        /* \"#utility.yul\":12522:12540   */\n      tag_638\n      tag_622\n      jump\t// in\n    tag_638:\n      pop\n        /* \"#utility.yul\":12569:12570   */\n      0x01\n        /* \"#utility.yul\":12558:12571   */\n      add\n      swap1\n        /* \"#utility.yul\":12429:12577   */\n      jump\t// out\n        /* \"#utility.yul\":12582:12766   */\n    tag_622:\n        /* \"#utility.yul\":12634:12711   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12631:12632   */\n      0x00\n        /* \"#utility.yul\":12624:12712   */\n      mstore\n        /* \"#utility.yul\":12731:12735   */\n      0x11\n        /* \"#utility.yul\":12728:12729   */\n      0x04\n        /* \"#utility.yul\":12721:12736   */\n      mstore\n        /* \"#utility.yul\":12755:12759   */\n      0x24\n        /* \"#utility.yul\":12752:12753   */\n      0x00\n        /* \"#utility.yul\":12745:12760   */\n      revert\n        /* \"#utility.yul\":12771:12955   */\n    tag_572:\n        /* \"#utility.yul\":12823:12900   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12820:12821   */\n      0x00\n        /* \"#utility.yul\":12813:12901   */\n      mstore\n        /* \"#utility.yul\":12920:12924   */\n      0x41\n        /* \"#utility.yul\":12917:12918   */\n      0x04\n        /* \"#utility.yul\":12910:12925   */\n      mstore\n        /* \"#utility.yul\":12944:12948   */\n      0x24\n        /* \"#utility.yul\":12941:12942   */\n      0x00\n        /* \"#utility.yul\":12934:12949   */\n      revert\n\n    auxdata: 0xa26469706673582212203ae163772a06288e2e25d833ddc63a13351d2de4e76e169f1ebe156eb04220c264736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2007:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:9"
															},
															"nodeType": "YulIf",
															"src": "115:2:9"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:9",
														"type": ""
													}
												],
												"src": "14:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "319:1149:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "365:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "374:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "382:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "367:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "367:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "367:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "340:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "349:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "336:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "336:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "361:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "332:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "332:32:9"
															},
															"nodeType": "YulIf",
															"src": "329:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "400:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "420:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "414:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "414:16:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "404:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "439:28:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "457:2:9",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "461:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "453:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "453:10:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "465:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "449:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "449:18:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "443:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "494:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "503:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "511:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "496:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "496:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "496:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "482:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "490:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "479:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "479:14:9"
															},
															"nodeType": "YulIf",
															"src": "476:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "529:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "543:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "554:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "539:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:22:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "533:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "609:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "618:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "626:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "611:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "611:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "611:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "592:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "584:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "584:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "599:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "580:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "580:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "573:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:35:9"
															},
															"nodeType": "YulIf",
															"src": "570:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "644:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "660:2:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "654:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "654:9:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "648:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "672:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "682:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "676:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "709:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "711:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "711:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "711:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "701:2:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "705:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "698:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "698:10:9"
															},
															"nodeType": "YulIf",
															"src": "695:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "740:20:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:1:9",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "757:2:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "750:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:10:9"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "744:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "769:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "789:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "783:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "783:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "773:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "801:56:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "823:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "839:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "843:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "835:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "835:11:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "852:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "848:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "848:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "831:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "831:25:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "819:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "819:38:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "805:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "916:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "918:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "918:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "918:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "875:10:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "887:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "872:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "872:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "895:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "907:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "892:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "892:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "869:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:46:9"
															},
															"nodeType": "YulIf",
															"src": "866:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "958:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "947:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "947:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "947:22:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "978:17:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "989:6:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "982:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1011:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1019:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1004:18:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1031:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1042:6:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1050:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1038:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1038:15:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1031:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1062:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1077:2:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1081:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1073:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1073:11:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1066:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1130:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1139:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1147:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1132:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1132:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1132:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1107:2:9"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "1111:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1103:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1103:11:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1116:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1099:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1099:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1121:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1096:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1096:33:9"
															},
															"nodeType": "YulIf",
															"src": "1093:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1165:15:9",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "1174:6:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1169:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1234:135:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1255:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1290:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "1260:29:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1260:34:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1248:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1248:47:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1248:47:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1308:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1319:3:9"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "1324:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1315:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1315:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1308:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1340:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1351:3:9"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "1356:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1347:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1347:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1340:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1200:1:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1203:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1197:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1207:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1209:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1218:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1221:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1214:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1214:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1209:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1193:3:9",
																"statements": []
															},
															"src": "1189:180:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1378:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1388:6:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1378:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1403:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1447:9:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1458:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1443:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1443:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1413:29:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1413:49:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "277:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "288:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "300:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "308:6:9",
														"type": ""
													}
												],
												"src": "196:1272:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1521:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1548:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1550:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1550:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1550:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1537:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1544:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1540:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1540:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1534:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1534:13:9"
															},
															"nodeType": "YulIf",
															"src": "1531:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1579:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1590:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1593:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1586:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1586:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1579:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1504:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1507:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1513:3:9",
														"type": ""
													}
												],
												"src": "1473:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1653:88:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1684:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1686:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1686:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1686:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1669:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1680:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1676:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1676:6:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1666:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1666:17:9"
															},
															"nodeType": "YulIf",
															"src": "1663:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1715:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1726:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1733:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1722:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1722:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1715:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1635:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1645:3:9",
														"type": ""
													}
												],
												"src": "1606:135:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1778:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1795:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1802:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1807:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1798:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1798:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1788:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1788:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1835:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1838:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1828:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1828:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1859:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1852:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1852:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1852:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1746:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1910:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1927:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1934:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1939:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1930:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1930:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1920:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1920:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1920:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1967:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1970:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1960:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1960:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1960:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1991:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1994:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1984:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1984:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1984:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1878:127:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := mload(_2)\n        let _4 := 0x20\n        if gt(_3, _1) { panic_error_0x41() }\n        let _5 := shl(5, _3)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, _5), _4), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := memPtr\n        value1 := abi_decode_address_fromMemory(add(headStart, _4))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3B5C CODESIZE SUB DUP1 PUSH3 0x3B5C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x20A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH3 0x44 CALLER PUSH3 0x19B JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x8 SSTORE PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x18B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x9D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH3 0xD2 SWAP2 SWAP1 PUSH3 0x2F2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x1 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH3 0x124 SWAP1 DUP3 SWAP1 PUSH3 0x2F2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x149 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH3 0x182 SWAP1 PUSH3 0x30D JUMP JUMPDEST SWAP2 POP POP PUSH3 0x67 JUMP JUMPDEST POP POP PUSH3 0x127500 PUSH1 0x4 SSTORE POP PUSH3 0x357 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x21D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x234 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x248 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH3 0x25F JUMPI PUSH3 0x25F PUSH3 0x341 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP7 DUP3 GT OR ISZERO PUSH3 0x287 JUMPI PUSH3 0x287 PUSH3 0x341 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP5 POP DUP6 DUP4 ADD DUP3 DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH3 0x2A6 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH3 0x2D3 JUMPI PUSH3 0x2BE DUP2 PUSH3 0x1ED JUMP JUMPDEST DUP7 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP4 ADD SWAP5 DUP4 ADD PUSH3 0x2AA JUMP JUMPDEST POP SWAP7 POP PUSH3 0x2E5 SWAP1 POP DUP8 DUP3 ADD PUSH3 0x1ED JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x308 JUMPI PUSH3 0x308 PUSH3 0x32B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x324 JUMPI PUSH3 0x324 PUSH3 0x32B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x37F5 DUP1 PUSH3 0x367 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0xC4F59F9B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE71E7F78 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE71E7F78 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4F59F9B EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xA54F5E0D EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x386A9525 GT PUSH2 0x150 JUMPI DUP1 PUSH4 0x6A1AF3B7 GT PUSH2 0x12A JUMPI DUP1 PUSH4 0x6A1AF3B7 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x6E353A1D EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x386A9525 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x3D509C97 EQ PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C03E6CC GT PUSH2 0x181 JUMPI DUP1 PUSH4 0x1C03E6CC EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x1B0875A6 EQ PUSH2 0x1E2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BA PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x33D5 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xB SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x33D5 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH2 0x9BE JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x3507 JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0xE11 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x33D5 JUMP JUMPDEST PUSH2 0x11A6 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x3409 JUMP JUMPDEST PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x33D5 JUMP JUMPDEST PUSH2 0x1A86 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x33D5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x1EC6 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2C2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x33D5 JUMP JUMPDEST PUSH2 0x1F66 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x3507 JUMP JUMPDEST PUSH2 0x200D JUMP JUMPDEST PUSH2 0x33B PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x3553 JUMP JUMPDEST PUSH2 0x1D4 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x2621 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x3409 JUMP JUMPDEST PUSH2 0x27DC JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x2D7E JUMP JUMPDEST PUSH2 0x1D4 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x33D5 JUMP JUMPDEST PUSH2 0x2D9F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3FF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0x40C PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x42B DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND DUP1 DUP5 MSTORE PUSH1 0x7 DUP7 MSTORE DUP5 DUP5 KECCAK256 SWAP2 SWAP1 SWAP3 AND DUP1 DUP5 MSTORE SWAP1 DUP6 MSTORE DUP4 DUP4 KECCAK256 SLOAD SWAP2 DUP4 MSTORE PUSH1 0x6 DUP6 MSTORE DUP4 DUP4 KECCAK256 DUP2 DUP5 MSTORE SWAP1 SWAP5 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD DUP6 MLOAD SWAP3 SWAP4 POP PUSH2 0x52B SWAP3 PUSH2 0x525 SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x51F SWAP2 PUSH2 0x4F3 SWAP2 DUP11 SWAP1 DUP11 SWAP1 DUP2 LT PUSH2 0x4DD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2ECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x2EDB JUMP JUMPDEST SWAP1 PUSH2 0x2EE7 JUMP JUMPDEST SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x564 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP DUP1 PUSH2 0x57A DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x411 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x611 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x8 SLOAD LT PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6F206D616E7920746F6B656E730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71D SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST GT PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742070726566756E6420636F6E74726163740000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x3657 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP4 DUP2 MSTORE PUSH1 0x8 DUP1 SLOAD DUP6 MSTORE PUSH1 0x9 DUP5 MSTORE DUP9 DUP6 KECCAK256 SWAP8 MLOAD DUP9 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP8 AND SWAP7 SWAP1 SWAP7 OR DUP8 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP8 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD SWAP1 DUP3 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP2 DUP3 KECCAK256 DUP2 SWAP1 SSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x86C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x895 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x1 PUSH1 0x8 SLOAD PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x36E5 JUMP JUMPDEST DUP2 EQ ISZERO PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x934 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x958 SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x991 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 PUSH2 0x9A8 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x89B JUMP JUMPDEST POP PUSH2 0x9BA DUP2 PUSH2 0x27DC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA04 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA2D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x4 SLOAD PUSH2 0xA73 SWAP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0xA53 DUP6 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2EDB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAAC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xAC1 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA33 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xB3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE CALLER SWAP1 PUSH2 0xB4D PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB5A DUP4 PUSH2 0x390 JUMP JUMPDEST SWAP1 POP PUSH2 0xB64 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xD03 JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0xB84 DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xBCD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO PUSH2 0xCF0 JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC32 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE DUP4 MLOAD DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xCAE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST POP DUP1 PUSH2 0xCFB DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB6A JUMP JUMPDEST POP PUSH1 0x0 DUP5 GT PUSH2 0xD6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0xD7B SWAP1 DUP6 PUSH2 0x2ECF JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD98 SWAP1 DUP6 PUSH2 0x2ECF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH2 0xDD1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP7 PUSH2 0x2EFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xE7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE CALLER SWAP1 PUSH2 0xE8F PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE9C DUP4 PUSH2 0x390 JUMP JUMPDEST SWAP1 POP PUSH2 0xEA6 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1045 JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0xEC6 DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF0F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO PUSH2 0x1032 JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF74 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE DUP4 MLOAD DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xFF0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST POP DUP1 PUSH2 0x103D DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEAC JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x119B JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH1 0x9 DUP2 PUSH2 0x1071 DUP7 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 MSTORE SWAP2 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD SWAP1 KECCAK256 SLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x1188 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH1 0x9 DUP2 PUSH2 0x10D1 DUP8 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 MSTORE SWAP2 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1152 SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH1 0x9 SWAP1 PUSH2 0x1124 DUP8 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 SWAP1 PUSH2 0x2EFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP DUP1 PUSH2 0x1193 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1049 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1227 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1232 PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x123F DUP4 PUSH2 0x390 JUMP JUMPDEST SWAP1 POP PUSH2 0x1249 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x13E8 JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x1269 DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12B2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO PUSH2 0x13D5 JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1317 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE DUP4 MLOAD DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1393 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST POP DUP1 PUSH2 0x13E0 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x124F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x8 SLOAD GT PUSH2 0x1455 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206861766520302072657761726420746F6B656E730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 GT PUSH2 0x159B JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x1496 DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP6 DUP3 MSTORE PUSH1 0x9 SWAP4 DUP5 SWAP1 MSTORE SWAP2 DUP2 KECCAK256 DUP3 SLOAD DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP2 DUP4 ADD SSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 SWAP4 POP SWAP1 PUSH2 0x151D SWAP1 DUP6 SWAP1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 ADD DUP2 SWAP1 SSTORE SWAP3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE DUP1 PUSH2 0x1593 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x147D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15AF SWAP2 SWAP1 PUSH2 0x36E5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x163C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 MLOAD EQ PUSH2 0x16A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57726F6E6720616D6F756E747300000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1A6C JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x16C5 DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP3 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP4 POP SWAP1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1757 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x177B SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST SWAP1 POP PUSH2 0x17E6 CALLER ADDRESS DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x17BB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD DUP6 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 SWAP2 SWAP1 PUSH2 0x2FD8 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH2 0x1893 SWAP2 DUP5 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1869 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x188D SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST SWAP1 PUSH2 0x2ECF JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD TIMESTAMP LT PUSH2 0x18B6 JUMPI PUSH1 0x4 SLOAD PUSH2 0x18AC SWAP1 DUP3 SWAP1 PUSH2 0x2EE7 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE PUSH2 0x18FD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x18C6 SWAP1 TIMESTAMP PUSH2 0x2ECF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18E1 DUP6 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x2EDB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH2 0x18F5 SWAP1 PUSH2 0x51F DUP6 DUP5 PUSH2 0x2EF3 JUMP JUMPDEST PUSH1 0x1 DUP7 ADD SSTORE POP POP JUMPDEST DUP3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1966 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x197A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x199E SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST SWAP1 POP PUSH2 0x19B5 PUSH1 0x4 SLOAD DUP3 PUSH2 0x2EE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x1A22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420746F6F20686967680000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP DUP1 DUP1 PUSH2 0x1A64 SWAP1 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16AB JUMP JUMPDEST POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH2 0x1A80 SWAP2 SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST PUSH1 0x3 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1B07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B12 PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B1F DUP4 PUSH2 0x390 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B29 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1CC8 JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x1B49 DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B92 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO PUSH2 0x1CB5 JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1BF7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE DUP4 MLOAD DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1C73 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST POP DUP1 PUSH2 0x1CC0 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B2F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D69 SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1DD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420686F6C6473206E6F20746F6B656E730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x1E10 PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EB5 SWAP2 SWAP1 PUSH2 0x34E7 JUMP JUMPDEST POP PUSH2 0x1EBF DUP6 PUSH2 0x11A6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1F47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH2 0x1F51 PUSH1 0x0 PUSH2 0x303C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F61 TIMESTAMP PUSH1 0x3 SLOAD PUSH2 0x30B3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xB SLOAD PUSH2 0x1FAB JUMPI PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2006 PUSH2 0x1FEE PUSH1 0xB SLOAD PUSH2 0x51F PUSH8 0xDE0B6B3A7640000 PUSH2 0x1FE8 PUSH1 0x9 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1FE8 PUSH1 0x5 SLOAD PUSH2 0x188D PUSH2 0x1F53 JUMP JUMPDEST SWAP1 PUSH2 0x2EDB JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x207A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE CALLER SWAP1 PUSH2 0x208B PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2098 DUP4 PUSH2 0x390 JUMP JUMPDEST SWAP1 POP PUSH2 0x20A2 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2241 JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x20C2 DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x210B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO PUSH2 0x222E JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2170 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE DUP4 MLOAD DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x21EC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST POP DUP1 PUSH2 0x2239 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20A8 JUMP JUMPDEST POP PUSH1 0x0 DUP5 GT PUSH2 0x22AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x232A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x234E SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0x2376 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP9 PUSH2 0x2FD8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2418 SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2426 DUP3 DUP5 PUSH2 0x2ECF JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0x2436 SWAP1 DUP3 PUSH2 0x2EF3 JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2453 SWAP1 DUP3 PUSH2 0x2EF3 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH2 0x2499 SWAP1 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24F5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2560 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x254D PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2513 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x9 PUSH1 0x0 PUSH2 0x257F DUP4 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 ADD SLOAD SWAP1 DUP3 ADD MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2603 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2619 SWAP1 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2566 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2667 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2690 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0xB SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2722 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x9 PUSH1 0x0 PUSH2 0x26BA DUP4 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2705 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x271A DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x273F DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x2785 PUSH2 0x277A PUSH1 0xB SLOAD PUSH2 0x51F PUSH8 0xDE0B6B3A7640000 PUSH2 0x1FE8 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1FE8 PUSH1 0x5 SLOAD PUSH2 0x188D PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x27BE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP DUP1 PUSH2 0x27D4 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2725 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x285D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2868 PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2875 DUP4 PUSH2 0x390 JUMP JUMPDEST SWAP1 POP PUSH2 0x287F PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2A1E JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x289F DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x28E8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO PUSH2 0x2A0B JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x294D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE DUP4 MLOAD DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x29C9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST POP DUP1 PUSH2 0x2A16 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2885 JUMP JUMPDEST POP PUSH1 0x8 SLOAD DUP5 MLOAD EQ PUSH2 0x2A8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57726F6E672072657761726420616D6F756E7473000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2D61 JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x2AA8 DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x3 SLOAD TIMESTAMP LT PUSH2 0x2B20 JUMPI PUSH2 0x2B16 PUSH1 0x4 SLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2B00 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2EE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH2 0x2BAE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2B30 SWAP1 TIMESTAMP PUSH2 0x2ECF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B4B DUP4 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x2EDB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2BA6 PUSH1 0x4 SLOAD PUSH2 0x51F DUP4 DUP12 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x2B90 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2EF3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE POP POP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C4F SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST SWAP1 POP PUSH2 0x2C66 PUSH1 0x4 SLOAD DUP3 PUSH2 0x2EE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x2CD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420746F6F20686967680000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2D2D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x2D44 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP DUP1 DUP1 PUSH2 0x2D59 SWAP1 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A8E JUMP JUMPDEST POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH2 0x2D75 SWAP2 SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST PUSH1 0x3 SSTORE POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2D97 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x1F51 PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2E20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2EC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x608 JUMP JUMPDEST PUSH2 0x2ECC DUP2 PUSH2 0x303C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2006 DUP3 DUP5 PUSH2 0x36E5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2006 DUP3 DUP5 PUSH2 0x36A8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2006 DUP3 DUP5 PUSH2 0x366F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2006 DUP3 DUP5 PUSH2 0x3657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2FD3 SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x30C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x3036 SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD PUSH2 0x2F51 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x30C2 JUMPI DUP2 PUSH2 0x2006 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x312B DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2FD3 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3149 SWAP2 SWAP1 PUSH2 0x34E7 JUMP JUMPDEST PUSH2 0x2FD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x31E4 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x31EC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x327E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x608 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x32FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3325 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3362 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3367 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3377 DUP3 DUP3 DUP7 PUSH2 0x3382 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3391 JUMPI POP DUP2 PUSH2 0x2006 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x33A1 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x3606 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33E6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2006 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x341B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3432 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3445 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3457 JUMPI PUSH2 0x3457 PUSH2 0x3790 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x349A JUMPI PUSH2 0x349A PUSH2 0x3790 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x34B8 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x34DA JUMPI DUP1 CALLDATALOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x34BC JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34F8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2006 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3518 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3530 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3549 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x36FC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x35B5 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 ADD MLOAD DUP6 DUP6 ADD MSTORE PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3570 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x35FA JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x35DE JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3625 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x36FC JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x366A JUMPI PUSH2 0x366A PUSH2 0x3761 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x36A3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x36E0 JUMPI PUSH2 0x36E0 PUSH2 0x3761 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x36F7 JUMPI PUSH2 0x36F7 PUSH2 0x3761 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3717 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x36FF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3036 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x375A JUMPI PUSH2 0x375A PUSH2 0x3761 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xE1 PUSH4 0x772A0628 DUP15 0x2E 0x25 0xD8 CALLER 0xDD 0xC6 GASPRICE SGT CALLDATALOAD SAR 0x2D 0xE4 0xE7 PUSH15 0x169F1EBE156EB04220C264736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "301:11633:0:-:0;;;1220:530;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:3;1806:7;:22;914:32:2;719:10:1;914:18:2;:32::i;:::-;1319:12:0;:36;;-1:-1:-1;;;;;;1319:36:0;-1:-1:-1;;;;;1319:36:0;;;;;1386:20;;1365:18;:41;-1:-1:-1;1417:291:0;1434:13;:20;1430:1;:24;1417:291;;;1498:140;;;;;;;;1535:13;1549:1;1535:16;;;;;;-1:-1:-1;;;1535:16:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;1498:140:0;;;;;1581:1;1498:140;;;;1622:1;1498:140;;;1475:13;:20;1489:1;1493;1489:5;;;;:::i;:::-;1475:20;;;;;;;;;;;;;;-1:-1:-1;1475:20:0;:163;;;;-1:-1:-1;;;;;;1475:163:0;-1:-1:-1;;;;;1475:163:0;;;;;;;;;;-1:-1:-1;1475:163:0;;;;;;;;;;;;;;;1692:5;;:1;;:5;:::i;:::-;1652:19;:37;1672:13;1686:1;1672:16;;;;;;-1:-1:-1;;;1672:16:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;1652:37:0;-1:-1:-1;;;;;1652:37:0;;;;;;;;;;;;:45;;;;1456:3;;;;;:::i;:::-;;;;1417:291;;;-1:-1:-1;;1736:7:0;1718:15;:25;-1:-1:-1;301:11633:0;;2263:187:2;2355:6;;;-1:-1:-1;;;;;2371:17:2;;;-1:-1:-1;;;;;;2371:17:2;;;;;;;2403:40;;2355:6;;;2371:17;2355:6;;2403:40;;2336:16;;2403:40;2263:187;;:::o;14:177:9:-;93:13;;-1:-1:-1;;;;;135:31:9;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:1272::-;300:6;308;361:2;349:9;340:7;336:23;332:32;329:2;;;382:6;374;367:22;329:2;414:16;;-1:-1:-1;;;;;479:14:9;;;476:2;;;511:6;503;496:22;476:2;554:6;543:9;539:22;529:32;;599:7;592:4;588:2;584:13;580:27;570:2;;626:6;618;611:22;570:2;660;654:9;682:4;705:2;701;698:10;695:2;;;711:18;;:::i;:::-;757:2;754:1;750:10;789:2;783:9;852:2;848:7;843:2;839;835:11;831:25;823:6;819:38;907:6;895:10;892:22;887:2;875:10;872:18;869:46;866:2;;;918:18;;:::i;:::-;954:2;947:22;1004:18;;;1038:15;;;;-1:-1:-1;1073:11:9;;;1103;;;1099:20;;1096:33;-1:-1:-1;1093:2:9;;;1147:6;1139;1132:22;1093:2;1174:6;1165:15;;1189:180;1203:2;1200:1;1197:9;1189:180;;;1260:34;1290:3;1260:34;:::i;:::-;1248:47;;1221:1;1214:9;;;;;1315:12;;;;1347;;1189:180;;;-1:-1:-1;1388:6:9;-1:-1:-1;1413:49:9;;-1:-1:-1;1443:18:9;;;1413:49;:::i;:::-;1403:59;;;;;;319:1149;;;;;:::o;1473:128::-;1513:3;1544:1;1540:6;1537:1;1534:13;1531:2;;;1550:18;;:::i;:::-;-1:-1:-1;1586:9:9;;1521:80::o;1606:135::-;1645:3;-1:-1:-1;;1666:17:9;;1663:2;;;1686:18;;:::i;:::-;-1:-1:-1;1733:1:9;1722:13;;1653:88::o;1746:127::-;1807:10;1802:3;1798:20;1795:1;1788:31;1838:4;1835:1;1828:15;1862:4;1859:1;1852:15;1878:127;1939:10;1934:3;1930:20;1927:1;1920:31;1970:4;1967:1;1960:15;1994:4;1991:1;1984:15;1910:95;301:11633:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12957:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:259:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:9"
															},
															"nodeType": "YulIf",
															"src": "94:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "287:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "296:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "304:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "289:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "289:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "289:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "223:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "234:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "241:42:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "230:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "230:54:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "220:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "220:65:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "213:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "213:73:9"
															},
															"nodeType": "YulIf",
															"src": "210:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "322:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "332:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "322:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:9",
														"type": ""
													}
												],
												"src": "14:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "443:1135:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "453:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "463:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "457:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "510:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "519:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "527:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "512:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "512:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "512:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "485:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "494:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "481:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "481:23:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "506:2:9"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "477:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "477:32:9"
															},
															"nodeType": "YulIf",
															"src": "474:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "545:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "572:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "559:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "559:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "549:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "591:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "601:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "595:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "646:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "655:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "663:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "648:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "648:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "648:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "634:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "642:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "631:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "631:14:9"
															},
															"nodeType": "YulIf",
															"src": "628:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "681:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "695:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "691:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "691:22:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "685:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "770:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "778:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "763:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "740:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "744:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "736:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "736:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "751:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "725:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:35:9"
															},
															"nodeType": "YulIf",
															"src": "722:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "796:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "819:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "806:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:16:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "800:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "845:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "847:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "847:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "847:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "837:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "841:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "834:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "834:10:9"
															},
															"nodeType": "YulIf",
															"src": "831:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "876:20:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "890:1:9",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "893:2:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "886:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "886:10:9"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "880:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "905:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "925:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "919:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "909:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "937:115:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "959:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "975:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "979:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "971:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "971:11:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "984:66:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "967:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "967:84:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "955:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "955:97:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "941:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1111:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1113:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1113:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1113:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1070:10:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1082:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1067:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1067:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1090:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1102:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1087:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1087:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1064:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:46:9"
															},
															"nodeType": "YulIf",
															"src": "1061:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1149:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1153:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1142:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1142:22:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1173:17:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1184:6:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1177:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1206:6:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1214:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1199:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1199:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1199:18:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1226:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1237:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1245:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1233:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1233:15:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1226:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1257:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1272:2:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1268:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:11:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1261:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1325:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1334:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1342:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1327:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1327:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1327:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1302:2:9"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "1306:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1298:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1298:11:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1311:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1294:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1294:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1316:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1291:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1291:33:9"
															},
															"nodeType": "YulIf",
															"src": "1288:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1360:15:9",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "1369:6:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1364:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1429:118:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1450:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1468:3:9"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1455:12:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1455:17:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1443:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1443:30:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1443:30:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1486:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1497:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1502:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1493:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1493:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1486:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1518:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1529:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1534:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1525:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1525:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1518:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1395:1:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1398:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1392:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1392:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1402:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1404:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1413:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1416:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1409:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1409:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1404:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1388:3:9",
																"statements": []
															},
															"src": "1384:163:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1556:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1566:6:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1556:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "409:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "420:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "432:6:9",
														"type": ""
													}
												],
												"src": "348:1230:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1661:219:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1707:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1716:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1724:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1709:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1709:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1709:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1682:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1691:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1678:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1678:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1703:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1674:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:32:9"
															},
															"nodeType": "YulIf",
															"src": "1671:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1742:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1761:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1755:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1755:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1746:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1824:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1833:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1841:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1826:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1826:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1826:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1793:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1814:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1807:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1807:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1800:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1800:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1790:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1790:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1783:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1783:40:9"
															},
															"nodeType": "YulIf",
															"src": "1780:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1859:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1869:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1627:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1638:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1650:6:9",
														"type": ""
													}
												],
												"src": "1583:297:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1955:120:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2001:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2010:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2018:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2003:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2003:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2003:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1976:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1985:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1972:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1972:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1997:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1968:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1968:32:9"
															},
															"nodeType": "YulIf",
															"src": "1965:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2036:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2059:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2046:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2046:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2036:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1921:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1932:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1944:6:9",
														"type": ""
													}
												],
												"src": "1885:190:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2161:113:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2216:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2224:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2209:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2182:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2191:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2203:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2174:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2174:32:9"
															},
															"nodeType": "YulIf",
															"src": "2171:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2242:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2258:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2252:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2252:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2242:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2127:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2138:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2150:6:9",
														"type": ""
													}
												],
												"src": "2080:194:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2416:137:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2426:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2446:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2440:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2440:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2430:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2488:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2496:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2484:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2484:17:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2503:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2508:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2462:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2462:53:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2462:53:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2524:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2535:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2540:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2524:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2392:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2397:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2408:3:9",
														"type": ""
													}
												],
												"src": "2279:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:125:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2711:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2734:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2722:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2722:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2704:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2704:74:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2704:74:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2628:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2639:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2650:4:9",
														"type": ""
													}
												],
												"src": "2558:226:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2946:241:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2956:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2968:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2979:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2964:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2964:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2956:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2991:52:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3001:42:9",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2995:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3059:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3074:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3082:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3070:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3070:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3052:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3052:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3052:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3106:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3117:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3102:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3102:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3126:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3134:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3122:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3122:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3095:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3095:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3095:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3158:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3169:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3154:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3154:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3174:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3147:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3147:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3147:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2899:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2910:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2918:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2926:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2937:4:9",
														"type": ""
													}
												],
												"src": "2789:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3321:168:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3331:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3343:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3354:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3339:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3339:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3331:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3373:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3388:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3396:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3384:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3384:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3366:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:74:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3366:74:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3460:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3471:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3456:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3456:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3476:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3449:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3449:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3282:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3293:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3301:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3312:4:9",
														"type": ""
													}
												],
												"src": "3192:297:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3699:694:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3709:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3719:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3713:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3730:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3748:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3759:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3744:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3744:18:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3734:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3778:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3789:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3771:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3771:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3771:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3801:17:9",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "3812:6:9"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3805:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3827:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3847:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3841:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3831:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3870:6:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3878:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3863:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3863:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3863:22:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3894:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3904:2:9",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3898:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3915:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3926:9:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3937:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3922:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3922:18:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3915:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3949:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3967:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3975:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3963:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:15:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3953:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3987:13:9",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "3996:4:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3991:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4058:309:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4072:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4088:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4082:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4082:13:9"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "4076:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4115:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "4130:2:9"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "4124:5:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4124:9:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4135:42:9",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4120:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4120:58:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4108:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4108:71:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4108:71:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "4203:3:9"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "4208:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4199:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4199:12:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "4223:2:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "4227:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4219:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4219:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4213:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4213:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4192:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4192:40:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4192:40:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "4256:3:9"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "4261:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4252:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4252:12:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "4276:2:9"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "4280:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4272:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4272:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4266:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4266:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4245:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4245:40:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4245:40:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4298:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4309:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4314:4:9",
																					"type": "",
																					"value": "0x60"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4305:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4305:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4298:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4332:25:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4346:6:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4354:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4342:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4342:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4332:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4020:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4023:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4017:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4017:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4031:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4033:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4042:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4045:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4038:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4038:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4033:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4013:3:9",
																"statements": []
															},
															"src": "4009:358:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4376:11:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4384:3:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4376:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_RewardToken_$63_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_RewardToken_$63_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3668:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3679:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3690:4:9",
														"type": ""
													}
												],
												"src": "3494:899:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4549:484:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4559:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4569:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4563:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4580:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4598:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4609:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4594:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4594:18:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "4584:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4628:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4639:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4621:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4621:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4621:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4651:17:9",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "4662:6:9"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "4655:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4677:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4697:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4691:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4691:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4681:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "4720:6:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4728:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4713:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4713:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4713:22:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4744:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4755:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4766:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4751:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4751:18:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4744:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4778:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4796:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4804:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4792:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4792:15:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4782:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4816:13:9",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "4825:4:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4820:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4887:120:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4908:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "4919:6:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4913:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4913:13:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4901:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4901:26:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4901:26:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4940:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4951:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4956:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4947:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4947:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4940:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4972:25:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4986:6:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4994:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4982:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4982:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4972:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4849:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4852:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4846:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4860:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4862:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4871:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4874:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4867:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4867:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4862:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4842:3:9",
																"statements": []
															},
															"src": "4838:169:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5016:11:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5024:3:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5016:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4518:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4529:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4540:4:9",
														"type": ""
													}
												],
												"src": "4398:635:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5154:125:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5164:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5176:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5172:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5172:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5164:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5206:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5221:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5229:42:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5217:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5217:55:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:74:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:74:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1584__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5123:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5134:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5145:4:9",
														"type": ""
													}
												],
												"src": "5038:241:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5405:321:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5422:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5433:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5415:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5415:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5415:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5445:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5465:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5459:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5459:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5449:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5492:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5503:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5488:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5488:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5508:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5481:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5481:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5481:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5550:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5558:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5546:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5546:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5567:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5578:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5563:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5563:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5583:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5524:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5524:66:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5524:66:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5599:121:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5615:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "5634:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5642:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5630:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5630:15:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5647:66:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5626:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5626:88:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5611:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5611:104:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5717:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5607:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5607:113:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5599:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5374:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5385:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5396:4:9",
														"type": ""
													}
												],
												"src": "5284:442:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5905:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5922:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5933:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5915:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5915:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5956:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5967:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5952:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5952:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5972:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5945:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5945:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5945:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5995:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6006:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5991:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5991:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6011:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5984:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5984:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5984:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6066:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6077:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6062:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6062:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6082:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6055:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6055:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6055:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6100:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6112:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6123:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6108:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6108:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6100:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5882:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5896:4:9",
														"type": ""
													}
												],
												"src": "5731:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6312:165:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6329:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6340:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6322:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6322:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6322:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6363:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6374:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6359:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6359:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6379:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6352:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6352:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6352:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6402:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6413:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6398:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6398:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6418:17:9",
																		"type": "",
																		"value": "Too many tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6391:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6391:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6391:45:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6445:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6457:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6468:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6453:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6453:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6445:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2854eb83cae56883ea7529babcc9778251f9933ac00867d851a4275271ac901a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6289:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6303:4:9",
														"type": ""
													}
												],
												"src": "6138:339:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6656:164:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6666:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6666:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6666:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6707:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6718:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6703:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6703:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6723:2:9",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6696:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6696:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6696:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6746:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6757:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6742:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6742:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6762:16:9",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6735:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6735:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6735:44:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6788:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6800:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6811:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6796:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6796:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6788:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6633:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6647:4:9",
														"type": ""
													}
												],
												"src": "6482:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6999:177:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7016:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7027:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7009:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7009:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7009:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7050:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7061:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7046:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7066:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7039:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7039:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7039:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7089:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7100:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7085:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7085:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7105:29:9",
																		"type": "",
																		"value": "Cannot have 0 reward tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7078:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7078:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7078:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7144:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7156:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7167:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7152:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7152:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7144:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_440d0bb91dcfc5e17342b3768116df531a121a1693edbb4baf6c405d72e94d91__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6976:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6990:4:9",
														"type": ""
													}
												],
												"src": "6825:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7355:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7372:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7383:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7365:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7365:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7365:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7406:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7417:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7402:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7402:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7422:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7395:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7395:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7395:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7445:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7456:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7441:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7441:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7461:34:9",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7434:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7434:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7434:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7516:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7527:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7512:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7512:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7532:8:9",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7505:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7505:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7550:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7562:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7573:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7558:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7558:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7550:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7332:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7346:4:9",
														"type": ""
													}
												],
												"src": "7181:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7762:171:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7779:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7790:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7772:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7772:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7772:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7813:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7824:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7809:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7809:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7829:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7802:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7802:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7802:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7852:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7863:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7848:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7848:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7868:23:9",
																		"type": "",
																		"value": "Must prefund contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7841:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7841:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7841:51:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7901:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7913:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7924:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7909:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7909:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7901:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5d2a30cfb4e76336d9b2c80cb01546acee0bf34fecc17e954358e98c0fe2578a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7739:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7753:4:9",
														"type": ""
													}
												],
												"src": "7588:345:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8112:170:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8129:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8140:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8122:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8122:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8122:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8163:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8174:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8159:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8159:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8179:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8152:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8152:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8152:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8202:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8213:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8198:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8198:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8218:22:9",
																		"type": "",
																		"value": "Wrong reward amounts"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8191:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8191:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8191:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8250:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8262:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8273:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8258:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8258:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8250:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67a3ded8799194fca390772802e46c6b945e9d06ccf5007a6fea03dc10e1e668__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8089:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8103:4:9",
														"type": ""
													}
												],
												"src": "7938:344:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8461:163:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8478:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8489:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8471:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8471:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8471:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8512:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8523:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8508:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8508:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8528:2:9",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8501:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8501:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8551:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8562:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8547:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8547:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8567:15:9",
																		"type": "",
																		"value": "Wrong amounts"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8540:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8540:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8540:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8592:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8604:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8615:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8600:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8600:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8592:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6818acafc3391f4bc771496b2b0951ea652f681be7991f8106c505736b6c7b1a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8438:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8452:4:9",
														"type": ""
													}
												],
												"src": "8287:337:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8803:167:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8820:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8831:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8813:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8813:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8813:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8854:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8865:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8850:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8850:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8870:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8843:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8843:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8843:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8893:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8904:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8889:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8889:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8909:19:9",
																		"type": "",
																		"value": "Cannot withdraw 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8882:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8882:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8882:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8938:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8950:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8961:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8946:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8946:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8938:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8780:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8794:4:9",
														"type": ""
													}
												],
												"src": "8629:341:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9149:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9166:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9177:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9159:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9159:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9159:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9200:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9211:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9196:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9196:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9216:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9189:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9189:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9189:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9239:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9250:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9235:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9235:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9255:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9228:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9228:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9228:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9299:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9311:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9322:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9307:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9307:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9299:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9126:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9140:4:9",
														"type": ""
													}
												],
												"src": "8975:356:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9510:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9527:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9538:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9520:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9520:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9520:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9561:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9572:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9557:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9557:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9577:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9550:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9550:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9550:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9600:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9611:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9596:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9596:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9616:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9589:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9589:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9589:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9657:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9669:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9680:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9665:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9665:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9657:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9487:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9501:4:9",
														"type": ""
													}
												],
												"src": "9336:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9868:165:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9885:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9896:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9878:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9878:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9878:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9919:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9930:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9915:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9915:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9935:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9908:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9908:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9908:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9958:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9969:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9954:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9954:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9974:17:9",
																		"type": "",
																		"value": "Reward too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9947:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9947:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9947:45:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10001:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10013:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10024:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10009:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10009:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10001:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da6a2c2e75a1ef97996a5ed7ec90b51579be684745c2068143284d67c1b2f0f1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9845:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9859:4:9",
														"type": ""
													}
												],
												"src": "9694:339:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10212:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10229:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10240:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10222:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10222:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10222:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10263:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10274:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10259:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10259:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10279:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10252:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10252:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10252:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10302:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10313:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10298:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10298:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10318:34:9",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10291:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10291:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10291:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10373:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10384:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10369:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10369:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10389:12:9",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10362:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10362:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10362:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10411:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10423:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10434:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10419:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10419:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10411:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10189:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10203:4:9",
														"type": ""
													}
												],
												"src": "10038:406:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10623:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10640:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10651:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10633:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10633:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10633:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10674:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10685:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10670:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10670:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10690:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10663:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10663:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10663:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10713:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10724:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10709:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10709:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10729:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10702:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10702:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10702:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10772:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10784:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10795:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10780:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10780:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10772:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10600:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10614:4:9",
														"type": ""
													}
												],
												"src": "10449:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10983:174:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11000:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11011:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10993:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10993:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10993:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11034:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11045:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11030:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11030:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11050:2:9",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11023:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11023:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11023:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11073:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11084:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11069:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11069:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11089:26:9",
																		"type": "",
																		"value": "Contract holds no tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11062:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11062:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11062:54:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11125:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11137:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11148:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11133:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11133:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11125:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f59ac452818e0de8831336b02924e8d8f784421e5ded6b2890861e5496a0111d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10960:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10974:4:9",
														"type": ""
													}
												],
												"src": "10809:348:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11263:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11273:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11285:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11296:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11281:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11281:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11273:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11315:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11326:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11308:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11308:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11308:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11232:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11243:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11254:4:9",
														"type": ""
													}
												],
												"src": "11162:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11392:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11419:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11421:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11421:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11421:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11408:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11415:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11411:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11411:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11405:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11405:13:9"
															},
															"nodeType": "YulIf",
															"src": "11402:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11450:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11461:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11464:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11457:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11457:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11450:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11375:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11378:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11384:3:9",
														"type": ""
													}
												],
												"src": "11344:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11523:228:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11554:168:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "11575:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11578:77:9",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11568:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11568:88:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11568:88:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11676:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11679:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11669:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11669:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11669:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "11704:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11707:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11697:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11697:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11697:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11543:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11536:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11536:9:9"
															},
															"nodeType": "YulIf",
															"src": "11533:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11731:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11740:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11743:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11736:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11736:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11731:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11508:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11511:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11517:1:9",
														"type": ""
													}
												],
												"src": "11477:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11808:176:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11927:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11929:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11929:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11929:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11839:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11832:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11832:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11825:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11825:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11847:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11854:66:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11922:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11850:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11850:74:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11844:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11844:81:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11821:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11821:105:9"
															},
															"nodeType": "YulIf",
															"src": "11818:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11958:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11973:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11976:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11969:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11969:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11958:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11787:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11790:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11796:7:9",
														"type": ""
													}
												],
												"src": "11756:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12038:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12060:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12062:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12062:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12062:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12054:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12057:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12051:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12051:8:9"
															},
															"nodeType": "YulIf",
															"src": "12048:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12091:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12103:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12106:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12099:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12099:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12091:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12020:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12023:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12029:4:9",
														"type": ""
													}
												],
												"src": "11989:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12172:205:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12182:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12191:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12186:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12251:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12276:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12281:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12272:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12272:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "12295:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12300:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12291:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12291:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12285:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12285:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12265:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12265:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12265:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12212:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12215:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12209:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12209:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12223:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12225:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12234:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12237:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12230:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12230:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12225:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12205:3:9",
																"statements": []
															},
															"src": "12201:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12340:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12353:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12358:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12349:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12349:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12367:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12342:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12342:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12342:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12329:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12332:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12326:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12326:13:9"
															},
															"nodeType": "YulIf",
															"src": "12323:2:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12150:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "12155:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12160:6:9",
														"type": ""
													}
												],
												"src": "12119:258:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12429:148:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12520:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12522:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12522:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12522:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12445:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12452:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12442:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12442:77:9"
															},
															"nodeType": "YulIf",
															"src": "12439:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12551:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12562:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12569:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12558:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12558:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12551:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12411:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12421:3:9",
														"type": ""
													}
												],
												"src": "12382:195:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12614:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12631:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12634:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12624:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12624:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12728:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12731:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12721:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12721:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12721:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12752:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12755:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12745:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12745:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12745:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12582:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12803:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12820:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12823:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12813:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12813:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12813:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12917:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12920:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12910:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12910:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12910:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12941:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12944:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12934:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12934:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12934:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "12771:184:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_RewardToken_$63_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_RewardToken_$63_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), 0xffffffffffffffffffffffffffffffffffffffff))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            pos := add(pos, 0x60)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1584__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2854eb83cae56883ea7529babcc9778251f9933ac00867d851a4275271ac901a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Too many tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Cannot stake 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_440d0bb91dcfc5e17342b3768116df531a121a1693edbb4baf6c405d72e94d91__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Cannot have 0 reward tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5d2a30cfb4e76336d9b2c80cb01546acee0bf34fecc17e954358e98c0fe2578a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Must prefund contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_67a3ded8799194fca390772802e46c6b945e9d06ccf5007a6fea03dc10e1e668__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Wrong reward amounts\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6818acafc3391f4bc771496b2b0951ea652f681be7991f8106c505736b6c7b1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Wrong amounts\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Cannot withdraw 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_da6a2c2e75a1ef97996a5ed7ec90b51579be684745c2068143284d67c1b2f0f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Reward too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f59ac452818e0de8831336b02924e8d8f784421e5ded6b2890861e5496a0111d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Contract holds no tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a25760003560e01c8063715018a6116100ee578063c4f59f9b11610097578063e71e7f7811610071578063e71e7f7814610359578063e9fad8ee1461036c578063ebe2b12b14610374578063f2fde38b1461037d57600080fd5b8063c4f59f9b14610333578063c8f33c9114610348578063cd3daf9d1461035157600080fd5b80638da5cb5b116100c85780638da5cb5b146102ef578063a54f5e0d1461030d578063a694fc3a1461032057600080fd5b8063715018a61461029a57806372f702f3146102a257806380faa57d146102e757600080fd5b8063386a9525116101505780636a1af3b71161012a5780636a1af3b71461023e5780636e353a1d1461025157806370a082311461026457600080fd5b8063386a95251461021a5780633d18b912146102235780633d509c971461022b57600080fd5b80631c03e6cc116101815780631c03e6cc146101ea5780631c1f78eb146101ff5780632e1a7d4d1461020757600080fd5b80628cc262146101a757806318160ddd146101d05780631b0875a6146101e2575b600080fd5b6101ba6101b53660046133d5565b610390565b6040516101c791906135c2565b60405180910390f35b600b545b6040519081526020016101c7565b6008546101d4565b6101fd6101f83660046133d5565b61058b565b005b6101ba6109be565b6101fd610215366004613507565b610acf565b6101d460045481565b6101fd610e11565b6101fd6102393660046133d5565b6111a6565b6101fd61024c366004613409565b6115bb565b6101fd61025f3660046133d5565b611a86565b6101d46102723660046133d5565b73ffffffffffffffffffffffffffffffffffffffff166000908152600c602052604090205490565b6101fd611ec6565b6002546102c29073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c7565b6101d4611f53565b60015473ffffffffffffffffffffffffffffffffffffffff166102c2565b6101d461031b3660046133d5565b611f66565b6101fd61032e366004613507565b61200d565b61033b6124af565b6040516101c79190613553565b6101d460055481565b6101ba612621565b6101fd610367366004613409565b6127dc565b6101fd612d7e565b6101d460035481565b6101fd61038b3660046133d5565b612d9f565b6060600060085467ffffffffffffffff8111156103d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156103ff578160200160208202803683370190505b509050600061040c612621565b905060005b60085481101561058257600060098161042b846001613657565b8152602080820192909252604090810160009081205473ffffffffffffffffffffffffffffffffffffffff8a81168084526007865284842091909216808452908552838320549183526006855283832081845290945291902054855192935061052b9261052591670de0b6b3a76400009161051f916104f3918a908a9081106104dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151612ecf90919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff8c166000908152600c602052604090205490612edb565b90612ee7565b90612ef3565b848381518110610564577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020908102919091010152508061057a81613728565b915050610411565b50909392505050565b60015473ffffffffffffffffffffffffffffffffffffffff163314610611576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60066008541061067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f546f6f206d616e7920746f6b656e7300000000000000000000000000000000006044820152606401610608565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8316906370a082319060240160206040518083038186803b1580156106e557600080fd5b505afa1580156106f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071d919061351f565b11610784576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4d7573742070726566756e6420636f6e747261637400000000000000000000006044820152606401610608565b6001600860008282546107979190613657565b90915550506040805160608101825273ffffffffffffffffffffffffffffffffffffffff8381168083526000602080850182815285870183815260088054855260098452888520975188547fffffffffffffffffffffffff000000000000000000000000000000000000000016971696909617875590516001870155516002909501949094559154908252600a90925291822081905567ffffffffffffffff81111561086c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610895578160200160208202803683370190505b50905060005b6008548110156109b05760016008546108b491906136e5565b81141561099e576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8416906370a082319060240160206040518083038186803b15801561092057600080fd5b505afa158015610934573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610958919061351f565b828281518110610991577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505b806109a881613728565b91505061089b565b506109ba816127dc565b5050565b6060600060085467ffffffffffffffff811115610a04577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610a2d578160200160208202803683370190505b50905060005b600854811015610ac957600454610a739060096000610a53856001613657565b815260200190815260200160002060010154612edb90919063ffffffff16565b828281518110610aac577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602090810291909101015280610ac181613728565b915050610a33565b50919050565b60026000541415610b3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610608565b600260009081553390610b4d612621565b90506000610b5a83610390565b9050610b64611f53565b60055560005b600854811015610d03576000600981610b84846001613657565b81526020019081526020016000209050838281518110610bcd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020908102919091010151600282015573ffffffffffffffffffffffffffffffffffffffff851615610cf057828281518110610c32577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff80881660009081526007845260408082208654909316825291909352909120558351849083908110610cae577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff80881660009081526006845260408082208654909316825291909352909120555b5080610cfb81613728565b915050610b6a565b5060008411610d6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f43616e6e6f7420776974686472617720300000000000000000000000000000006044820152606401610608565b600b54610d7b9085612ecf565b600b55336000908152600c6020526040902054610d989085612ecf565b336000818152600c6020526040902091909155600254610dd19173ffffffffffffffffffffffffffffffffffffffff9091169086612eff565b60405184815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2505060016000555050565b60026000541415610e7e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610608565b600260009081553390610e8f612621565b90506000610e9c83610390565b9050610ea6611f53565b60055560005b600854811015611045576000600981610ec6846001613657565b81526020019081526020016000209050838281518110610f0f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020908102919091010151600282015573ffffffffffffffffffffffffffffffffffffffff85161561103257828281518110610f74577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff80881660009081526007845260408082208654909316825291909352909120558351849083908110610ff0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff80881660009081526006845260408082208654909316825291909352909120555b508061103d81613728565b915050610eac565b5060005b60085481101561119b5733600090815260076020526040812081600981611071866001613657565b8152602080820192909252604090810160009081205473ffffffffffffffffffffffffffffffffffffffff1684529183019390935291019020549050801561118857336000908152600760205260408120816009816110d1876001613657565b8152602080820192909252604090810160009081205473ffffffffffffffffffffffffffffffffffffffff1684529183019390935291018120919091556111529033908390600990611124876001613657565b815260208101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff169190612eff565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200160405180910390a25b508061119381613728565b915050611049565b505060016000555050565b60015473ffffffffffffffffffffffffffffffffffffffff163314611227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610608565b600080611232612621565b9050600061123f83610390565b9050611249611f53565b60055560005b6008548110156113e8576000600981611269846001613657565b815260200190815260200160002090508382815181106112b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020908102919091010151600282015573ffffffffffffffffffffffffffffffffffffffff8516156113d557828281518110611317577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff80881660009081526007845260408082208654909316825291909352909120558351849083908110611393577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff80881660009081526006845260408082208654909316825291909352909120555b50806113e081613728565b91505061124f565b50600160085411611455576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f43616e6e6f74206861766520302072657761726420746f6b656e7300000000006044820152606401610608565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600a6020526040902054805b600854811161159b576000600981611496846001613657565b815260208082019290925260409081016000908120858252600993849052918120825481547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178155600180840154818301556002808501549201919091559193509061151d908590613657565b81526020808201929092526040908101600090812080547fffffffffffffffffffffffff000000000000000000000000000000000000000016815560018101829055600201819055925473ffffffffffffffffffffffffffffffffffffffff168352600a90915290208190558061159381613728565b91505061147d565b506001600860008282546115af91906136e5565b90915550505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff16331461163c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610608565b6008548151146116a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f57726f6e6720616d6f756e7473000000000000000000000000000000000000006044820152606401610608565b60005b600854811015611a6c5760006009816116c5846001613657565b8152602081019190915260409081016000908120805492517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152909350909173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b15801561174357600080fd5b505afa158015611757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177b919061351f565b90506117e633308686815181106117bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020908102919091010151855473ffffffffffffffffffffffffffffffffffffffff16929190612fd8565b81546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009161189391849173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b15801561185557600080fd5b505afa158015611869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188d919061351f565b90612ecf565b905060035442106118b6576004546118ac908290612ee7565b60018401556118fd565b6003546000906118c69042612ecf565b905060006118e1856001015483612edb90919063ffffffff16565b6004549091506118f59061051f8584612ef3565b600186015550505b82546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b15801561196657600080fd5b505afa15801561197a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199e919061351f565b90506119b560045482612ee790919063ffffffff16565b84600101541115611a22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f52657761726420746f6f206869676800000000000000000000000000000000006044820152606401610608565b6040518281527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a1505050508080611a6490613728565b9150506116ab565b50426005819055600454611a809190612ef3565b60035550565b60015473ffffffffffffffffffffffffffffffffffffffff163314611b07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610608565b600080611b12612621565b90506000611b1f83610390565b9050611b29611f53565b60055560005b600854811015611cc8576000600981611b49846001613657565b81526020019081526020016000209050838281518110611b92577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020908102919091010151600282015573ffffffffffffffffffffffffffffffffffffffff851615611cb557828281518110611bf7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff80881660009081526007845260408082208654909316825291909352909120558351849083908110611c73577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff80881660009081526006845260408082208654909316825291909352909120555b5080611cc081613728565b915050611b2f565b506040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8616906370a082319060240160206040518083038186803b158015611d3157600080fd5b505afa158015611d45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d69919061351f565b905060008111611dd5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f436f6e747261637420686f6c6473206e6f20746f6b656e7300000000000000006044820152606401610608565b8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb611e1060015473ffffffffffffffffffffffffffffffffffffffff1690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff909116600482015260248101849052604401602060405180830381600087803b158015611e7d57600080fd5b505af1158015611e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eb591906134e7565b50611ebf856111a6565b5050505050565b60015473ffffffffffffffffffffffffffffffffffffffff163314611f47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610608565b611f51600061303c565b565b6000611f61426003546130b3565b905090565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600a6020526040812054600b54611fab5760009081526009602052604090206002015492915050565b612006611fee600b5461051f670de0b6b3a7640000611fe86009600088815260200190815260200160002060010154611fe860055461188d611f53565b90612edb565b60008381526009602052604090206002015490612ef3565b9392505050565b6002600054141561207a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610608565b60026000908155339061208b612621565b9050600061209883610390565b90506120a2611f53565b60055560005b6008548110156122415760006009816120c2846001613657565b8152602001908152602001600020905083828151811061210b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020908102919091010151600282015573ffffffffffffffffffffffffffffffffffffffff85161561222e57828281518110612170577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff808816600090815260078452604080822086549093168252919093529091205583518490839081106121ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff80881660009081526006845260408082208654909316825291909352909120555b508061223981613728565b9150506120a8565b50600084116122ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f43616e6e6f74207374616b6520300000000000000000000000000000000000006044820152606401610608565b6002546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b15801561231657600080fd5b505afa15801561232a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061234e919061351f565b6002549091506123769073ffffffffffffffffffffffffffffffffffffffff16333088612fd8565b6002546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b1580156123e057600080fd5b505afa1580156123f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612418919061351f565b905060006124268284612ecf565b600b549091506124369082612ef3565b600b55336000908152600c60205260409020546124539082612ef3565b336000818152600c6020526040908190209290925590517f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90612499908a815260200190565b60405180910390a2505060016000555050505050565b6060600060085467ffffffffffffffff8111156124f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561256057816020015b61254d6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b8152602001906001900390816125135790505b50905060005b600854811015610ac9576009600061257f836001613657565b815260208082019290925260409081016000208151606081018352815473ffffffffffffffffffffffffffffffffffffffff16815260018201549381019390935260020154908201528251839083908110612603577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250808061261990613728565b915050612566565b6060600060085467ffffffffffffffff811115612667577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015612690578160200160208202803683370190505b509050600b54600014156127225760005b600854811015610ac957600960006126ba836001613657565b815260200190815260200160002060020154828281518110612705577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910101528061271a81613728565b9150506126a1565b60005b600854811015610ac957600060098161273f846001613657565b8152602001908152602001600020905061278561277a600b5461051f670de0b6b3a7640000611fe88660010154611fe860055461188d611f53565b600283015490612ef3565b8383815181106127be577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602090810291909101015250806127d481613728565b915050612725565b60015473ffffffffffffffffffffffffffffffffffffffff16331461285d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610608565b600080612868612621565b9050600061287583610390565b905061287f611f53565b60055560005b600854811015612a1e57600060098161289f846001613657565b815260200190815260200160002090508382815181106128e8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020908102919091010151600282015573ffffffffffffffffffffffffffffffffffffffff851615612a0b5782828151811061294d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff808816600090815260078452604080822086549093168252919093529091205583518490839081106129c9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff80881660009081526006845260408082208654909316825291909352909120555b5080612a1681613728565b915050612885565b50600854845114612a8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f57726f6e672072657761726420616d6f756e74730000000000000000000000006044820152606401610608565b60005b600854811015612d61576000600981612aa8846001613657565b815260200190815260200160002090506003544210612b2057612b16600454878481518110612b00577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151612ee790919063ffffffff16565b6001820155612bae565b600354600090612b309042612ecf565b90506000612b4b836001015483612edb90919063ffffffff16565b9050612ba660045461051f838b8881518110612b90577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151612ef390919063ffffffff16565b600184015550505b80546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b158015612c1757600080fd5b505afa158015612c2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c4f919061351f565b9050612c6660045482612ee790919063ffffffff16565b82600101541115612cd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f52657761726420746f6f206869676800000000000000000000000000000000006044820152606401610608565b7fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d878481518110612d2d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151604051612d4491815260200190565b60405180910390a150508080612d5990613728565b915050612a8e565b50426005819055600454612d759190612ef3565b60035550505050565b336000908152600c6020526040902054612d9790610acf565b611f51610e11565b60015473ffffffffffffffffffffffffffffffffffffffff163314612e20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610608565b73ffffffffffffffffffffffffffffffffffffffff8116612ec3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610608565b612ecc8161303c565b50565b600061200682846136e5565b600061200682846136a8565b6000612006828461366f565b60006120068284613657565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052612fd39084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526130c9565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526130369085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401612f51565b50505050565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008183106130c25781612006565b5090919050565b600061312b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166131d59092919063ffffffff16565b805190915015612fd3578080602001905181019061314991906134e7565b612fd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610608565b60606131e484846000856131ec565b949350505050565b60608247101561327e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610608565b73ffffffffffffffffffffffffffffffffffffffff85163b6132fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610608565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516133259190613537565b60006040518083038185875af1925050503d8060008114613362576040519150601f19603f3d011682016040523d82523d6000602084013e613367565b606091505b5091509150613377828286613382565b979650505050505050565b60608315613391575081612006565b8251156133a15782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106089190613606565b6000602082840312156133e6578081fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114612006578182fd5b6000602080838503121561341b578182fd5b823567ffffffffffffffff80821115613432578384fd5b818501915085601f830112613445578384fd5b81358181111561345757613457613790565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171561349a5761349a613790565b604052828152858101935084860182860187018a10156134b8578788fd5b8795505b838610156134da5780358552600195909501949386019386016134bc565b5098975050505050505050565b6000602082840312156134f8578081fd5b81518015158114612006578182fd5b600060208284031215613518578081fd5b5035919050565b600060208284031215613530578081fd5b5051919050565b600082516135498184602087016136fc565b9190910192915050565b602080825282518282018190526000919060409081850190868401855b828110156135b5578151805173ffffffffffffffffffffffffffffffffffffffff16855286810151878601528501518585015260609093019290850190600101613570565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156135fa578351835292840192918401916001016135de565b50909695505050505050565b60208152600082518060208401526136258160408501602087016136fc565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000821982111561366a5761366a613761565b500190565b6000826136a3577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156136e0576136e0613761565b500290565b6000828210156136f7576136f7613761565b500390565b60005b838110156137175781810151838201526020016136ff565b838111156130365750506000910152565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561375a5761375a613761565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212203ae163772a06288e2e25d833ddc63a13351d2de4e76e169f1ebe156eb04220c264736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0xC4F59F9B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE71E7F78 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE71E7F78 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4F59F9B EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xA54F5E0D EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x386A9525 GT PUSH2 0x150 JUMPI DUP1 PUSH4 0x6A1AF3B7 GT PUSH2 0x12A JUMPI DUP1 PUSH4 0x6A1AF3B7 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x6E353A1D EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x386A9525 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x3D509C97 EQ PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C03E6CC GT PUSH2 0x181 JUMPI DUP1 PUSH4 0x1C03E6CC EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x1B0875A6 EQ PUSH2 0x1E2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BA PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x33D5 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xB SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x33D5 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH2 0x9BE JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x3507 JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0xE11 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x33D5 JUMP JUMPDEST PUSH2 0x11A6 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x3409 JUMP JUMPDEST PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x33D5 JUMP JUMPDEST PUSH2 0x1A86 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x33D5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x1EC6 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2C2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x33D5 JUMP JUMPDEST PUSH2 0x1F66 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x3507 JUMP JUMPDEST PUSH2 0x200D JUMP JUMPDEST PUSH2 0x33B PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x3553 JUMP JUMPDEST PUSH2 0x1D4 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x2621 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x3409 JUMP JUMPDEST PUSH2 0x27DC JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x2D7E JUMP JUMPDEST PUSH2 0x1D4 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x33D5 JUMP JUMPDEST PUSH2 0x2D9F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3FF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0x40C PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x42B DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND DUP1 DUP5 MSTORE PUSH1 0x7 DUP7 MSTORE DUP5 DUP5 KECCAK256 SWAP2 SWAP1 SWAP3 AND DUP1 DUP5 MSTORE SWAP1 DUP6 MSTORE DUP4 DUP4 KECCAK256 SLOAD SWAP2 DUP4 MSTORE PUSH1 0x6 DUP6 MSTORE DUP4 DUP4 KECCAK256 DUP2 DUP5 MSTORE SWAP1 SWAP5 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD DUP6 MLOAD SWAP3 SWAP4 POP PUSH2 0x52B SWAP3 PUSH2 0x525 SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x51F SWAP2 PUSH2 0x4F3 SWAP2 DUP11 SWAP1 DUP11 SWAP1 DUP2 LT PUSH2 0x4DD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2ECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x2EDB JUMP JUMPDEST SWAP1 PUSH2 0x2EE7 JUMP JUMPDEST SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x564 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP DUP1 PUSH2 0x57A DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x411 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x611 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x8 SLOAD LT PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6F206D616E7920746F6B656E730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71D SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST GT PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742070726566756E6420636F6E74726163740000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x3657 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP4 DUP2 MSTORE PUSH1 0x8 DUP1 SLOAD DUP6 MSTORE PUSH1 0x9 DUP5 MSTORE DUP9 DUP6 KECCAK256 SWAP8 MLOAD DUP9 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP8 AND SWAP7 SWAP1 SWAP7 OR DUP8 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP8 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD SWAP1 DUP3 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP2 DUP3 KECCAK256 DUP2 SWAP1 SSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x86C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x895 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x1 PUSH1 0x8 SLOAD PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x36E5 JUMP JUMPDEST DUP2 EQ ISZERO PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x934 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x958 SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x991 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 PUSH2 0x9A8 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x89B JUMP JUMPDEST POP PUSH2 0x9BA DUP2 PUSH2 0x27DC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA04 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA2D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x4 SLOAD PUSH2 0xA73 SWAP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0xA53 DUP6 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2EDB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAAC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xAC1 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA33 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xB3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE CALLER SWAP1 PUSH2 0xB4D PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB5A DUP4 PUSH2 0x390 JUMP JUMPDEST SWAP1 POP PUSH2 0xB64 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xD03 JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0xB84 DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xBCD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO PUSH2 0xCF0 JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC32 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE DUP4 MLOAD DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xCAE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST POP DUP1 PUSH2 0xCFB DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB6A JUMP JUMPDEST POP PUSH1 0x0 DUP5 GT PUSH2 0xD6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0xD7B SWAP1 DUP6 PUSH2 0x2ECF JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD98 SWAP1 DUP6 PUSH2 0x2ECF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH2 0xDD1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP7 PUSH2 0x2EFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xE7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE CALLER SWAP1 PUSH2 0xE8F PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE9C DUP4 PUSH2 0x390 JUMP JUMPDEST SWAP1 POP PUSH2 0xEA6 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1045 JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0xEC6 DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF0F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO PUSH2 0x1032 JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF74 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE DUP4 MLOAD DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xFF0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST POP DUP1 PUSH2 0x103D DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEAC JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x119B JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH1 0x9 DUP2 PUSH2 0x1071 DUP7 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 MSTORE SWAP2 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD SWAP1 KECCAK256 SLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x1188 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH1 0x9 DUP2 PUSH2 0x10D1 DUP8 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 MSTORE SWAP2 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1152 SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH1 0x9 SWAP1 PUSH2 0x1124 DUP8 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 SWAP1 PUSH2 0x2EFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP DUP1 PUSH2 0x1193 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1049 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1227 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1232 PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x123F DUP4 PUSH2 0x390 JUMP JUMPDEST SWAP1 POP PUSH2 0x1249 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x13E8 JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x1269 DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12B2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO PUSH2 0x13D5 JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1317 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE DUP4 MLOAD DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1393 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST POP DUP1 PUSH2 0x13E0 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x124F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x8 SLOAD GT PUSH2 0x1455 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206861766520302072657761726420746F6B656E730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 GT PUSH2 0x159B JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x1496 DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP6 DUP3 MSTORE PUSH1 0x9 SWAP4 DUP5 SWAP1 MSTORE SWAP2 DUP2 KECCAK256 DUP3 SLOAD DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP2 DUP4 ADD SSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 SWAP4 POP SWAP1 PUSH2 0x151D SWAP1 DUP6 SWAP1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 ADD DUP2 SWAP1 SSTORE SWAP3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE DUP1 PUSH2 0x1593 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x147D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15AF SWAP2 SWAP1 PUSH2 0x36E5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x163C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 MLOAD EQ PUSH2 0x16A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57726F6E6720616D6F756E747300000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1A6C JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x16C5 DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP3 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP4 POP SWAP1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1757 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x177B SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST SWAP1 POP PUSH2 0x17E6 CALLER ADDRESS DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x17BB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD DUP6 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 SWAP2 SWAP1 PUSH2 0x2FD8 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH2 0x1893 SWAP2 DUP5 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1869 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x188D SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST SWAP1 PUSH2 0x2ECF JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD TIMESTAMP LT PUSH2 0x18B6 JUMPI PUSH1 0x4 SLOAD PUSH2 0x18AC SWAP1 DUP3 SWAP1 PUSH2 0x2EE7 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE PUSH2 0x18FD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x18C6 SWAP1 TIMESTAMP PUSH2 0x2ECF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18E1 DUP6 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x2EDB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH2 0x18F5 SWAP1 PUSH2 0x51F DUP6 DUP5 PUSH2 0x2EF3 JUMP JUMPDEST PUSH1 0x1 DUP7 ADD SSTORE POP POP JUMPDEST DUP3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1966 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x197A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x199E SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST SWAP1 POP PUSH2 0x19B5 PUSH1 0x4 SLOAD DUP3 PUSH2 0x2EE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x1A22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420746F6F20686967680000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP DUP1 DUP1 PUSH2 0x1A64 SWAP1 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16AB JUMP JUMPDEST POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH2 0x1A80 SWAP2 SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST PUSH1 0x3 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1B07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B12 PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B1F DUP4 PUSH2 0x390 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B29 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1CC8 JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x1B49 DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B92 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO PUSH2 0x1CB5 JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1BF7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE DUP4 MLOAD DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1C73 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST POP DUP1 PUSH2 0x1CC0 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B2F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D69 SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1DD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420686F6C6473206E6F20746F6B656E730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x1E10 PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EB5 SWAP2 SWAP1 PUSH2 0x34E7 JUMP JUMPDEST POP PUSH2 0x1EBF DUP6 PUSH2 0x11A6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1F47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH2 0x1F51 PUSH1 0x0 PUSH2 0x303C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F61 TIMESTAMP PUSH1 0x3 SLOAD PUSH2 0x30B3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xB SLOAD PUSH2 0x1FAB JUMPI PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2006 PUSH2 0x1FEE PUSH1 0xB SLOAD PUSH2 0x51F PUSH8 0xDE0B6B3A7640000 PUSH2 0x1FE8 PUSH1 0x9 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1FE8 PUSH1 0x5 SLOAD PUSH2 0x188D PUSH2 0x1F53 JUMP JUMPDEST SWAP1 PUSH2 0x2EDB JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x207A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE CALLER SWAP1 PUSH2 0x208B PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2098 DUP4 PUSH2 0x390 JUMP JUMPDEST SWAP1 POP PUSH2 0x20A2 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2241 JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x20C2 DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x210B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO PUSH2 0x222E JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2170 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE DUP4 MLOAD DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x21EC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST POP DUP1 PUSH2 0x2239 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20A8 JUMP JUMPDEST POP PUSH1 0x0 DUP5 GT PUSH2 0x22AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x232A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x234E SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0x2376 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP9 PUSH2 0x2FD8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2418 SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2426 DUP3 DUP5 PUSH2 0x2ECF JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0x2436 SWAP1 DUP3 PUSH2 0x2EF3 JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2453 SWAP1 DUP3 PUSH2 0x2EF3 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH2 0x2499 SWAP1 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24F5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2560 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x254D PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2513 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x9 PUSH1 0x0 PUSH2 0x257F DUP4 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 ADD SLOAD SWAP1 DUP3 ADD MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2603 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2619 SWAP1 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2566 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2667 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2690 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0xB SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2722 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x9 PUSH1 0x0 PUSH2 0x26BA DUP4 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2705 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x271A DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x273F DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x2785 PUSH2 0x277A PUSH1 0xB SLOAD PUSH2 0x51F PUSH8 0xDE0B6B3A7640000 PUSH2 0x1FE8 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1FE8 PUSH1 0x5 SLOAD PUSH2 0x188D PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x27BE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP DUP1 PUSH2 0x27D4 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2725 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x285D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2868 PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2875 DUP4 PUSH2 0x390 JUMP JUMPDEST SWAP1 POP PUSH2 0x287F PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2A1E JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x289F DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x28E8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO PUSH2 0x2A0B JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x294D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE DUP4 MLOAD DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x29C9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST POP DUP1 PUSH2 0x2A16 DUP2 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2885 JUMP JUMPDEST POP PUSH1 0x8 SLOAD DUP5 MLOAD EQ PUSH2 0x2A8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57726F6E672072657761726420616D6F756E7473000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2D61 JUMPI PUSH1 0x0 PUSH1 0x9 DUP2 PUSH2 0x2AA8 DUP5 PUSH1 0x1 PUSH2 0x3657 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x3 SLOAD TIMESTAMP LT PUSH2 0x2B20 JUMPI PUSH2 0x2B16 PUSH1 0x4 SLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2B00 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2EE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH2 0x2BAE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2B30 SWAP1 TIMESTAMP PUSH2 0x2ECF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B4B DUP4 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x2EDB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2BA6 PUSH1 0x4 SLOAD PUSH2 0x51F DUP4 DUP12 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x2B90 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2EF3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE POP POP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C4F SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST SWAP1 POP PUSH2 0x2C66 PUSH1 0x4 SLOAD DUP3 PUSH2 0x2EE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x2CD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657761726420746F6F20686967680000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2D2D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x2D44 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP DUP1 DUP1 PUSH2 0x2D59 SWAP1 PUSH2 0x3728 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A8E JUMP JUMPDEST POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH2 0x2D75 SWAP2 SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST PUSH1 0x3 SSTORE POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2D97 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x1F51 PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2E20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2EC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x608 JUMP JUMPDEST PUSH2 0x2ECC DUP2 PUSH2 0x303C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2006 DUP3 DUP5 PUSH2 0x36E5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2006 DUP3 DUP5 PUSH2 0x36A8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2006 DUP3 DUP5 PUSH2 0x366F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2006 DUP3 DUP5 PUSH2 0x3657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2FD3 SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x30C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x3036 SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD PUSH2 0x2F51 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x30C2 JUMPI DUP2 PUSH2 0x2006 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x312B DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2FD3 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3149 SWAP2 SWAP1 PUSH2 0x34E7 JUMP JUMPDEST PUSH2 0x2FD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x31E4 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x31EC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x327E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x608 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x32FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x608 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3325 SWAP2 SWAP1 PUSH2 0x3537 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3362 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3367 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3377 DUP3 DUP3 DUP7 PUSH2 0x3382 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3391 JUMPI POP DUP2 PUSH2 0x2006 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x33A1 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x3606 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33E6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2006 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x341B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3432 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3445 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3457 JUMPI PUSH2 0x3457 PUSH2 0x3790 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x349A JUMPI PUSH2 0x349A PUSH2 0x3790 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x34B8 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x34DA JUMPI DUP1 CALLDATALOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x34BC JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34F8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2006 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3518 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3530 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3549 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x36FC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x35B5 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 ADD MLOAD DUP6 DUP6 ADD MSTORE PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3570 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x35FA JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x35DE JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3625 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x36FC JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x366A JUMPI PUSH2 0x366A PUSH2 0x3761 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x36A3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x36E0 JUMPI PUSH2 0x36E0 PUSH2 0x3761 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x36F7 JUMPI PUSH2 0x36F7 PUSH2 0x3761 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3717 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x36FF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3036 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x375A JUMPI PUSH2 0x375A PUSH2 0x3761 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xE1 PUSH4 0x772A0628 DUP15 0x2E 0x25 0xD8 CALLER 0xDD 0xC6 GASPRICE SGT CALLDATALOAD SAR 0x2D 0xE4 0xE7 PUSH15 0x169F1EBE156EB04220C264736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "301:11633:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3955:610;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1773:91;1845:12;;1773:91;;;11308:25:9;;;11296:2;11281:18;1773:91:0;11263:76:9;2121:103:0;2199:18;;2121:103;;8954:870;;;;;;:::i;:::-;;:::i;:::-;;4571:341;;;:::i;5525:351::-;;;;;;:::i;:::-;;:::i;517:30::-;;;;;;5882:498;;;:::i;9830:849::-;;;;;;:::i;:::-;;:::i;6526:1387::-;;;;;;:::i;:::-;;:::i;10685:303::-;;;;;;:::i;:::-;;:::i;1870:110::-;;;;;;:::i;:::-;1955:18;;1929:7;1955:18;;;:9;:18;;;;;;;1870:110;1661:101:2;;;:::i;452:26:0:-;;;;;;;;;;;;2734:42:9;2722:55;;;2704:74;;2692:2;2677:18;452:26:0;2659:125:9;1986:129:0;;;:::i;1029:85:2:-;1101:6;;;;1029:85;;3126:527:0;;;;;;:::i;:::-;;:::i;4947:572::-;;;;;;:::i;:::-;;:::i;3659:290::-;;;:::i;:::-;;;;;;;:::i;553:29::-;;;;;;2268:808;;;:::i;7919:1029::-;;;;;;:::i;:::-;;:::i;6386:94::-;;;:::i;484:27::-;;;;;;1911:198:2;;;;;;:::i;:::-;;:::i;3955:610:0:-;4009:16;4037:25;4079:18;;4065:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4065:33:0;;4037:61;;4108:29;4140:16;:14;:16::i;:::-;4108:48;;4171:6;4166:367;4187:18;;4183:1;:22;4166:367;;;4226:13;4242;4226;4256:5;:1;4260;4256:5;:::i;:::-;4242:20;;;;;;;;;;;;;;-1:-1:-1;4242:20:0;;;:26;;4484:17;;;;;;:8;:17;;;;;4242:26;;;;4484:24;;;;;;;;;;4377:32;;;:23;:32;;;;;:39;;;;;;;;;;4336:15;;4242:26;;-1:-1:-1;4296:226:0;;:166;;4457:4;;4296:139;;4336:81;;:12;;4349:1;;4336:15;;;;;;;;;;;;;;;;;;;;:40;;:81;;;;:::i;:::-;4296:18;;;;;;;:9;:18;;;;;;;:39;:139::i;:::-;:160;;:166::i;:::-;:187;;:226::i;:::-;4282:8;4291:1;4282:11;;;;;;;;;;;;;;;;;;;;;;;;;:240;-1:-1:-1;4207:3:0;;;;:::i;:::-;;;;4166:367;;;-1:-1:-1;4550:8:0;;3955:610;-1:-1:-1;;;3955:610:0:o;8954:870::-;1101:6:2;;1241:23;1101:6;719:10:1;1241:23:2;1233:68;;;;;;;9177:2:9;1233:68:2;;;9159:21:9;;;9196:18;;;9189:30;9255:34;9235:18;;;9228:62;9307:18;;1233:68:2;;;;;;;;;9051:1:0::1;9030:18;;:22;9022:50;;;::::0;::::1;::::0;;6340:2:9;9022:50:0::1;::::0;::::1;6322:21:9::0;6379:2;6359:18;;;6352:30;6418:17;6398:18;;;6391:45;6453:18;;9022:50:0::1;6312:165:9::0;9022:50:0::1;9090:38;::::0;;;;9122:4:::1;9090:38;::::0;::::1;2704:74:9::0;9131:1:0::1;::::0;9090:23:::1;::::0;::::1;::::0;::::1;::::0;2677:18:9;;9090:38:0::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;9082:76;;;::::0;::::1;::::0;;7790:2:9;9082:76:0::1;::::0;::::1;7772:21:9::0;7829:2;7809:18;;;7802:30;7868:23;7848:18;;;7841:51;7909:18;;9082:76:0::1;7762:171:9::0;9082:76:0::1;9232:1;9210:18;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;9322:113:0::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;9322:113:0::1;::::0;;::::1;::::0;;;;;;;;;9300:18:::1;::::0;;9286:33;;:13:::1;:33:::0;;;;;:149;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;9286:149:0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;9475:18;;9446:26;;;:19:::1;:26:::0;;;;;;:47;;;9537:33:::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;9537:33:0::1;;9504:66;;9586:6;9581:193;9602:18;;9598:1;:22;9581:193;;;9671:1;9650:18;;:22;;;;:::i;:::-;9645:1;:27;9641:123;;;9711:38;::::0;;;;9743:4:::1;9711:38;::::0;::::1;2704:74:9::0;9711:23:0::1;::::0;::::1;::::0;::::1;::::0;2677:18:9;;9711:38:0::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9692:13;9706:1;9692:16;;;;;;;;;;;;;;;;;;;;;:57;;;::::0;::::1;9641:123;9622:3:::0;::::1;::::0;::::1;:::i;:::-;;;;9581:193;;;;9784:33;9803:13;9784:18;:33::i;:::-;1311:1:2;8954:870:0::0;:::o;4571:341::-;4626:16;4654:31;4702:18;;4688:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4688:33:0;;4654:67;;4736:6;4731:143;4752:18;;4748:1;:22;4731:143;;;4847:15;;4811:52;;:13;:20;4825:5;:1;4829;4825:5;:::i;:::-;4811:20;;;;;;;;;;;:31;;;:35;;:52;;;;:::i;:::-;4791:14;4806:1;4791:17;;;;;;;;;;;;;;;;;;;;;;;;;:72;4772:3;;;;:::i;:::-;;;;4731:143;;;-1:-1:-1;4891:14:0;4571:341;-1:-1:-1;4571:341:0:o;5525:351::-;1744:1:3;2325:7;;:19;;2317:63;;;;;;;10651:2:9;2317:63:3;;;10633:21:9;10690:2;10670:18;;;10663:30;10729:33;10709:18;;;10702:61;10780:18;;2317:63:3;10623:181:9;2317:63:3;1744:1;2455:7;:18;;;5592:10:0::1;::::0;11107:16:::1;:14;:16::i;:::-;11072:51;;11133:32;11168:15;11175:7;11168:6;:15::i;:::-;11133:50;;11210:26;:24;:26::i;:::-;11193:14;:43:::0;11251:6:::1;11246:428;11267:18;;11263:1;:22;11246:428;;;11306:31;11340:13;11306:31:::0;11354:5:::1;:1:::0;11358::::1;11354:5;:::i;:::-;11340:20;;;;;;;;;;;11306:54;;11409:15;11425:1;11409:18;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;11374:32:::1;::::0;::::1;:53:::0;11445:21:::1;::::0;::::1;::::0;11441:223:::1;;11525:15;11541:1;11525:18;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;;11486:17:::1;::::0;;::::1;;::::0;;;:8:::1;:17:::0;;;;;;11504;;;;::::1;11486:36:::0;;;;;;;;;:57;11615:18;;:15;;11631:1;;11615:18;::::1;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;;11561:32:::1;::::0;;::::1;;::::0;;;:23:::1;:32:::0;;;;;;11594:17;;;;::::1;11561:51:::0;;;;;;;;;:72;11441:223:::1;-1:-1:-1::0;11287:3:0;::::1;::::0;::::1;:::i;:::-;;;;11246:428;;;;5631:1:::2;5622:6;:10;5614:40;;;::::0;::::2;::::0;;8831:2:9;5614:40:0::2;::::0;::::2;8813:21:9::0;8870:2;8850:18;;;8843:30;8909:19;8889:18;;;8882:47;8946:18;;5614:40:0::2;8803:167:9::0;5614:40:0::2;5679:12;::::0;:24:::2;::::0;5696:6;5679:16:::2;:24::i;:::-;5664:12;:39:::0;5747:10:::2;5737:21;::::0;;;:9:::2;:21;::::0;;;;;:33:::2;::::0;5763:6;5737:25:::2;:33::i;:::-;5723:10;5713:21;::::0;;;:9:::2;:21;::::0;;;;:57;;;;5780:12:::2;::::0;:45:::2;::::0;5713:21:::2;5780:12:::0;;::::2;::::0;5818:6;5780:25:::2;:45::i;:::-;5840:29;::::0;11308:25:9;;;5850:10:0::2;::::0;5840:29:::2;::::0;11296:2:9;11281:18;5840:29:0::2;;;;;;;-1:-1:-1::0;;1701:1:3;2628:7;:22;-1:-1:-1;;5525:351:0:o;5882:498::-;1744:1:3;2325:7;;:19;;2317:63;;;;;;;10651:2:9;2317:63:3;;;10633:21:9;10690:2;10670:18;;;10663:30;10729:33;10709:18;;;10702:61;10780:18;;2317:63:3;10623:181:9;2317:63:3;1744:1;2455:7;:18;;;5936:10:0::1;::::0;11107:16:::1;:14;:16::i;:::-;11072:51;;11133:32;11168:15;11175:7;11168:6;:15::i;:::-;11133:50;;11210:26;:24;:26::i;:::-;11193:14;:43:::0;11251:6:::1;11246:428;11267:18;;11263:1;:22;11246:428;;;11306:31;11340:13;11306:31:::0;11354:5:::1;:1:::0;11358::::1;11354:5;:::i;:::-;11340:20;;;;;;;;;;;11306:54;;11409:15;11425:1;11409:18;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;11374:32:::1;::::0;::::1;:53:::0;11445:21:::1;::::0;::::1;::::0;11441:223:::1;;11525:15;11541:1;11525:18;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;;11486:17:::1;::::0;;::::1;;::::0;;;:8:::1;:17:::0;;;;;;11504;;;;::::1;11486:36:::0;;;;;;;;;:57;11615:18;;:15;;11631:1;;11615:18;::::1;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;;11561:32:::1;::::0;;::::1;;::::0;;;:23:::1;:32:::0;;;;;;11594:17;;;;::::1;11561:51:::0;;;;;;;;;:72;11441:223:::1;-1:-1:-1::0;11287:3:0;::::1;::::0;::::1;:::i;:::-;;;;11246:428;;;;5963:6:::2;5958:416;5979:18;;5975:1;:22;5958:416;;;6051:10;6018:21;6042:20:::0;;;:8:::2;:20;::::0;;;;6018:21;6063:13:::2;6018:21:::0;6077:5:::2;:1:::0;6081::::2;6077:5;:::i;:::-;6063:20:::0;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;6063:20:0;;;:26;::::2;;6042:48:::0;;;;::::2;::::0;;;;;;;;;;-1:-1:-1;6108:17:0;;6104:260:::2;;6154:10;6196:1;6145:20:::0;;;:8:::2;:20;::::0;;;;6196:1;6166:13:::2;6196:1:::0;6180:5:::2;:1:::0;6184::::2;6180:5;:::i;:::-;6166:20:::0;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;6166:20:0;;;:26;::::2;;6145:48:::0;;;;::::2;::::0;;;;;;;;:52;;;;6215:74:::2;::::0;6263:10:::2;::::0;6275:13;;6222::::2;::::0;6236:5:::2;:1:::0;6166:26;6236:5:::2;:::i;:::-;6222:20:::0;;::::2;::::0;::::2;::::0;;;;;;-1:-1:-1;6222:20:0;:26;::::2;;::::0;6215:74;:47:::2;:74::i;:::-;6312:37;::::0;11308:25:9;;;6323:10:0::2;::::0;6312:37:::2;::::0;11296:2:9;11281:18;6312:37:0::2;;;;;;;6104:260;-1:-1:-1::0;5999:3:0;::::2;::::0;::::2;:::i;:::-;;;;5958:416;;;-1:-1:-1::0;;1701:1:3;2628:7;:22;-1:-1:-1;;5882:498:0:o;9830:849::-;1101:6:2;;1241:23;1101:6;719:10:1;1241:23:2;1233:68;;;;;;;9177:2:9;1233:68:2;;;9159:21:9;;;9196:18;;;9189:30;9255:34;9235:18;;;9228:62;9307:18;;1233:68:2;9149:182:9;1233:68:2;9910:1:0::1;11072:32:::0;11107:16:::1;:14;:16::i;:::-;11072:51;;11133:32;11168:15;11175:7;11168:6;:15::i;:::-;11133:50;;11210:26;:24;:26::i;:::-;11193:14;:43:::0;11251:6:::1;11246:428;11267:18;;11263:1;:22;11246:428;;;11306:31;11340:13;11306:31:::0;11354:5:::1;:1:::0;11358::::1;11354:5;:::i;:::-;11340:20;;;;;;;;;;;11306:54;;11409:15;11425:1;11409:18;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;11374:32:::1;::::0;::::1;:53:::0;11445:21:::1;::::0;::::1;::::0;11441:223:::1;;11525:15;11541:1;11525:18;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;;11486:17:::1;::::0;;::::1;;::::0;;;:8:::1;:17:::0;;;;;;11504;;;;::::1;11486:36:::0;;;;;;;;;:57;11615:18;;:15;;11631:1;;11615:18;::::1;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;;11561:32:::1;::::0;;::::1;;::::0;;;:23:::1;:32:::0;;;;;;11594:17;;;;::::1;11561:51:::0;;;;;;;;;:72;11441:223:::1;-1:-1:-1::0;11287:3:0;::::1;::::0;::::1;:::i;:::-;;;;11246:428;;;;9953:1:::2;9932:18;;:22;9924:62;;;::::0;::::2;::::0;;7027:2:9;9924:62:0::2;::::0;::::2;7009:21:9::0;7066:2;7046:18;;;7039:30;7105:29;7085:18;;;7078:57;7152:18;;9924:62:0::2;6999:177:9::0;9924:62:0::2;10061:26;::::0;::::2;10040:18;10061:26:::0;;;:19:::2;:26;::::0;;;;;;10191:448:::2;10225:18;;10220:1;:23;10191:448;;10308:31;10342:13;10308:31:::0;10356:5:::2;:1:::0;10360::::2;10356:5;:::i;:::-;10342:20:::0;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;10342:20:0;;;10439:16;;;:13:::2;:16:::0;;;;;;;:30;;;;;::::2;;::::0;;::::2;;::::0;;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;10342:20;;-1:-1:-1;;10536:5:0::2;::::0;10453:1;;10536:5:::2;:::i;:::-;10522:20:::0;;::::2;::::0;;::::2;::::0;;;;;;;;-1:-1:-1;10522:20:0;;;10515:27;;;::::2;::::0;;;;::::2;::::0;;;::::2;;::::0;;;10606:17;;10515:27:::2;10606:17;10586:38:::0;;:19:::2;:38:::0;;;;;:42;;;10627:1;10245:3:::2;10627:1:::0;10245:3:::2;:::i;:::-;;;;10191:448;;;;10671:1;10649:18;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;9830:849:0:o;6526:1387::-;1101:6:2;;1241:23;1101:6;719:10:1;1241:23:2;1233:68;;;;;;;9177:2:9;1233:68:2;;;9159:21:9;;;9196:18;;;9189:30;9255:34;9235:18;;;9228:62;9307:18;;1233:68:2;9149:182:9;1233:68:2;6634:18:0::1;;6617:6;:13;:35;6609:61;;;::::0;::::1;::::0;;8489:2:9;6609:61:0::1;::::0;::::1;8471:21:9::0;8528:2;8508:18;;;8501:30;8567:15;8547:18;;;8540:43;8600:18;;6609:61:0::1;8461:163:9::0;6609:61:0::1;6762:6;6757:1002;6778:18;;6774:1;:22;6757:1002;;;6817:31;6851:13;6817:31:::0;6865:5:::1;:1:::0;6869::::1;6865:5;:::i;:::-;6851:20:::0;;::::1;::::0;::::1;::::0;;;;;;;;-1:-1:-1;6851:20:0;;;6914:17;;6907:50;;;;;6951:4:::1;6907:50;::::0;::::1;2704:74:9::0;6851:20:0;;-1:-1:-1;;;6914:17:0::1;;::::0;6907:35:::1;::::0;2677:18:9;;6907:50:0::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6885:72;;6971:80;7014:10;7034:4;7041:6;7048:1;7041:9;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;6978:17;;::::1;;::::0;6971:80;;:42:::1;:80::i;:::-;7086:17:::0;;7079:50:::1;::::0;;;;7123:4:::1;7079:50;::::0;::::1;2704:74:9::0;7065:11:0::1;::::0;7079:67:::1;::::0;7134:11;;7086:17:::1;;::::0;7079:35:::1;::::0;2677:18:9;;7079:50:0::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54:::0;::::1;:67::i;:::-;7065:81;;7183:12;;7164:15;:31;7160:372;;7251:15;::::0;7240:27:::1;::::0;:6;;:10:::1;:27::i;:::-;7215:22;::::0;::::1;:52:::0;7160:372:::1;;;7326:12;::::0;7306:17:::1;::::0;7326:33:::1;::::0;7343:15:::1;7326:16;:33::i;:::-;7306:53;;7377:16;7396:37;7410:11;:22;;;7396:9;:13;;:37;;;;:::i;:::-;7501:15;::::0;7377:56;;-1:-1:-1;7476:41:0::1;::::0;:20:::1;:6:::0;7377:56;7476:10:::1;:20::i;:41::-;7451:22;::::0;::::1;:66:::0;-1:-1:-1;;7160:372:0::1;7571:17:::0;;7564:50:::1;::::0;;;;7608:4:::1;7564:50;::::0;::::1;2704:74:9::0;7546:15:0::1;::::0;7571:17:::1;;::::0;7564:35:::1;::::0;2677:18:9;;7564:50:0::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7546:68;;7662:28;7674:15;;7662:7;:11;;:28;;;;:::i;:::-;7636:11;:22;;;:54;;7628:82;;;::::0;::::1;::::0;;9896:2:9;7628:82:0::1;::::0;::::1;9878:21:9::0;9935:2;9915:18;;;9908:30;9974:17;9954:18;;;9947:45;10009:18;;7628:82:0::1;9868:165:9::0;7628:82:0::1;7729:19;::::0;11308:25:9;;;7729:19:0::1;::::0;11296:2:9;11281:18;7729:19:0::1;;;;;;;6757:1002;;;;6798:3;;;;;:::i;:::-;;;;6757:1002;;;-1:-1:-1::0;7786:15:0::1;7769:14;:32:::0;;;7846:15:::1;::::0;7826:36:::1;::::0;7786:15;7826:19:::1;:36::i;:::-;7811:12;:51:::0;-1:-1:-1;6526:1387:0:o;10685:303::-;1101:6:2;;1241:23;1101:6;719:10:1;1241:23:2;1233:68;;;;;;;9177:2:9;1233:68:2;;;9159:21:9;;;9196:18;;;9189:30;9255:34;9235:18;;;9228:62;9307:18;;1233:68:2;9149:182:9;1233:68:2;10769:1:0::1;11072:32:::0;11107:16:::1;:14;:16::i;:::-;11072:51;;11133:32;11168:15;11175:7;11168:6;:15::i;:::-;11133:50;;11210:26;:24;:26::i;:::-;11193:14;:43:::0;11251:6:::1;11246:428;11267:18;;11263:1;:22;11246:428;;;11306:31;11340:13;11306:31:::0;11354:5:::1;:1:::0;11358::::1;11354:5;:::i;:::-;11340:20;;;;;;;;;;;11306:54;;11409:15;11425:1;11409:18;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;11374:32:::1;::::0;::::1;:53:::0;11445:21:::1;::::0;::::1;::::0;11441:223:::1;;11525:15;11541:1;11525:18;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;;11486:17:::1;::::0;;::::1;;::::0;;;:8:::1;:17:::0;;;;;;11504;;;;::::1;11486:36:::0;;;;;;;;;:57;11615:18;;:15;;11631:1;;11615:18;::::1;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;;11561:32:::1;::::0;;::::1;;::::0;;;:23:::1;:32:::0;;;;;;11594:17;;;;::::1;11561:51:::0;;;;;;;;;:72;11441:223:::1;-1:-1:-1::0;11287:3:0;::::1;::::0;::::1;:::i;:::-;;;;11246:428;;;-1:-1:-1::0;10801:38:0::2;::::0;;;;10833:4:::2;10801:38;::::0;::::2;2704:74:9::0;10783:15:0::2;::::0;10801:23:::2;::::0;::::2;::::0;::::2;::::0;2677:18:9;;10801:38:0::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10783:56;;10867:1;10857:7;:11;10849:48;;;::::0;::::2;::::0;;11011:2:9;10849:48:0::2;::::0;::::2;10993:21:9::0;11050:2;11030:18;;;11023:30;11089:26;11069:18;;;11062:54;11133:18;;10849:48:0::2;10983:174:9::0;10849:48:0::2;10914:5;10907:22;;;10930:7;1101:6:2::0;;;;;1029:85;10930:7:0::2;10907:40;::::0;;::::2;::::0;;;;;;3396:42:9;3384:55;;;10907:40:0::2;::::0;::::2;3366:74:9::0;3456:18;;;3449:34;;;3339:18;;10907:40:0::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10957:24;10975:5;10957:17;:24::i;:::-;11683:1;1311::2::1;;;10685:303:0::0;:::o;1661:101:2:-;1101:6;;1241:23;1101:6;719:10:1;1241:23:2;1233:68;;;;;;;9177:2:9;1233:68:2;;;9159:21:9;;;9196:18;;;9189:30;9255:34;9235:18;;;9228:62;9307:18;;1233:68:2;9149:182:9;1233:68:2;1725:30:::1;1752:1;1725:18;:30::i;:::-;1661:101::o:0;1986:129:0:-;2043:7;2069:39;2078:15;2095:12;;2069:8;:39::i;:::-;2062:46;;1986:129;:::o;3126:527::-;3221:26;;;3186:7;3221:26;;;:19;:26;;;;;;3261:12;;3257:390;;3301:20;;;;:13;:20;;;;;:41;;;;3126:527;-1:-1:-1;;3126:527:0:o;3257:390::-;3380:256;3443:179;3609:12;;3443:144;3582:4;3443:117;3528:13;:20;3542:5;3528:20;;;;;;;;;;;:31;;;3443:63;3491:14;;3443:26;:24;:26::i;:63::-;:84;;:117::i;:179::-;3380:20;;;;:13;:20;;;;;:41;;;;:45;:256::i;:::-;3373:263;3126:527;-1:-1:-1;;;3126:527:0:o;4947:572::-;1744:1:3;2325:7;;:19;;2317:63;;;;;;;10651:2:9;2317:63:3;;;10633:21:9;10690:2;10670:18;;;10663:30;10729:33;10709:18;;;10702:61;10780:18;;2317:63:3;10623:181:9;2317:63:3;1744:1;2455:7;:18;;;5013:10:0::1;::::0;11107:16:::1;:14;:16::i;:::-;11072:51;;11133:32;11168:15;11175:7;11168:6;:15::i;:::-;11133:50;;11210:26;:24;:26::i;:::-;11193:14;:43:::0;11251:6:::1;11246:428;11267:18;;11263:1;:22;11246:428;;;11306:31;11340:13;11306:31:::0;11354:5:::1;:1:::0;11358::::1;11354:5;:::i;:::-;11340:20;;;;;;;;;;;11306:54;;11409:15;11425:1;11409:18;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;11374:32:::1;::::0;::::1;:53:::0;11445:21:::1;::::0;::::1;::::0;11441:223:::1;;11525:15;11541:1;11525:18;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;;11486:17:::1;::::0;;::::1;;::::0;;;:8:::1;:17:::0;;;;;;11504;;;;::::1;11486:36:::0;;;;;;;;;:57;11615:18;;:15;;11631:1;;11615:18;::::1;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;;11561:32:::1;::::0;;::::1;;::::0;;;:23:::1;:32:::0;;;;;;11594:17;;;;::::1;11561:51:::0;;;;;;;;;:72;11441:223:::1;-1:-1:-1::0;11287:3:0;::::1;::::0;::::1;:::i;:::-;;;;11246:428;;;;5052:1:::2;5043:6;:10;5035:37;;;::::0;::::2;::::0;;6684:2:9;5035:37:0::2;::::0;::::2;6666:21:9::0;6723:2;6703:18;;;6696:30;6762:16;6742:18;;;6735:44;6796:18;;5035:37:0::2;6656:164:9::0;5035:37:0::2;5107:12;::::0;:37:::2;::::0;;;;5138:4:::2;5107:37;::::0;::::2;2704:74:9::0;5082:22:0::2;::::0;5107:12:::2;;::::0;:22:::2;::::0;2677:18:9;;5107:37:0::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5154:12;::::0;5082:62;;-1:-1:-1;5154:64:0::2;::::0;:12:::2;;5184:10;5204:4;5211:6:::0;5154:29:::2;:64::i;:::-;5249:12;::::0;:37:::2;::::0;;;;5280:4:::2;5249:37;::::0;::::2;2704:74:9::0;5228:18:0::2;::::0;5249:12:::2;;::::0;:22:::2;::::0;2677:18:9;;5249:37:0::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5228:58:::0;-1:-1:-1;5296:18:0::2;5317:30;5228:58:::0;5332:14;5317::::2;:30::i;:::-;5372:12;::::0;5296:51;;-1:-1:-1;5372:28:0::2;::::0;5296:51;5372:16:::2;:28::i;:::-;5357:12;:43:::0;5444:10:::2;5434:21;::::0;;;:9:::2;:21;::::0;;;;;:37:::2;::::0;5460:10;5434:25:::2;:37::i;:::-;5420:10;5410:21;::::0;;;:9:::2;:21;::::0;;;;;;:61;;;;5486:26;;::::2;::::0;::::2;::::0;5505:6;11308:25:9;;11296:2;11281:18;;11263:76;5486:26:0::2;;;;;;;;-1:-1:-1::0;;1701:1:3;2628:7;:22;-1:-1:-1;;;;;4947:572:0:o;3659:290::-;3707:20;3739:27;3787:18;;3769:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3769:37:0;;;;;;;;;;;;;;;;;3739:67;;3821:6;3816:103;3837:18;;3833:1;:22;3816:103;;;3888:13;:20;3902:5;:1;3906;3902:5;:::i;:::-;3888:20;;;;;;;;;;;;;;-1:-1:-1;3888:20:0;3876:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;;:6;;3883:1;;3876:9;;;;;;;;;;;;;;;;;;;:32;;;;3857:3;;;;;:::i;:::-;;;;3816:103;;2268:808;2315:16;2343:23;2383:18;;2369:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2369:33:0;;2343:59;;2416:12;;2432:1;2416:17;2412:634;;;2454:6;2449:132;2470:18;;2466:1;:22;2449:132;;;2525:13;:20;2539:5;:1;2543;2539:5;:::i;:::-;2525:20;;;;;;;;;;;:41;;;2513:6;2520:1;2513:9;;;;;;;;;;;;;;;;;;;;;;;;;:53;2490:3;;;;:::i;:::-;;;;2449:132;;2412:634;2616:6;2611:425;2632:18;;2628:1;:22;2611:425;;;2675:31;2709:13;2675:31;2723:5;:1;2727;2723:5;:::i;:::-;2709:20;;;;;;;;;;;2675:54;;2759:262;2817:186;2990:12;;2817:147;2959:4;2817:116;2910:11;:22;;;2817:67;2869:14;;2817:26;:24;:26::i;:186::-;2759:32;;;;;:36;:262::i;:::-;2747:6;2754:1;2747:9;;;;;;;;;;;;;;;;;;;;;;;;;:274;-1:-1:-1;2652:3:0;;;;:::i;:::-;;;;2611:425;;7919:1029;1101:6:2;;1241:23;1101:6;719:10:1;1241:23:2;1233:68;;;;;;;9177:2:9;1233:68:2;;;9159:21:9;;;9196:18;;;9189:30;9255:34;9235:18;;;9228:62;9307:18;;1233:68:2;9149:182:9;1233:68:2;8010:1:0::1;11072:32:::0;11107:16:::1;:14;:16::i;:::-;11072:51;;11133:32;11168:15;11175:7;11168:6;:15::i;:::-;11133:50;;11210:26;:24;:26::i;:::-;11193:14;:43:::0;11251:6:::1;11246:428;11267:18;;11263:1;:22;11246:428;;;11306:31;11340:13;11306:31:::0;11354:5:::1;:1:::0;11358::::1;11354:5;:::i;:::-;11340:20;;;;;;;;;;;11306:54;;11409:15;11425:1;11409:18;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;11374:32:::1;::::0;::::1;:53:::0;11445:21:::1;::::0;::::1;::::0;11441:223:::1;;11525:15;11541:1;11525:18;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;;11486:17:::1;::::0;;::::1;;::::0;;;:8:::1;:17:::0;;;;;;11504;;;;::::1;11486:36:::0;;;;;;;;;:57;11615:18;;:15;;11631:1;;11615:18;::::1;;;;;;;;;;;;;;::::0;;::::1;::::0;;;;;;;11561:32:::1;::::0;;::::1;;::::0;;;:23:::1;:32:::0;;;;;;11594:17;;;;::::1;11561:51:::0;;;;;;;;;:72;11441:223:::1;-1:-1:-1::0;11287:3:0;::::1;::::0;::::1;:::i;:::-;;;;11246:428;;;;8049:18:::2;;8032:6;:13;:35;8024:68;;;::::0;::::2;::::0;;8140:2:9;8024:68:0::2;::::0;::::2;8122:21:9::0;8179:2;8159:18;;;8152:30;8218:22;8198:18;;;8191:50;8258:18;;8024:68:0::2;8112:170:9::0;8024:68:0::2;8107:6;8102:736;8123:18;;8119:1;:22;8102:736;;;8162:31;8196:13;8162:31:::0;8210:5:::2;:1:::0;8214::::2;8210:5;:::i;:::-;8196:20;;;;;;;;;;;8162:54;;8253:12;;8234:15;:31;8230:378;;8310:30;8324:15;;8310:6;8317:1;8310:9;;;;;;;;;;;;;;;;;;;;;;:13;;:30;;;;:::i;:::-;8285:22;::::0;::::2;:55:::0;8230:378:::2;;;8399:12;::::0;8379:17:::2;::::0;8399:33:::2;::::0;8416:15:::2;8399:16;:33::i;:::-;8379:53;;8450:16;8469:37;8483:11;:22;;;8469:9;:13;;:37;;;;:::i;:::-;8450:56;;8549:44;8577:15;;8549:23;8563:8;8549:6;8556:1;8549:9;;;;;;;;;;;;;;;;;;;;;;:13;;:23;;;;:::i;:44::-;8524:22;::::0;::::2;:69:::0;-1:-1:-1;;8230:378:0::2;8647:17:::0;;8640:50:::2;::::0;;;;8684:4:::2;8640:50;::::0;::::2;2704:74:9::0;8622:15:0::2;::::0;8647:17:::2;;::::0;8640:35:::2;::::0;2677:18:9;;8640:50:0::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8622:68;;8738:28;8750:15;;8738:7;:11;;:28;;;;:::i;:::-;8712:11;:22;;;:54;;8704:82;;;::::0;::::2;::::0;;9896:2:9;8704:82:0::2;::::0;::::2;9878:21:9::0;9935:2;9915:18;;;9908:30;9974:17;9954:18;;;9947:45;10009:18;;8704:82:0::2;9868:165:9::0;8704:82:0::2;8805:22;8817:6;8824:1;8817:9;;;;;;;;;;;;;;;;;;;;;;8805:22;;;;11308:25:9::0;;11296:2;11281:18;;11263:76;8805:22:0::2;;;;;;;;8102:736;;8143:3;;;;;:::i;:::-;;;;8102:736;;;-1:-1:-1::0;8865:15:0::2;8848:14;:32:::0;;;8925:15:::2;::::0;8905:36:::2;::::0;8865:15;8905:19:::2;:36::i;:::-;8890:12;:51:::0;-1:-1:-1;;;;7919:1029:0:o;6386:94::-;6440:10;6430:21;;;;:9;:21;;;;;;6421:31;;:8;:31::i;:::-;6462:11;:9;:11::i;1911:198:2:-;1101:6;;1241:23;1101:6;719:10:1;1241:23:2;1233:68;;;;;;;9177:2:9;1233:68:2;;;9159:21:9;;;9196:18;;;9189:30;9255:34;9235:18;;;9228:62;9307:18;;1233:68:2;9149:182:9;1233:68:2;1999:22:::1;::::0;::::1;1991:73;;;::::0;::::1;::::0;;5933:2:9;1991:73:2::1;::::0;::::1;5915:21:9::0;5972:2;5952:18;;;5945:30;6011:34;5991:18;;;5984:62;6082:8;6062:18;;;6055:36;6108:19;;1991:73:2::1;5905:228:9::0;1991:73:2::1;2074:28;2093:8;2074:18;:28::i;:::-;1911:198:::0;:::o;3108:96:8:-;3166:7;3192:5;3196:1;3192;:5;:::i;3451:96::-;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;2741:96::-;2799:7;2825:5;2829:1;2825;:5;:::i;699:205:7:-;838:58;;3396:42:9;3384:55;;838:58:7;;;3366:74:9;3456:18;;;3449:34;;;811:86:7;;831:5;;861:23;;3339:18:9;;838:58:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;811:19;:86::i;:::-;699:205;;;:::o;910:241::-;1075:68;;3001:42:9;3070:15;;;1075:68:7;;;3052:34:9;3122:15;;3102:18;;;3095:43;3154:18;;;3147:34;;;1048:96:7;;1068:5;;1098:27;;2964:18:9;;1075:68:7;2946:241:9;1048:96:7;910:241;;;;:::o;2263:187:2:-;2355:6;;;;2371:17;;;;;;;;;;;2403:40;;2355:6;;;2371:17;2355:6;;2403:40;;2336:16;;2403:40;2263:187;;:::o;446:104:6:-;504:7;534:1;530;:5;:13;;542:1;530:13;;;-1:-1:-1;538:1:6;;446:104;-1:-1:-1;446:104:6:o;3205:706:7:-;3624:23;3650:69;3678:4;3650:69;;;;;;;;;;;;;;;;;3658:5;3650:27;;;;:69;;;;;:::i;:::-;3733:17;;3624:95;;-1:-1:-1;3733:21:7;3729:176;;3828:10;3817:30;;;;;;;;;;;;:::i;:::-;3809:85;;;;;;;10240:2:9;3809:85:7;;;10222:21:9;10279:2;10259:18;;;10252:30;10318:34;10298:18;;;10291:62;10389:12;10369:18;;;10362:40;10419:19;;3809:85:7;10212:232:9;3846:223:5;3979:12;4010:52;4032:6;4040:4;4046:1;4049:12;4010:21;:52::i;:::-;4003:59;3846:223;-1:-1:-1;;;;3846:223:5:o;4933:499::-;5098:12;5155:5;5130:21;:30;;5122:81;;;;;;;7383:2:9;5122:81:5;;;7365:21:9;7422:2;7402:18;;;7395:30;7461:34;7441:18;;;7434:62;7532:8;7512:18;;;7505:36;7558:19;;5122:81:5;7355:228:9;5122:81:5;1450:19;;;;5213:60;;;;;;;9538:2:9;5213:60:5;;;9520:21:9;9577:2;9557:18;;;9550:30;9616:31;9596:18;;;9589:59;9665:18;;5213:60:5;9510:179:9;5213:60:5;5285:12;5299:23;5326:6;:11;;5345:5;5352:4;5326:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5284:73;;;;5374:51;5391:7;5400:10;5412:12;5374:16;:51::i;:::-;5367:58;4933:499;-1:-1:-1;;;;;;;4933:499:5:o;7546:692::-;7692:12;7720:7;7716:516;;;-1:-1:-1;7750:10:5;7743:17;;7716:516;7861:17;;:21;7857:365;;8055:10;8049:17;8115:15;8102:10;8098:2;8094:19;8087:44;8004:145;8194:12;8187:20;;;;;;;;;;;:::i;14:329:9:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;241:42;234:5;230:54;223:5;220:65;210:2;;304:6;296;289:22;348:1230;432:6;463:2;506;494:9;485:7;481:23;477:32;474:2;;;527:6;519;512:22;474:2;572:9;559:23;601:18;642:2;634:6;631:14;628:2;;;663:6;655;648:22;628:2;706:6;695:9;691:22;681:32;;751:7;744:4;740:2;736:13;732:27;722:2;;778:6;770;763:22;722:2;819;806:16;841:2;837;834:10;831:2;;;847:18;;:::i;:::-;893:2;890:1;886:10;925:2;919:9;984:66;979:2;975;971:11;967:84;959:6;955:97;1102:6;1090:10;1087:22;1082:2;1070:10;1067:18;1064:46;1061:2;;;1113:18;;:::i;:::-;1149:2;1142:22;1199:18;;;1233:15;;;;-1:-1:-1;1268:11:9;;;1298;;;1294:20;;1291:33;-1:-1:-1;1288:2:9;;;1342:6;1334;1327:22;1288:2;1369:6;1360:15;;1384:163;1398:2;1395:1;1392:9;1384:163;;;1455:17;;1443:30;;1416:1;1409:9;;;;;1493:12;;;;1525;;1384:163;;;-1:-1:-1;1566:6:9;443:1135;-1:-1:-1;;;;;;;;443:1135:9:o;1583:297::-;1650:6;1703:2;1691:9;1682:7;1678:23;1674:32;1671:2;;;1724:6;1716;1709:22;1671:2;1761:9;1755:16;1814:5;1807:13;1800:21;1793:5;1790:32;1780:2;;1841:6;1833;1826:22;1885:190;1944:6;1997:2;1985:9;1976:7;1972:23;1968:32;1965:2;;;2018:6;2010;2003:22;1965:2;-1:-1:-1;2046:23:9;;1955:120;-1:-1:-1;1955:120:9:o;2080:194::-;2150:6;2203:2;2191:9;2182:7;2178:23;2174:32;2171:2;;;2224:6;2216;2209:22;2171:2;-1:-1:-1;2252:16:9;;2161:113;-1:-1:-1;2161:113:9:o;2279:274::-;2408:3;2446:6;2440:13;2462:53;2508:6;2503:3;2496:4;2488:6;2484:17;2462:53;:::i;:::-;2531:16;;;;;2416:137;-1:-1:-1;;2416:137:9:o;3494:899::-;3719:2;3771:21;;;3841:13;;3744:18;;;3863:22;;;3690:4;;3719:2;3904;;3922:18;;;;3963:15;;;3690:4;4009:358;4023:6;4020:1;4017:13;4009:358;;;4082:13;;4124:9;;4135:42;4120:58;4108:71;;4219:11;;;4213:18;4199:12;;;4192:40;4272:11;;4266:18;4252:12;;;4245:40;4314:4;4305:14;;;;4342:15;;;;4045:1;4038:9;4009:358;;;-1:-1:-1;4384:3:9;;3699:694;-1:-1:-1;;;;;;;3699:694:9:o;4398:635::-;4569:2;4621:21;;;4691:13;;4594:18;;;4713:22;;;4540:4;;4569:2;4792:15;;;;4766:2;4751:18;;;4540:4;4838:169;4852:6;4849:1;4846:13;4838:169;;;4913:13;;4901:26;;4982:15;;;;4947:12;;;;4874:1;4867:9;4838:169;;;-1:-1:-1;5024:3:9;;4549:484;-1:-1:-1;;;;;;4549:484:9:o;5284:442::-;5433:2;5422:9;5415:21;5396:4;5465:6;5459:13;5508:6;5503:2;5492:9;5488:18;5481:34;5524:66;5583:6;5578:2;5567:9;5563:18;5558:2;5550:6;5546:15;5524:66;:::i;:::-;5642:2;5630:15;5647:66;5626:88;5611:104;;;;5717:2;5607:113;;5405:321;-1:-1:-1;;5405:321:9:o;11344:128::-;11384:3;11415:1;11411:6;11408:1;11405:13;11402:2;;;11421:18;;:::i;:::-;-1:-1:-1;11457:9:9;;11392:80::o;11477:274::-;11517:1;11543;11533:2;;11578:77;11575:1;11568:88;11679:4;11676:1;11669:15;11707:4;11704:1;11697:15;11533:2;-1:-1:-1;11736:9:9;;11523:228::o;11756:::-;11796:7;11922:1;11854:66;11850:74;11847:1;11844:81;11839:1;11832:9;11825:17;11821:105;11818:2;;;11929:18;;:::i;:::-;-1:-1:-1;11969:9:9;;11808:176::o;11989:125::-;12029:4;12057:1;12054;12051:8;12048:2;;;12062:18;;:::i;:::-;-1:-1:-1;12099:9:9;;12038:76::o;12119:258::-;12191:1;12201:113;12215:6;12212:1;12209:13;12201:113;;;12291:11;;;12285:18;12272:11;;;12265:39;12237:2;12230:10;12201:113;;;12332:6;12329:1;12326:13;12323:2;;;-1:-1:-1;;12367:1:9;12349:16;;12342:27;12172:205::o;12382:195::-;12421:3;12452:66;12445:5;12442:77;12439:2;;;12522:18;;:::i;:::-;-1:-1:-1;12569:1:9;12558:13;;12429:148::o;12582:184::-;12634:77;12631:1;12624:88;12731:4;12728:1;12721:15;12755:4;12752:1;12745:15;12771:184;12823:77;12820:1;12813:88;12920:4;12917:1;12910:15;12944:4;12941:1;12934:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2865000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addRewardToken(address)": "infinite",
								"balanceOf(address)": "1267",
								"depositRewardTokens(uint256[])": "infinite",
								"earned(address)": "infinite",
								"emergencyWithdrawal(address)": "infinite",
								"exit()": "infinite",
								"getReward()": "infinite",
								"getRewardForDuration()": "infinite",
								"getRewardTokens()": "infinite",
								"lastTimeRewardApplicable()": "1183",
								"lastUpdateTime()": "1062",
								"notifyRewardAmount(uint256[])": "infinite",
								"owner()": "1052",
								"periodFinish()": "1083",
								"removeRewardToken(address)": "infinite",
								"renounceOwnership()": "23424",
								"rewardForToken(address)": "infinite",
								"rewardPerToken()": "infinite",
								"rewardsDuration()": "1041",
								"stake(uint256)": "infinite",
								"stakingToken()": "1081",
								"totalRewardTokens()": "1083",
								"totalSupply()": "1050",
								"transferOwnership(address)": "23624",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 301,
									"end": 11934,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 301,
									"end": 11934,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 301,
									"end": 11934,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1220,
									"end": 1750,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 914,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 914,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1319,
									"end": 1331,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1319,
									"end": 1355,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1355,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1319,
									"end": 1355,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1319,
									"end": 1355,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1355,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1355,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1355,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1355,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1386,
									"end": 1406,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1386,
									"end": 1406,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1383,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1365,
									"end": 1406,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1417,
									"end": 1708,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1417,
									"end": 1708,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1434,
									"end": 1447,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1434,
									"end": 1454,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1430,
									"end": 1431,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1430,
									"end": 1454,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1708,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1708,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1417,
									"end": 1708,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1535,
									"end": 1548,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1549,
									"end": 1550,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "PUSH",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1535,
									"end": 1551,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1581,
									"end": 1582,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1622,
									"end": 1623,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1638,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1488,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1489,
									"end": 1490,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1493,
									"end": 1494,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1489,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1489,
									"end": 1494,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1494,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1489,
									"end": 1494,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1489,
									"end": 1494,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1489,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1638,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1692,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1692,
									"end": 1697,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1692,
									"end": 1693,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1692,
									"end": 1693,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1692,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1692,
									"end": 1697,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1692,
									"end": 1697,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1692,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1652,
									"end": 1671,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 1652,
									"end": 1689,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1686,
									"end": 1687,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "PUSH",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1672,
									"end": 1688,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1652,
									"end": 1689,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1652,
									"end": 1689,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1652,
									"end": 1689,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1652,
									"end": 1689,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1652,
									"end": 1689,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1652,
									"end": 1689,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1652,
									"end": 1689,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1652,
									"end": 1689,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1652,
									"end": 1689,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1652,
									"end": 1689,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1652,
									"end": 1689,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1652,
									"end": 1689,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1689,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1652,
									"end": 1697,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1652,
									"end": 1697,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1652,
									"end": 1697,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1652,
									"end": 1697,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1459,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1459,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1456,
									"end": 1459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1456,
									"end": 1459,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1456,
									"end": 1459,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1456,
									"end": 1459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1459,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1459,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1459,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1708,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1417,
									"end": 1708,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1708,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1417,
									"end": 1708,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1736,
									"end": 1743,
									"name": "PUSH",
									"source": 0,
									"value": "127500"
								},
								{
									"begin": 1718,
									"end": 1733,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1718,
									"end": 1743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 301,
									"end": 11934,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 301,
									"end": 11934,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2336,
									"end": 2352,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2336,
									"end": 2352,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 115,
									"end": 117,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 115,
									"end": 117,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 115,
									"end": 117,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 115,
									"end": 117,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 74,
									"end": 191,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 74,
									"end": 191,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 74,
									"end": 191,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 74,
									"end": 191,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 1468,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 300,
									"end": 306,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 308,
									"end": 314,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 361,
									"end": 363,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 349,
									"end": 358,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 340,
									"end": 347,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 336,
									"end": 359,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 332,
									"end": 364,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 329,
									"end": 331,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 329,
									"end": 331,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 329,
									"end": 331,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 382,
									"end": 388,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 374,
									"end": 380,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 367,
									"end": 389,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 329,
									"end": 331,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 329,
									"end": 331,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 414,
									"end": 430,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 414,
									"end": 430,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 479,
									"end": 493,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 479,
									"end": 493,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 479,
									"end": 493,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 476,
									"end": 478,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 476,
									"end": 478,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 476,
									"end": 478,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 511,
									"end": 517,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 503,
									"end": 509,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 496,
									"end": 518,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 476,
									"end": 478,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 476,
									"end": 478,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 554,
									"end": 560,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 543,
									"end": 552,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 539,
									"end": 561,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 529,
									"end": 561,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 529,
									"end": 561,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 599,
									"end": 606,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 592,
									"end": 596,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 584,
									"end": 597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 580,
									"end": 607,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 570,
									"end": 572,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 570,
									"end": 572,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 626,
									"end": 632,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 618,
									"end": 624,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 611,
									"end": 633,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 570,
									"end": 572,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 570,
									"end": 572,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 660,
									"end": 662,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 654,
									"end": 663,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 682,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 705,
									"end": 707,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 701,
									"end": 703,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 698,
									"end": 708,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 695,
									"end": 697,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 695,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 695,
									"end": 697,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 711,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 711,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 711,
									"end": 729,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 711,
									"end": 729,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 711,
									"end": 729,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 757,
									"end": 759,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 754,
									"end": 755,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 750,
									"end": 760,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 789,
									"end": 791,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 783,
									"end": 792,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 852,
									"end": 854,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 848,
									"end": 855,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 843,
									"end": 845,
									"name": "PUSH",
									"source": 9,
									"value": "3F"
								},
								{
									"begin": 839,
									"end": 841,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 835,
									"end": 846,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 831,
									"end": 856,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 823,
									"end": 829,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 819,
									"end": 857,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 907,
									"end": 913,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 895,
									"end": 905,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 892,
									"end": 914,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 887,
									"end": 889,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 875,
									"end": 885,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 872,
									"end": 890,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 869,
									"end": 915,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 866,
									"end": 868,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 866,
									"end": 868,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 866,
									"end": 868,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 918,
									"end": 936,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 918,
									"end": 936,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 918,
									"end": 936,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 918,
									"end": 936,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 918,
									"end": 936,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 954,
									"end": 956,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 947,
									"end": 969,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1004,
									"end": 1022,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1004,
									"end": 1022,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1004,
									"end": 1022,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1038,
									"end": 1053,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1038,
									"end": 1053,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1038,
									"end": 1053,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1038,
									"end": 1053,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1073,
									"end": 1084,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1073,
									"end": 1084,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1073,
									"end": 1084,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1103,
									"end": 1114,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1103,
									"end": 1114,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1103,
									"end": 1114,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1096,
									"end": 1129,
									"name": "DUP12",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1093,
									"end": 1095,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1093,
									"end": 1095,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1093,
									"end": 1095,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1153,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1139,
									"end": 1145,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1154,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1093,
									"end": 1095,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1093,
									"end": 1095,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1174,
									"end": 1180,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1165,
									"end": 1180,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 1165,
									"end": 1180,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1189,
									"end": 1369,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1189,
									"end": 1369,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1200,
									"end": 1201,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1197,
									"end": 1206,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1189,
									"end": 1369,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1189,
									"end": 1369,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1189,
									"end": 1369,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1290,
									"end": 1293,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1248,
									"end": 1295,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1248,
									"end": 1295,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1221,
									"end": 1222,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1214,
									"end": 1223,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 1214,
									"end": 1223,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1214,
									"end": 1223,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 1214,
									"end": 1223,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1214,
									"end": 1223,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 1315,
									"end": 1327,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1315,
									"end": 1327,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1315,
									"end": 1327,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1315,
									"end": 1327,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1347,
									"end": 1359,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1347,
									"end": 1359,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1189,
									"end": 1369,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1189,
									"end": 1369,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1189,
									"end": 1369,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1189,
									"end": 1369,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1388,
									"end": 1394,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1413,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1413,
									"end": 1462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1443,
									"end": 1461,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1443,
									"end": 1461,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1443,
									"end": 1461,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1413,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1413,
									"end": 1462,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1413,
									"end": 1462,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1413,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1403,
									"end": 1462,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1403,
									"end": 1462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1403,
									"end": 1462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1403,
									"end": 1462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1403,
									"end": 1462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1403,
									"end": 1462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 319,
									"end": 1468,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 319,
									"end": 1468,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 319,
									"end": 1468,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 319,
									"end": 1468,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 319,
									"end": 1468,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 319,
									"end": 1468,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1473,
									"end": 1601,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1473,
									"end": 1601,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1513,
									"end": 1516,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1544,
									"end": 1545,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1540,
									"end": 1546,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1537,
									"end": 1538,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1534,
									"end": 1547,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1531,
									"end": 1533,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1531,
									"end": 1533,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1531,
									"end": 1533,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1568,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1550,
									"end": 1568,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1550,
									"end": 1568,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1550,
									"end": 1568,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1550,
									"end": 1568,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1586,
									"end": 1595,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1586,
									"end": 1595,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1601,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1606,
									"end": 1741,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1606,
									"end": 1741,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1645,
									"end": 1648,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1666,
									"end": 1683,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1666,
									"end": 1683,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1663,
									"end": 1665,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1663,
									"end": 1665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1663,
									"end": 1665,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1686,
									"end": 1704,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1686,
									"end": 1704,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1686,
									"end": 1704,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1686,
									"end": 1704,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1686,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1733,
									"end": 1734,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1722,
									"end": 1735,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1722,
									"end": 1735,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1653,
									"end": 1741,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1746,
									"end": 1873,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1746,
									"end": 1873,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1807,
									"end": 1817,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1802,
									"end": 1805,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1798,
									"end": 1818,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1795,
									"end": 1796,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1788,
									"end": 1819,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1838,
									"end": 1842,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1835,
									"end": 1836,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1828,
									"end": 1843,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 1866,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1859,
									"end": 1860,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1852,
									"end": 1867,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1878,
									"end": 2005,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1878,
									"end": 2005,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1939,
									"end": 1949,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1934,
									"end": 1937,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1930,
									"end": 1950,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1927,
									"end": 1928,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1920,
									"end": 1951,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1970,
									"end": 1974,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1967,
									"end": 1968,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1960,
									"end": 1975,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1994,
									"end": 1998,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1991,
									"end": 1992,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1984,
									"end": 1999,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1910,
									"end": 2005,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1910,
									"end": 2005,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 301,
									"end": 11934,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 11934,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 301,
									"end": 11934,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 11934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 11934,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 301,
									"end": 11934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 11934,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203ae163772a06288e2e25d833ddc63a13351d2de4e76e169f1ebe156eb04220c264736f6c63430008040033",
									".code": [
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "C4F59F9B"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "E71E7F78"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "E71E7F78"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "E9FAD8EE"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "EBE2B12B"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "C4F59F9B"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "C8F33C91"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "CD3DAF9D"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "A54F5E0D"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "72F702F3"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "80FAA57D"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "386A9525"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "6A1AF3B7"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "6A1AF3B7"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "6E353A1D"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "386A9525"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "3D18B912"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "3D509C97"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "1C03E6CC"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "1C03E6CC"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "1C1F78EB"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "8CC262"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "1B0875A6"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 11934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1773,
											"end": 1864,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1773,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1857,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1845,
											"end": 1857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1773,
											"end": 1864,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1773,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1773,
											"end": 1864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1773,
											"end": 1864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11308,
											"end": 11333,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11333,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11333,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11296,
											"end": 11298,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 11263,
											"end": 11339,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2224,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2121,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2199,
											"end": 2217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2121,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2121,
											"end": 2224,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4912,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4571,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4571,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4571,
											"end": 4912,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5525,
											"end": 5876,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5525,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5525,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5525,
											"end": 5876,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5876,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5525,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5525,
											"end": 5876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5525,
											"end": 5876,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5525,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5525,
											"end": 5876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 517,
											"end": 547,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 517,
											"end": 547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 517,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 517,
											"end": 547,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 517,
											"end": 547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 517,
											"end": 547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 517,
											"end": 547,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 6380,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5882,
											"end": 6380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 6380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5882,
											"end": 6380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5882,
											"end": 6380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9830,
											"end": 10679,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9830,
											"end": 10679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9830,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9830,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9830,
											"end": 10679,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9830,
											"end": 10679,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9830,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9830,
											"end": 10679,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9830,
											"end": 10679,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9830,
											"end": 10679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9830,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9830,
											"end": 10679,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6526,
											"end": 7913,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6526,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6526,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6526,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6526,
											"end": 7913,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6526,
											"end": 7913,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6526,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6526,
											"end": 7913,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6526,
											"end": 7913,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6526,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6526,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6526,
											"end": 7913,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10685,
											"end": 10988,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10685,
											"end": 10988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 10685,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10685,
											"end": 10988,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10685,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 10685,
											"end": 10988,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10685,
											"end": 10988,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10685,
											"end": 10988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 10685,
											"end": 10988,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1870,
											"end": 1980,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1870,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1870,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1870,
											"end": 1980,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1980,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1870,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1870,
											"end": 1980,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1870,
											"end": 1980,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1870,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1955,
											"end": 1973,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1955,
											"end": 1973,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1955,
											"end": 1973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1955,
											"end": 1973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1955,
											"end": 1964,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 1955,
											"end": 1973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1955,
											"end": 1973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1955,
											"end": 1973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1955,
											"end": 1973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1955,
											"end": 1973,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1955,
											"end": 1973,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1955,
											"end": 1973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1980,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 452,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 452,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 452,
											"end": 478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 452,
											"end": 478,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 452,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 452,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2734,
											"end": 2776,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2722,
											"end": 2777,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2722,
											"end": 2777,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2722,
											"end": 2777,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2704,
											"end": 2778,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2704,
											"end": 2778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 452,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2659,
											"end": 2784,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1986,
											"end": 2115,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1986,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1986,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1986,
											"end": 2115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4947,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4947,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4947,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4947,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4947,
											"end": 5519,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4947,
											"end": 5519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4947,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4947,
											"end": 5519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4947,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4947,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4947,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4947,
											"end": 5519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3659,
											"end": 3949,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3659,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3659,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3659,
											"end": 3949,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3659,
											"end": 3949,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3659,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3949,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3659,
											"end": 3949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3659,
											"end": 3949,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 553,
											"end": 582,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 553,
											"end": 582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 553,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 553,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 553,
											"end": 582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 553,
											"end": 582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 582,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 3076,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2268,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2268,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2268,
											"end": 3076,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7919,
											"end": 8948,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7919,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7919,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7919,
											"end": 8948,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7919,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 7919,
											"end": 8948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7919,
											"end": 8948,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7919,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7919,
											"end": 8948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6386,
											"end": 6480,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6386,
											"end": 6480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6386,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6386,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6386,
											"end": 6480,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 511,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4025,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4037,
											"end": 4062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4037,
											"end": 4098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4037,
											"end": 4098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4108,
											"end": 4137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4140,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4140,
											"end": 4156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4140,
											"end": 4156,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4140,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4108,
											"end": 4156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4166,
											"end": 4533,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4166,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4205,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4533,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4166,
											"end": 4533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4256,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4256,
											"end": 4257,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4260,
											"end": 4261,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4256,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4256,
											"end": 4261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4256,
											"end": 4261,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4256,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4262,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4268,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4492,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4501,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4508,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4508,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4508,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4409,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4400,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4377,
											"end": 4409,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4409,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4409,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4409,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4416,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4416,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4416,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4416,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4268,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4296,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4296,
											"end": 4522,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4296,
											"end": 4462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4461,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4457,
											"end": 4461,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 4296,
											"end": 4435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4336,
											"end": 4417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4348,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4350,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 4349,
											"end": 4350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4336,
											"end": 4376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4417,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4336,
											"end": 4417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4417,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4336,
											"end": 4417,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4336,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4305,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4296,
											"end": 4435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4296,
											"end": 4435,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 4296,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4296,
											"end": 4462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4296,
											"end": 4462,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4296,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4296,
											"end": 4522,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4296,
											"end": 4522,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4296,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4290,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4291,
											"end": 4292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4207,
											"end": 4210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4207,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4207,
											"end": 4210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4207,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4207,
											"end": 4210,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4207,
											"end": 4210,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4207,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4207,
											"end": 4210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4207,
											"end": 4210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4207,
											"end": 4210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4166,
											"end": 4533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4533,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4166,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4550,
											"end": 4558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4558,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3955,
											"end": 4565,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9177,
											"end": 9179,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9189,
											"end": 9219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9289,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9228,
											"end": 9290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9030,
											"end": 9048,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9030,
											"end": 9048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9030,
											"end": 9052,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9022,
											"end": 9072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 9022,
											"end": 9072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9022,
											"end": 9072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9022,
											"end": 9072,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9022,
											"end": 9072,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9022,
											"end": 9072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9022,
											"end": 9072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6340,
											"end": 6342,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9022,
											"end": 9072,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9022,
											"end": 9072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9022,
											"end": 9072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6343,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6379,
											"end": 6381,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6382,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6418,
											"end": 6435,
											"name": "PUSH",
											"source": 9,
											"value": "546F6F206D616E7920746F6B656E730000000000000000000000000000000000"
										},
										{
											"begin": 6398,
											"end": 6416,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6398,
											"end": 6416,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6398,
											"end": 6416,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6391,
											"end": 6436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6453,
											"end": 6471,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6453,
											"end": 6471,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9022,
											"end": 9072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6312,
											"end": 6477,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9022,
											"end": 9072,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 9022,
											"end": 9072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9126,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9131,
											"end": 9132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9131,
											"end": 9132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9090,
											"end": 9113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9113,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 9090,
											"end": 9113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 9090,
											"end": 9128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9132,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9082,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 9082,
											"end": 9158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9082,
											"end": 9158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9082,
											"end": 9158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9082,
											"end": 9158,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9082,
											"end": 9158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9082,
											"end": 9158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7790,
											"end": 7792,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9082,
											"end": 9158,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9082,
											"end": 9158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9082,
											"end": 9158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7772,
											"end": 7793,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7829,
											"end": 7831,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 7809,
											"end": 7827,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7809,
											"end": 7827,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7809,
											"end": 7827,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7802,
											"end": 7832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7868,
											"end": 7891,
											"name": "PUSH",
											"source": 9,
											"value": "4D7573742070726566756E6420636F6E74726163740000000000000000000000"
										},
										{
											"begin": 7848,
											"end": 7866,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7848,
											"end": 7866,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7848,
											"end": 7866,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7892,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7927,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7909,
											"end": 7927,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9082,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7762,
											"end": 7933,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9082,
											"end": 9158,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 9082,
											"end": 9158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9233,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9210,
											"end": 9228,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9210,
											"end": 9228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9210,
											"end": 9233,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9233,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9233,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 9210,
											"end": 9233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 9210,
											"end": 9233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9210,
											"end": 9233,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 9210,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9233,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9318,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9300,
											"end": 9318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9319,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9299,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9286,
											"end": 9319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9319,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9319,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9319,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9435,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9465,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9493,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9504,
											"end": 9570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9504,
											"end": 9570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9586,
											"end": 9592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9581,
											"end": 9774,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 9581,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9620,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9602,
											"end": 9620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9598,
											"end": 9599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9598,
											"end": 9620,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9581,
											"end": 9774,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9581,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 9581,
											"end": 9774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9672,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9650,
											"end": 9668,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9650,
											"end": 9668,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9650,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 9650,
											"end": 9672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9650,
											"end": 9672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9650,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 9650,
											"end": 9672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9650,
											"end": 9672,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 9650,
											"end": 9672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9645,
											"end": 9646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9645,
											"end": 9672,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 9641,
											"end": 9764,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9743,
											"end": 9747,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9711,
											"end": 9734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9711,
											"end": 9734,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9734,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 9711,
											"end": 9734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 9711,
											"end": 9749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9764,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 9641,
											"end": 9764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9581,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 9581,
											"end": 9774,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9581,
											"end": 9774,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 9581,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9581,
											"end": 9774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9784,
											"end": 9817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 9803,
											"end": 9816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9784,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9784,
											"end": 9817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9784,
											"end": 9817,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 9784,
											"end": 9817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9824,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4571,
											"end": 4912,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4571,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4642,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4654,
											"end": 4685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4702,
											"end": 4720,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4702,
											"end": 4720,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4736,
											"end": 4742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4874,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 4731,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4748,
											"end": 4749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4731,
											"end": 4874,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4731,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 4731,
											"end": 4874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 4862,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4847,
											"end": 4862,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4811,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4824,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4825,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 4825,
											"end": 4826,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4829,
											"end": 4830,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4825,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4825,
											"end": 4830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4825,
											"end": 4830,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 4825,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4842,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4811,
											"end": 4842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4811,
											"end": 4846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4811,
											"end": 4863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4811,
											"end": 4863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4811,
											"end": 4863,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4811,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4806,
											"end": 4807,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4731,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 4731,
											"end": 4874,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4731,
											"end": 4874,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 4731,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4891,
											"end": 4905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4571,
											"end": 4912,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5525,
											"end": 5876,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5525,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10653,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10654,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10690,
											"end": 10692,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10670,
											"end": 10688,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10670,
											"end": 10688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10670,
											"end": 10688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10663,
											"end": 10693,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10729,
											"end": 10762,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10702,
											"end": 10763,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10780,
											"end": 10798,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10780,
											"end": 10798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 10623,
											"end": 10804,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5602,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5592,
											"end": 5602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 11107,
											"end": 11121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11072,
											"end": 11123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11072,
											"end": 11123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 11175,
											"end": 11182,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11168,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 11210,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11193,
											"end": 11207,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11193,
											"end": 11236,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11263,
											"end": 11264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11353,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11306,
											"end": 11337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 11354,
											"end": 11355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11358,
											"end": 11359,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11427,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11541,
											"end": 11542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11494,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11543,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11630,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11631,
											"end": 11632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11631,
											"end": 11632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11584,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11633,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5628,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5622,
											"end": 5632,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5614,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5614,
											"end": 5654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5614,
											"end": 5654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5614,
											"end": 5654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5614,
											"end": 5654,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5614,
											"end": 5654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5614,
											"end": 5654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8833,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5614,
											"end": 5654,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5614,
											"end": 5654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5614,
											"end": 5654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8834,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8870,
											"end": 8872,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 8850,
											"end": 8868,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8850,
											"end": 8868,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8850,
											"end": 8868,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8843,
											"end": 8873,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8909,
											"end": 8928,
											"name": "PUSH",
											"source": 9,
											"value": "43616E6E6F742077697468647261772030000000000000000000000000000000"
										},
										{
											"begin": 8889,
											"end": 8907,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8889,
											"end": 8907,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8889,
											"end": 8907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8882,
											"end": 8929,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 8803,
											"end": 8970,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5654,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5614,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 5691,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 5679,
											"end": 5691,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 5679,
											"end": 5703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5696,
											"end": 5702,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5679,
											"end": 5703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5679,
											"end": 5703,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 5679,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5676,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 5664,
											"end": 5703,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5757,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5746,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 5737,
											"end": 5758,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5737,
											"end": 5758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5737,
											"end": 5758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5758,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5758,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 5737,
											"end": 5770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5769,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5737,
											"end": 5770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5770,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 5737,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5723,
											"end": 5733,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5722,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 5713,
											"end": 5734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5713,
											"end": 5734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5713,
											"end": 5734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5734,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5780,
											"end": 5792,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5780,
											"end": 5825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5780,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 5824,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 5780,
											"end": 5825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5780,
											"end": 5825,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5780,
											"end": 5825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5840,
											"end": 5869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11308,
											"end": 11333,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11333,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11333,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5850,
											"end": 5860,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5850,
											"end": 5860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5869,
											"name": "PUSH",
											"source": 0,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 5840,
											"end": 5869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11298,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5840,
											"end": 5869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5840,
											"end": 5869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5869,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5525,
											"end": 5876,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5882,
											"end": 6380,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5882,
											"end": 6380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10653,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10654,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10690,
											"end": 10692,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10670,
											"end": 10688,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10670,
											"end": 10688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10670,
											"end": 10688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10663,
											"end": 10693,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10729,
											"end": 10762,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10702,
											"end": 10763,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10780,
											"end": 10798,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10780,
											"end": 10798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 10623,
											"end": 10804,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 11107,
											"end": 11121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11072,
											"end": 11123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11072,
											"end": 11123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 11175,
											"end": 11182,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11168,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 11210,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11193,
											"end": 11207,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11193,
											"end": 11236,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11263,
											"end": 11264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11353,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11306,
											"end": 11337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 11354,
											"end": 11355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11358,
											"end": 11359,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11427,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11541,
											"end": 11542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11494,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11543,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11630,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11631,
											"end": 11632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11631,
											"end": 11632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11584,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11633,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5963,
											"end": 5969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5958,
											"end": 6374,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 5958,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5975,
											"end": 5976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5975,
											"end": 5997,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5958,
											"end": 6374,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5958,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 5958,
											"end": 6374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6061,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6042,
											"end": 6062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6050,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6042,
											"end": 6062,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6042,
											"end": 6062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6062,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6042,
											"end": 6062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6062,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6076,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6018,
											"end": 6039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6077,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 6077,
											"end": 6078,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6081,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6077,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6077,
											"end": 6082,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6077,
											"end": 6082,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 6077,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6083,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6063,
											"end": 6089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6090,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6090,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6090,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6090,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6090,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6108,
											"end": 6125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6108,
											"end": 6125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6104,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 6104,
											"end": 6364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6164,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6179,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6196,
											"end": 6197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6185,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6180,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6180,
											"end": 6185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6180,
											"end": 6185,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 6180,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6192,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6166,
											"end": 6192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6193,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6193,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6193,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6193,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6197,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6215,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 6215,
											"end": 6289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6263,
											"end": 6273,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6263,
											"end": 6273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6275,
											"end": 6288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6275,
											"end": 6288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6235,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6222,
											"end": 6235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6236,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6236,
											"end": 6237,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6192,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6236,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6236,
											"end": 6241,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6236,
											"end": 6241,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6236,
											"end": 6241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6248,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6222,
											"end": 6248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6215,
											"end": 6289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6215,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 6215,
											"end": 6289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6215,
											"end": 6289,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 6215,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6312,
											"end": 6349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11308,
											"end": 11333,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11333,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11333,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6323,
											"end": 6333,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6312,
											"end": 6349,
											"name": "PUSH",
											"source": 0,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 6312,
											"end": 6349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11298,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6312,
											"end": 6349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6312,
											"end": 6349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6312,
											"end": 6349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6312,
											"end": 6349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6312,
											"end": 6349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6312,
											"end": 6349,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 6104,
											"end": 6364,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 6104,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5999,
											"end": 6002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 5999,
											"end": 6002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5999,
											"end": 6002,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5999,
											"end": 6002,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 5999,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5958,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 5958,
											"end": 6374,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5958,
											"end": 6374,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 5958,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5882,
											"end": 6380,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9830,
											"end": 10679,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9830,
											"end": 10679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9177,
											"end": 9179,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9189,
											"end": 9219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9289,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9228,
											"end": 9290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 9149,
											"end": 9331,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11072,
											"end": 11104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 11107,
											"end": 11121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11072,
											"end": 11123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11072,
											"end": 11123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 11175,
											"end": 11182,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11168,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 11210,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11193,
											"end": 11207,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11193,
											"end": 11236,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11263,
											"end": 11264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11353,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11306,
											"end": 11337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 11354,
											"end": 11355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11358,
											"end": 11359,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11427,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11541,
											"end": 11542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11494,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11543,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11630,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11631,
											"end": 11632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11631,
											"end": 11632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11584,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11633,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9953,
											"end": 9954,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9932,
											"end": 9950,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9932,
											"end": 9950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 9954,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9924,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 9924,
											"end": 9986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9924,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9924,
											"end": 9986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9924,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9924,
											"end": 9986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9924,
											"end": 9986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7027,
											"end": 7029,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9924,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9924,
											"end": 9986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9924,
											"end": 9986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7030,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7068,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 7046,
											"end": 7064,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7046,
											"end": 7064,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7046,
											"end": 7064,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7039,
											"end": 7069,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7105,
											"end": 7134,
											"name": "PUSH",
											"source": 9,
											"value": "43616E6E6F74206861766520302072657761726420746F6B656E730000000000"
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7078,
											"end": 7135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7152,
											"end": 7170,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7152,
											"end": 7170,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9924,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6999,
											"end": 7176,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9924,
											"end": 9986,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 9924,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 10061,
											"end": 10087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10061,
											"end": 10087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10087,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10087,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10639,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 10191,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10243,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10225,
											"end": 10243,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10243,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 10191,
											"end": 10639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10308,
											"end": 10339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10342,
											"end": 10355,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10308,
											"end": 10339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10356,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 10356,
											"end": 10357,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10361,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10356,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10356,
											"end": 10361,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10356,
											"end": 10361,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 10356,
											"end": 10361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10455,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10452,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10439,
											"end": 10455,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10455,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10455,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10469,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 10362,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 10536,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 10536,
											"end": 10541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10453,
											"end": 10454,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10453,
											"end": 10454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10536,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10536,
											"end": 10541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10536,
											"end": 10541,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 10536,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10606,
											"end": 10623,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10606,
											"end": 10623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10515,
											"end": 10542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10606,
											"end": 10623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10586,
											"end": 10624,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10586,
											"end": 10624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10586,
											"end": 10605,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 10586,
											"end": 10624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10586,
											"end": 10624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10586,
											"end": 10624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10586,
											"end": 10624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10586,
											"end": 10624,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10586,
											"end": 10628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10586,
											"end": 10628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10586,
											"end": 10628,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 10627,
											"end": 10628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 10245,
											"end": 10248,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10245,
											"end": 10248,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 10245,
											"end": 10248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10245,
											"end": 10248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 10191,
											"end": 10639,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10639,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 10191,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10672,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10649,
											"end": 10667,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10649,
											"end": 10667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10649,
											"end": 10672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 10649,
											"end": 10672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 10649,
											"end": 10672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10649,
											"end": 10672,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 10649,
											"end": 10672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10672,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9830,
											"end": 10679,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6526,
											"end": 7913,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6526,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9177,
											"end": 9179,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9189,
											"end": 9219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9289,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9228,
											"end": 9290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 9149,
											"end": 9331,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6617,
											"end": 6623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6617,
											"end": 6630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6617,
											"end": 6652,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 6609,
											"end": 6670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 6670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6609,
											"end": 6670,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 6670,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6609,
											"end": 6670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 6670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8491,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6609,
											"end": 6670,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6609,
											"end": 6670,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 6670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8471,
											"end": 8492,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8528,
											"end": 8530,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 8508,
											"end": 8526,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8508,
											"end": 8526,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8508,
											"end": 8526,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8531,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8582,
											"name": "PUSH",
											"source": 9,
											"value": "57726F6E6720616D6F756E747300000000000000000000000000000000000000"
										},
										{
											"begin": 8547,
											"end": 8565,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8547,
											"end": 8565,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8547,
											"end": 8565,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8540,
											"end": 8583,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8600,
											"end": 8618,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8600,
											"end": 8618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6609,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 8461,
											"end": 8624,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6609,
											"end": 6670,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 6609,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6762,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6757,
											"end": 7759,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 6757,
											"end": 7759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 6775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 6796,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 7759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 6757,
											"end": 7759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6817,
											"end": 6848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6865,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 6865,
											"end": 6866,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6869,
											"end": 6870,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6865,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6865,
											"end": 6870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6865,
											"end": 6870,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 6865,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6914,
											"end": 6931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6914,
											"end": 6931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6955,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6851,
											"end": 6871,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6914,
											"end": 6931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6914,
											"end": 6931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6914,
											"end": 6931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6942,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 6907,
											"end": 6942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 6907,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6971,
											"end": 7051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 7014,
											"end": 7024,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7034,
											"end": 7038,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7047,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7048,
											"end": 7049,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6971,
											"end": 7051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6971,
											"end": 7051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6971,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 6971,
											"end": 7051,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6971,
											"end": 7051,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 6971,
											"end": 7051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7123,
											"end": 7127,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7065,
											"end": 7076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 7079,
											"end": 7146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7145,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7103,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7086,
											"end": 7103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7114,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 7079,
											"end": 7114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 7079,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7079,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7079,
											"end": 7146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7079,
											"end": 7146,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 7079,
											"end": 7146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7065,
											"end": 7146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7065,
											"end": 7146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7195,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7183,
											"end": 7195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7179,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7195,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 7160,
											"end": 7532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7251,
											"end": 7266,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7251,
											"end": 7266,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 7240,
											"end": 7267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7246,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7240,
											"end": 7267,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7240,
											"end": 7267,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 7240,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7237,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7215,
											"end": 7237,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7267,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 7160,
											"end": 7532,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7532,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 7160,
											"end": 7532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7326,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7326,
											"end": 7338,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7306,
											"end": 7323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7306,
											"end": 7323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7326,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 7326,
											"end": 7359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7343,
											"end": 7358,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 7326,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7326,
											"end": 7359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7326,
											"end": 7359,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 7326,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7306,
											"end": 7359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7306,
											"end": 7359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7377,
											"end": 7393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7396,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 7410,
											"end": 7421,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7432,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7410,
											"end": 7432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7410,
											"end": 7432,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7396,
											"end": 7405,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7396,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7396,
											"end": 7409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7396,
											"end": 7433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7396,
											"end": 7433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7396,
											"end": 7433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7396,
											"end": 7433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7396,
											"end": 7433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7396,
											"end": 7433,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 7396,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7501,
											"end": 7516,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7501,
											"end": 7516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7377,
											"end": 7433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7377,
											"end": 7433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7476,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 7476,
											"end": 7517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 7476,
											"end": 7482,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7377,
											"end": 7433,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7476,
											"end": 7517,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 7476,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7473,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7451,
											"end": 7473,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7517,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7160,
											"end": 7532,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 7160,
											"end": 7532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7571,
											"end": 7588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7571,
											"end": 7588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7608,
											"end": 7612,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7546,
											"end": 7561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7546,
											"end": 7561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7571,
											"end": 7588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7571,
											"end": 7588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7571,
											"end": 7588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7599,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 7564,
											"end": 7599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 7564,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 7614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 7614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 7674,
											"end": 7689,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7674,
											"end": 7689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7662,
											"end": 7673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7662,
											"end": 7690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7662,
											"end": 7690,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 7662,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7647,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7658,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7636,
											"end": 7658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7690,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 7628,
											"end": 7710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7628,
											"end": 7710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7710,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7628,
											"end": 7710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9896,
											"end": 9898,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7628,
											"end": 7710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7628,
											"end": 7710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9878,
											"end": 9899,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9935,
											"end": 9937,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 9915,
											"end": 9933,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9915,
											"end": 9933,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9915,
											"end": 9933,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9908,
											"end": 9938,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9974,
											"end": 9991,
											"name": "PUSH",
											"source": 9,
											"value": "52657761726420746F6F20686967680000000000000000000000000000000000"
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9947,
											"end": 9992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10009,
											"end": 10027,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10009,
											"end": 10027,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7628,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 9868,
											"end": 10033,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7628,
											"end": 7710,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 7628,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7729,
											"end": 7748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7729,
											"end": 7748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11308,
											"end": 11333,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11333,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11333,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7729,
											"end": 7748,
											"name": "PUSH",
											"source": 0,
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 7729,
											"end": 7748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11298,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7729,
											"end": 7748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7729,
											"end": 7748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7729,
											"end": 7748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7729,
											"end": 7748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7729,
											"end": 7748,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7729,
											"end": 7748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7729,
											"end": 7748,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 7759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 7759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 7759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 7759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 6757,
											"end": 7759,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 7759,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 6757,
											"end": 7759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7786,
											"end": 7801,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 7769,
											"end": 7783,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7769,
											"end": 7801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7769,
											"end": 7801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7769,
											"end": 7801,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7846,
											"end": 7861,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7846,
											"end": 7861,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 7826,
											"end": 7862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7826,
											"end": 7862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7826,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 7826,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7823,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7811,
											"end": 7862,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6526,
											"end": 7913,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10685,
											"end": 10988,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 10685,
											"end": 10988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9177,
											"end": 9179,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9189,
											"end": 9219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9289,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9228,
											"end": 9290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 9149,
											"end": 9331,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10769,
											"end": 10770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11072,
											"end": 11104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 11107,
											"end": 11121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11072,
											"end": 11123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11072,
											"end": 11123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 11175,
											"end": 11182,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11168,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 11210,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11193,
											"end": 11207,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11193,
											"end": 11236,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11263,
											"end": 11264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11353,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11306,
											"end": 11337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 11354,
											"end": 11355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11358,
											"end": 11359,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11427,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11541,
											"end": 11542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11494,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11543,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11630,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11631,
											"end": 11632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11631,
											"end": 11632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11584,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11633,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10833,
											"end": 10837,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10783,
											"end": 10798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10824,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10801,
											"end": 10824,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10824,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 10801,
											"end": 10824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 10801,
											"end": 10839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10783,
											"end": 10839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10783,
											"end": 10839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10857,
											"end": 10864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10868,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10849,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 10849,
											"end": 10897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10849,
											"end": 10897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10849,
											"end": 10897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10849,
											"end": 10897,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10849,
											"end": 10897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10849,
											"end": 10897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11011,
											"end": 11013,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10849,
											"end": 10897,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10849,
											"end": 10897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10849,
											"end": 10897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10993,
											"end": 11014,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11052,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 11030,
											"end": 11048,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11030,
											"end": 11048,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11023,
											"end": 11053,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11089,
											"end": 11115,
											"name": "PUSH",
											"source": 9,
											"value": "436F6E747261637420686F6C6473206E6F20746F6B656E730000000000000000"
										},
										{
											"begin": 11069,
											"end": 11087,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11069,
											"end": 11087,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11069,
											"end": 11087,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11062,
											"end": 11116,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10849,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10983,
											"end": 11157,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10849,
											"end": 10897,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 10849,
											"end": 10897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10914,
											"end": 10919,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10929,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10907,
											"end": 10929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10929,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 10930,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10930,
											"end": 10937,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 10930,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3438,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3384,
											"end": 3439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3439,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3439,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3440,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3449,
											"end": 3483,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3449,
											"end": 3483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3449,
											"end": 3483,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3357,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3339,
											"end": 3357,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 10975,
											"end": 10980,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10957,
											"end": 10981,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10957,
											"end": 10981,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 10957,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 11684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1311,
											"end": 1312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1311,
											"end": 1312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10685,
											"end": 10988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10988,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9177,
											"end": 9179,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9189,
											"end": 9219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9289,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9228,
											"end": 9290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 9149,
											"end": 9331,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1986,
											"end": 2115,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1986,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2043,
											"end": 2050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2107,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2095,
											"end": 2107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 2069,
											"end": 2108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2069,
											"end": 2108,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 2069,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2115,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3221,
											"end": 3247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3240,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3221,
											"end": 3247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3221,
											"end": 3247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3221,
											"end": 3247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3273,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 3261,
											"end": 3273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 3257,
											"end": 3647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3301,
											"end": 3321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3301,
											"end": 3321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3301,
											"end": 3321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3321,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3342,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3301,
											"end": 3342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3342,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3342,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3257,
											"end": 3647,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 3257,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 3443,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 3609,
											"end": 3621,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 3609,
											"end": 3621,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3582,
											"end": 3586,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3443,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 3528,
											"end": 3541,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3547,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3528,
											"end": 3559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 3491,
											"end": 3505,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3491,
											"end": 3505,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 3443,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3443,
											"end": 3469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3443,
											"end": 3506,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 3443,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3443,
											"end": 3560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3443,
											"end": 3622,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 3443,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3393,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3380,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3380,
											"end": 3400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3400,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3421,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3380,
											"end": 3421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3421,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3380,
											"end": 3636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3380,
											"end": 3636,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 3380,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3636,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3126,
											"end": 3653,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4947,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4947,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10653,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10654,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10690,
											"end": 10692,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10670,
											"end": 10688,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10670,
											"end": 10688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10670,
											"end": 10688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10663,
											"end": 10693,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10729,
											"end": 10762,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10702,
											"end": 10763,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10780,
											"end": 10798,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10780,
											"end": 10798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 10623,
											"end": 10804,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5023,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 11107,
											"end": 11121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11072,
											"end": 11123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11072,
											"end": 11123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 11175,
											"end": 11182,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11168,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 11210,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11193,
											"end": 11207,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11193,
											"end": 11236,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11263,
											"end": 11264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11353,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11306,
											"end": 11337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 11354,
											"end": 11355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11358,
											"end": 11359,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11427,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11541,
											"end": 11542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11494,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11543,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11630,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11631,
											"end": 11632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11631,
											"end": 11632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11584,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11633,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5052,
											"end": 5053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5049,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5043,
											"end": 5053,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5035,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 5035,
											"end": 5072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5035,
											"end": 5072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5035,
											"end": 5072,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5035,
											"end": 5072,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5035,
											"end": 5072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5035,
											"end": 5072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6686,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5035,
											"end": 5072,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5035,
											"end": 5072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5035,
											"end": 5072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6666,
											"end": 6687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6723,
											"end": 6725,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 6703,
											"end": 6721,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6703,
											"end": 6721,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6703,
											"end": 6721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6696,
											"end": 6726,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6778,
											"name": "PUSH",
											"source": 9,
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 6742,
											"end": 6760,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6742,
											"end": 6760,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6742,
											"end": 6760,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 6779,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6814,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6796,
											"end": 6814,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5035,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6656,
											"end": 6820,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5035,
											"end": 5072,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 5035,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5119,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5107,
											"end": 5119,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5142,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5082,
											"end": 5104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5119,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5107,
											"end": 5119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5129,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5107,
											"end": 5129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 5107,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5166,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5154,
											"end": 5166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5082,
											"end": 5144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5082,
											"end": 5144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5154,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 5154,
											"end": 5218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5166,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5154,
											"end": 5166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5194,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5208,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 5217,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 5154,
											"end": 5218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5154,
											"end": 5218,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 5154,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5261,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5249,
											"end": 5261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5284,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5261,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5249,
											"end": 5261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5271,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5249,
											"end": 5271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 5249,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5296,
											"end": 5314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5317,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 5228,
											"end": 5286,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5332,
											"end": 5346,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5317,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5317,
											"end": 5347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5317,
											"end": 5347,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 5317,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5384,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 5372,
											"end": 5384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5372,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 5372,
											"end": 5400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5372,
											"end": 5400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5372,
											"end": 5400,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 5372,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5369,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 5357,
											"end": 5400,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 5454,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5443,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 5434,
											"end": 5471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5434,
											"end": 5471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5434,
											"end": 5471,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 5434,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5420,
											"end": 5430,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 5410,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5410,
											"end": 5431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5410,
											"end": 5431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5431,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5471,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5512,
											"name": "PUSH",
											"source": 0,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 5486,
											"end": 5512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 5486,
											"end": 5512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5511,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 11308,
											"end": 11333,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11333,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11296,
											"end": 11298,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11263,
											"end": 11339,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5512,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 5486,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5486,
											"end": 5512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5512,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4947,
											"end": 5519,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3659,
											"end": 3949,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3659,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3727,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3739,
											"end": 3766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3739,
											"end": 3806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3739,
											"end": 3806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 3827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3816,
											"end": 3919,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 3816,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3833,
											"end": 3834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3833,
											"end": 3855,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3816,
											"end": 3919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3816,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3816,
											"end": 3919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3901,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 3902,
											"end": 3903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3902,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3902,
											"end": 3907,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3902,
											"end": 3907,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 3902,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3884,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3857,
											"end": 3860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3857,
											"end": 3860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3857,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 3857,
											"end": 3860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3857,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3857,
											"end": 3860,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3857,
											"end": 3860,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 3857,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3857,
											"end": 3860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3857,
											"end": 3860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3857,
											"end": 3860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3816,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 3816,
											"end": 3919,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 3076,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2268,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2331,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2343,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2383,
											"end": 2401,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 2416,
											"end": 2428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2433,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 3046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 2412,
											"end": 3046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2581,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 2449,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2470,
											"end": 2488,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2470,
											"end": 2488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2488,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2449,
											"end": 2581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2449,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2449,
											"end": 2581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2538,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2525,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 2539,
											"end": 2540,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2539,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2539,
											"end": 2544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2539,
											"end": 2544,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 2539,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 2545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 2545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2545,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2566,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2525,
											"end": 2566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2520,
											"end": 2521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 2490,
											"end": 2493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2490,
											"end": 2493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2490,
											"end": 2493,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 2490,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2449,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 2449,
											"end": 2581,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 3046,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 2412,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 3036,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 2611,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2632,
											"end": 2650,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 3036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2611,
											"end": 3036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2722,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2675,
											"end": 2706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 2723,
											"end": 2724,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2723,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2723,
											"end": 2728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2723,
											"end": 2728,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 2723,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2709,
											"end": 2729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2709,
											"end": 2729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2709,
											"end": 2729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2709,
											"end": 2729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2709,
											"end": 2729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2709,
											"end": 2729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2709,
											"end": 2729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2709,
											"end": 2729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2729,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 2817,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 2990,
											"end": 3002,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 2990,
											"end": 3002,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2959,
											"end": 2963,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2817,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 2910,
											"end": 2921,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2932,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2910,
											"end": 2932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 2869,
											"end": 2883,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2869,
											"end": 2883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 2817,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2817,
											"end": 3003,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 2817,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 2791,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2759,
											"end": 2791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 2791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 2791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 2791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2759,
											"end": 3021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2759,
											"end": 3021,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 2759,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2753,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2755,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 3021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2652,
											"end": 2655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 2652,
											"end": 2655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2652,
											"end": 2655,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2652,
											"end": 2655,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 2652,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 2611,
											"end": 3036,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8948,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7919,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9177,
											"end": 9179,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9189,
											"end": 9219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9289,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9228,
											"end": 9290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 9149,
											"end": 9331,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8010,
											"end": 8011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11072,
											"end": 11104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 11107,
											"end": 11121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11072,
											"end": 11123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11072,
											"end": 11123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 11175,
											"end": 11182,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11168,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 11210,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 11210,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11193,
											"end": 11207,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11193,
											"end": 11236,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11263,
											"end": 11264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11353,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11306,
											"end": 11337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 11354,
											"end": 11355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11358,
											"end": 11359,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11360,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11374,
											"end": 11427,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11541,
											"end": 11542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11494,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11543,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11630,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11631,
											"end": 11632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11631,
											"end": 11632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11584,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11612,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11633,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 11441,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8032,
											"end": 8038,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8032,
											"end": 8045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8032,
											"end": 8067,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 8024,
											"end": 8092,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8024,
											"end": 8092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8092,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8024,
											"end": 8092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8140,
											"end": 8142,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8024,
											"end": 8092,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8024,
											"end": 8092,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8143,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8181,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 8159,
											"end": 8177,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8159,
											"end": 8177,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8159,
											"end": 8177,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8152,
											"end": 8182,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8218,
											"end": 8240,
											"name": "PUSH",
											"source": 9,
											"value": "57726F6E672072657761726420616D6F756E7473000000000000000000000000"
										},
										{
											"begin": 8198,
											"end": 8216,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8198,
											"end": 8216,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8198,
											"end": 8216,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8191,
											"end": 8241,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8258,
											"end": 8276,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8258,
											"end": 8276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 8112,
											"end": 8282,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8092,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 8024,
											"end": 8092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8107,
											"end": 8113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8102,
											"end": 8838,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 8102,
											"end": 8838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8119,
											"end": 8120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8119,
											"end": 8141,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8102,
											"end": 8838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8102,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 8102,
											"end": 8838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8162,
											"end": 8193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8196,
											"end": 8209,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8162,
											"end": 8193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 8210,
											"end": 8211,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8215,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8210,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 8210,
											"end": 8215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8210,
											"end": 8215,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 8210,
											"end": 8215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8196,
											"end": 8216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8196,
											"end": 8216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8196,
											"end": 8216,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8196,
											"end": 8216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8196,
											"end": 8216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8196,
											"end": 8216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8196,
											"end": 8216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8196,
											"end": 8216,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8196,
											"end": 8216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8196,
											"end": 8216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8196,
											"end": 8216,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8162,
											"end": 8216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8162,
											"end": 8216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8265,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8253,
											"end": 8265,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8249,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8265,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 8230,
											"end": 8608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 8324,
											"end": 8339,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8324,
											"end": 8339,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8317,
											"end": 8318,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8310,
											"end": 8323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8340,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8310,
											"end": 8340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8310,
											"end": 8340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8310,
											"end": 8340,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 8310,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8307,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8285,
											"end": 8307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8340,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 8230,
											"end": 8608,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8608,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 8230,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8399,
											"end": 8411,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8399,
											"end": 8411,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8379,
											"end": 8396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8379,
											"end": 8396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8416,
											"end": 8431,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 8399,
											"end": 8415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8379,
											"end": 8432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8379,
											"end": 8432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8450,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8469,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 8483,
											"end": 8494,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8505,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8483,
											"end": 8505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8505,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8469,
											"end": 8478,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8469,
											"end": 8482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 8469,
											"end": 8482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8469,
											"end": 8506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8469,
											"end": 8506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8469,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8469,
											"end": 8506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8469,
											"end": 8506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8469,
											"end": 8506,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 8469,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8450,
											"end": 8506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8450,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 8577,
											"end": 8592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8577,
											"end": 8592,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 8563,
											"end": 8571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8555,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 8556,
											"end": 8557,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8549,
											"end": 8562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8549,
											"end": 8572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8549,
											"end": 8593,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 8549,
											"end": 8593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8593,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8230,
											"end": 8608,
											"name": "tag",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 8230,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8647,
											"end": 8664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8647,
											"end": 8664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8688,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8622,
											"end": 8637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8622,
											"end": 8637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8647,
											"end": 8664,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8647,
											"end": 8664,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8647,
											"end": 8664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8675,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8640,
											"end": 8675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 8640,
											"end": 8690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8622,
											"end": 8690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8622,
											"end": 8690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 8750,
											"end": 8765,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8750,
											"end": 8765,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8738,
											"end": 8749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8766,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8766,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8738,
											"end": 8766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8766,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8738,
											"end": 8766,
											"name": "tag",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 8738,
											"end": 8766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8712,
											"end": 8723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8712,
											"end": 8734,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8712,
											"end": 8734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8712,
											"end": 8734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8712,
											"end": 8766,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8712,
											"end": 8766,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8704,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 8704,
											"end": 8786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8704,
											"end": 8786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8704,
											"end": 8786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8704,
											"end": 8786,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8704,
											"end": 8786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8704,
											"end": 8786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9896,
											"end": 9898,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8704,
											"end": 8786,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8704,
											"end": 8786,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8704,
											"end": 8786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9878,
											"end": 9899,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9935,
											"end": 9937,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 9915,
											"end": 9933,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9915,
											"end": 9933,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9915,
											"end": 9933,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9908,
											"end": 9938,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9974,
											"end": 9991,
											"name": "PUSH",
											"source": 9,
											"value": "52657761726420746F6F20686967680000000000000000000000000000000000"
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9947,
											"end": 9992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10009,
											"end": 10027,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10009,
											"end": 10027,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8704,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 9868,
											"end": 10033,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8704,
											"end": 8786,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 8704,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8827,
											"name": "PUSH",
											"source": 0,
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 8817,
											"end": 8823,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8824,
											"end": 8825,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8805,
											"end": 8827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 8805,
											"end": 8827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11308,
											"end": 11333,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11333,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11296,
											"end": 11298,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11263,
											"end": 11339,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 8827,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 8805,
											"end": 8827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8805,
											"end": 8827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8827,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 8102,
											"end": 8838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8102,
											"end": 8838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8143,
											"end": 8146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8143,
											"end": 8146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8143,
											"end": 8146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 8143,
											"end": 8146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8143,
											"end": 8146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8143,
											"end": 8146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8143,
											"end": 8146,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 8143,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8143,
											"end": 8146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8143,
											"end": 8146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8143,
											"end": 8146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8102,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 8102,
											"end": 8838,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8102,
											"end": 8838,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 8102,
											"end": 8838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8865,
											"end": 8880,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 8848,
											"end": 8862,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8848,
											"end": 8880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8848,
											"end": 8880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8848,
											"end": 8880,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8940,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8925,
											"end": 8940,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 8905,
											"end": 8941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8865,
											"end": 8880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8905,
											"end": 8941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8905,
											"end": 8941,
											"name": "tag",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 8905,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8890,
											"end": 8902,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8890,
											"end": 8941,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7919,
											"end": 8948,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6386,
											"end": 6480,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6386,
											"end": 6480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6440,
											"end": 6450,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6430,
											"end": 6451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6430,
											"end": 6451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6430,
											"end": 6451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6430,
											"end": 6451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6430,
											"end": 6439,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 6430,
											"end": 6451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6430,
											"end": 6451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6430,
											"end": 6451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6430,
											"end": 6451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6430,
											"end": 6451,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6430,
											"end": 6451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6421,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 6421,
											"end": 6452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6421,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6421,
											"end": 6452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6421,
											"end": 6452,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 6421,
											"end": 6452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6462,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 6462,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 6462,
											"end": 6473,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "497"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9177,
											"end": 9179,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9159,
											"end": 9180,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9189,
											"end": 9219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9289,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9235,
											"end": 9253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9228,
											"end": 9290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 9149,
											"end": 9331,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "497"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "500"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5933,
											"end": 5935,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5936,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5972,
											"end": 5974,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5945,
											"end": 5975,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6011,
											"end": 6045,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5991,
											"end": 6009,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5991,
											"end": 6009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5991,
											"end": 6009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5984,
											"end": 6046,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6090,
											"name": "PUSH",
											"source": 9,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6062,
											"end": 6080,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6062,
											"end": 6080,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6062,
											"end": 6080,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6055,
											"end": 6091,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6108,
											"end": 6127,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6108,
											"end": 6127,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5905,
											"end": 6133,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "tag",
											"source": 2,
											"value": "500"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "503"
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "tag",
											"source": 2,
											"value": "503"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 699,
											"end": 904,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 699,
											"end": 904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 838,
											"end": 896,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3396,
											"end": 3438,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3384,
											"end": 3439,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3439,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 838,
											"end": 896,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 838,
											"end": 896,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3440,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3449,
											"end": 3483,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3449,
											"end": 3483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3449,
											"end": 3483,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 811,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 811,
											"end": 897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 831,
											"end": 836,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 831,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 861,
											"end": 884,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 884,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3357,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3339,
											"end": 3357,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 838,
											"end": 896,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 838,
											"end": 896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 838,
											"end": 896,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 838,
											"end": 896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 838,
											"end": 896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 838,
											"end": 896,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 838,
											"end": 896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 838,
											"end": 896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 811,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 811,
											"end": 897,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 811,
											"end": 897,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 811,
											"end": 897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 699,
											"end": 904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 699,
											"end": 904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 699,
											"end": 904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 699,
											"end": 904,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 910,
											"end": 1151,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 910,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1143,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3001,
											"end": 3043,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3070,
											"end": 3085,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3085,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3085,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1143,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1075,
											"end": 1143,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3086,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3137,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3137,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3102,
											"end": 3120,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3102,
											"end": 3120,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3102,
											"end": 3120,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3095,
											"end": 3138,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3172,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3154,
											"end": 3172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3172,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3181,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3181,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1048,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 1048,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1068,
											"end": 1073,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1068,
											"end": 1073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1125,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1098,
											"end": 1125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 2946,
											"end": 3187,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1048,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 1048,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 910,
											"end": 1151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 910,
											"end": 1151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 910,
											"end": 1151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 910,
											"end": 1151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 910,
											"end": 1151,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2336,
											"end": 2352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 446,
											"end": 550,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 446,
											"end": 550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 504,
											"end": 511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 535,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 530,
											"end": 531,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 530,
											"end": 535,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 530,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 530,
											"end": 543,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 542,
											"end": 543,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 530,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 530,
											"end": 543,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 530,
											"end": 543,
											"name": "tag",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 530,
											"end": 543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 538,
											"end": 539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 538,
											"end": 539,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 446,
											"end": 550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 446,
											"end": 550,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3205,
											"end": 3911,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 3205,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3647,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 3678,
											"end": 3682,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "PUSH",
											"source": 7,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3658,
											"end": 3663,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3677,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3650,
											"end": 3677,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 3650,
											"end": 3677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3750,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3750,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3719,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3733,
											"end": 3754,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3729,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 3729,
											"end": 3905,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3809,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 3809,
											"end": 3894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3809,
											"end": 3894,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3894,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3809,
											"end": 3894,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3809,
											"end": 3894,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3809,
											"end": 3894,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10240,
											"end": 10242,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3894,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3809,
											"end": 3894,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3809,
											"end": 3894,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10222,
											"end": 10243,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10279,
											"end": 10281,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 10259,
											"end": 10277,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10259,
											"end": 10277,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10259,
											"end": 10277,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10252,
											"end": 10282,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10318,
											"end": 10352,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 10298,
											"end": 10316,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10298,
											"end": 10316,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10298,
											"end": 10316,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10353,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10389,
											"end": 10401,
											"name": "PUSH",
											"source": 9,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 10369,
											"end": 10387,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10369,
											"end": 10387,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10369,
											"end": 10387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10362,
											"end": 10402,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10419,
											"end": 10438,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10419,
											"end": 10438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3809,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 10212,
											"end": 10444,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 4069,
											"name": "tag",
											"source": 5,
											"value": "529"
										},
										{
											"begin": 3846,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 3991,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4010,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "536"
										},
										{
											"begin": 4032,
											"end": 4038,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4044,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4046,
											"end": 4047,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4061,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "537"
										},
										{
											"begin": 4010,
											"end": 4062,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4010,
											"end": 4062,
											"name": "tag",
											"source": 5,
											"value": "536"
										},
										{
											"begin": 4010,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4062,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 4069,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3846,
											"end": 4069,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4933,
											"end": 5432,
											"name": "tag",
											"source": 5,
											"value": "537"
										},
										{
											"begin": 4933,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5155,
											"end": 5160,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 5130,
											"end": 5160,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5130,
											"end": 5160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "539"
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7385,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7365,
											"end": 7386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7422,
											"end": 7424,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 7402,
											"end": 7420,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7402,
											"end": 7420,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7402,
											"end": 7420,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7395,
											"end": 7425,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7461,
											"end": 7495,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7434,
											"end": 7496,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7540,
											"name": "PUSH",
											"source": 9,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7505,
											"end": 7541,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7558,
											"end": 7577,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7558,
											"end": 7577,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 7355,
											"end": 7583,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "tag",
											"source": 5,
											"value": "539"
										},
										{
											"begin": 5122,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1469,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1450,
											"end": 1469,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1469,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1469,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "544"
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9538,
											"end": 9540,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9520,
											"end": 9541,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9577,
											"end": 9579,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 9557,
											"end": 9575,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9557,
											"end": 9575,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9557,
											"end": 9575,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9550,
											"end": 9580,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9616,
											"end": 9647,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9589,
											"end": 9648,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 9510,
											"end": 9689,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "tag",
											"source": 5,
											"value": "544"
										},
										{
											"begin": 5213,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5285,
											"end": 5297,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5322,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5332,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5337,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5326,
											"end": 5337,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5345,
											"end": 5350,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5356,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "547"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "548"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "tag",
											"source": 5,
											"value": "547"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "551"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "550"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "tag",
											"source": 5,
											"value": "551"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "tag",
											"source": 5,
											"value": "550"
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5357,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5357,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "552"
										},
										{
											"begin": 5391,
											"end": 5398,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5410,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5424,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "553"
										},
										{
											"begin": 5374,
											"end": 5425,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5374,
											"end": 5425,
											"name": "tag",
											"source": 5,
											"value": "552"
										},
										{
											"begin": 5374,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5367,
											"end": 5425,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 4933,
											"end": 5432,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4933,
											"end": 5432,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7546,
											"end": 8238,
											"name": "tag",
											"source": 5,
											"value": "553"
										},
										{
											"begin": 7546,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7692,
											"end": 7704,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7720,
											"end": 7727,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8232,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "556"
										},
										{
											"begin": 7716,
											"end": 8232,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7750,
											"end": 7760,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7743,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 7743,
											"end": 7760,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 8232,
											"name": "tag",
											"source": 5,
											"value": "556"
										},
										{
											"begin": 7716,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7861,
											"end": 7878,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7861,
											"end": 7878,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7861,
											"end": 7882,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7857,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "558"
										},
										{
											"begin": 7857,
											"end": 8222,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8055,
											"end": 8065,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8049,
											"end": 8066,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8115,
											"end": 8130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8102,
											"end": 8112,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8100,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8094,
											"end": 8113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8087,
											"end": 8131,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8004,
											"end": 8149,
											"name": "tag",
											"source": 5,
											"value": "558"
										},
										{
											"begin": 8004,
											"end": 8149,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8194,
											"end": 8206,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "561"
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 343,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 14,
											"end": 343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 191,
											"end": 200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 241,
											"end": 283,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 234,
											"end": 239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 230,
											"end": 284,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 220,
											"end": 285,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 210,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 304,
											"end": 310,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 296,
											"end": 302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 289,
											"end": 311,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 348,
											"end": 1578,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 348,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 432,
											"end": 438,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 465,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 506,
											"end": 508,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 494,
											"end": 503,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 485,
											"end": 492,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 481,
											"end": 504,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 477,
											"end": 509,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 474,
											"end": 476,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 474,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 474,
											"end": 476,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 519,
											"end": 525,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 512,
											"end": 534,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 474,
											"end": 476,
											"name": "tag",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 474,
											"end": 476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 572,
											"end": 581,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 559,
											"end": 582,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 601,
											"end": 619,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 642,
											"end": 644,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 634,
											"end": 640,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 631,
											"end": 645,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 628,
											"end": 630,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 628,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 628,
											"end": 630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 663,
											"end": 669,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 655,
											"end": 661,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 648,
											"end": 670,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 628,
											"end": 630,
											"name": "tag",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 628,
											"end": 630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 706,
											"end": 712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 695,
											"end": 704,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 691,
											"end": 713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 681,
											"end": 713,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 681,
											"end": 713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 751,
											"end": 758,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 744,
											"end": 748,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 740,
											"end": 742,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 736,
											"end": 749,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 732,
											"end": 759,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 722,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 722,
											"end": 724,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 778,
											"end": 784,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 770,
											"end": 776,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 763,
											"end": 785,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 722,
											"end": 724,
											"name": "tag",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 722,
											"end": 724,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 819,
											"end": 821,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 806,
											"end": 822,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 841,
											"end": 843,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 837,
											"end": 839,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 834,
											"end": 844,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 831,
											"end": 833,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 831,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 831,
											"end": 833,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "tag",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 893,
											"end": 895,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 886,
											"end": 896,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 925,
											"end": 927,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 928,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1050,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 979,
											"end": 981,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 975,
											"end": 977,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 971,
											"end": 982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 967,
											"end": 1051,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 955,
											"end": 1052,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1108,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1100,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1109,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1084,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 1080,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1085,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1064,
											"end": 1110,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "tag",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 1113,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1151,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1142,
											"end": 1164,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1199,
											"end": 1217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1199,
											"end": 1217,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1199,
											"end": 1217,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1248,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1248,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1248,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1309,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1309,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1309,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1314,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1291,
											"end": 1324,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1288,
											"end": 1290,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 1288,
											"end": 1290,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1327,
											"end": 1349,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1290,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 1288,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1375,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1360,
											"end": 1375,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1360,
											"end": 1375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1547,
											"name": "tag",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 1384,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1396,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1547,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 1384,
											"end": 1547,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1472,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1472,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1473,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1473,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1416,
											"end": 1417,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1493,
											"end": 1505,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1493,
											"end": 1505,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1493,
											"end": 1505,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1493,
											"end": 1505,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 1384,
											"end": 1547,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1547,
											"name": "tag",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 1384,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1566,
											"end": 1572,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 443,
											"end": 1578,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 443,
											"end": 1578,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1583,
											"end": 1880,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 1583,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1705,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1691,
											"end": 1700,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1682,
											"end": 1689,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1701,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1674,
											"end": 1706,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1671,
											"end": 1673,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1671,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 1671,
											"end": 1673,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1724,
											"end": 1730,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1722,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1731,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1671,
											"end": 1673,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 1671,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1761,
											"end": 1770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1755,
											"end": 1771,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 1819,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1807,
											"end": 1820,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1821,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 1798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1822,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1780,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 1780,
											"end": 1782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1841,
											"end": 1847,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1848,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 2075,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1885,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 1950,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 1994,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1976,
											"end": 1983,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 1995,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1968,
											"end": 2000,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1965,
											"end": 1967,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1965,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 1965,
											"end": 1967,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2018,
											"end": 2024,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2010,
											"end": 2016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2025,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1965,
											"end": 1967,
											"name": "tag",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 1965,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2046,
											"end": 2069,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2046,
											"end": 2069,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 2075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1955,
											"end": 2075,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2080,
											"end": 2274,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 2080,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2191,
											"end": 2200,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2182,
											"end": 2189,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2201,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2174,
											"end": 2206,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2231,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "tag",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2274,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2279,
											"end": 2553,
											"name": "tag",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 2279,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2506,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2496,
											"end": 2500,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2488,
											"end": 2494,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2501,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "tag",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2416,
											"end": 2553,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2416,
											"end": 2553,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3494,
											"end": 4393,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3494,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3719,
											"end": 3721,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 3792,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3792,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3792,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 3854,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 3854,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3762,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3863,
											"end": 3885,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3863,
											"end": 3885,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3863,
											"end": 3885,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3694,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3694,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3719,
											"end": 3721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 3906,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3904,
											"end": 3906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3978,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3978,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3978,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3694,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4367,
											"name": "tag",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 4009,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4023,
											"end": 4029,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4017,
											"end": 4030,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4367,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 4009,
											"end": 4367,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4095,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4095,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4133,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4133,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4177,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4120,
											"end": 4178,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4230,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4213,
											"end": 4231,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4211,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4211,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4211,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4192,
											"end": 4232,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4272,
											"end": 4283,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4272,
											"end": 4283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4264,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4264,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4245,
											"end": 4285,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4314,
											"end": 4318,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4305,
											"end": 4319,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4305,
											"end": 4319,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4305,
											"end": 4319,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4305,
											"end": 4319,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4045,
											"end": 4046,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4038,
											"end": 4047,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 4009,
											"end": 4367,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4367,
											"name": "tag",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 4009,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4384,
											"end": 4387,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4387,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 3699,
											"end": 4393,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3699,
											"end": 4393,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4398,
											"end": 5033,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4398,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4571,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4621,
											"end": 4642,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4621,
											"end": 4642,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4621,
											"end": 4642,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4691,
											"end": 4704,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4691,
											"end": 4704,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4612,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4612,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4612,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 4735,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 4735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 4735,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4540,
											"end": 4544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4571,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4792,
											"end": 4807,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4792,
											"end": 4807,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4792,
											"end": 4807,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4792,
											"end": 4807,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4766,
											"end": 4768,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4544,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4838,
											"end": 5007,
											"name": "tag",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 4838,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4850,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4859,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4838,
											"end": 5007,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4838,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 4838,
											"end": 5007,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4913,
											"end": 4926,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4913,
											"end": 4926,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4927,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4927,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4982,
											"end": 4997,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4982,
											"end": 4997,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4982,
											"end": 4997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4982,
											"end": 4997,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 4959,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 4959,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 4959,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 4959,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4874,
											"end": 4875,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4867,
											"end": 4876,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4838,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 4838,
											"end": 5007,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4838,
											"end": 5007,
											"name": "tag",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 4838,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5024,
											"end": 5027,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5024,
											"end": 5027,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4549,
											"end": 5033,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4549,
											"end": 5033,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5284,
											"end": 5726,
											"name": "tag",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 5284,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5435,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5422,
											"end": 5431,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5396,
											"end": 5400,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5465,
											"end": 5471,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5459,
											"end": 5472,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5508,
											"end": 5514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5505,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5492,
											"end": 5501,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5488,
											"end": 5506,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5481,
											"end": 5515,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 5583,
											"end": 5589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5578,
											"end": 5580,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5576,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5563,
											"end": 5581,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5550,
											"end": 5556,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5546,
											"end": 5561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 5524,
											"end": 5590,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5524,
											"end": 5590,
											"name": "tag",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 5524,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5642,
											"end": 5644,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5630,
											"end": 5645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 5626,
											"end": 5714,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5611,
											"end": 5715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5611,
											"end": 5715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5611,
											"end": 5715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5611,
											"end": 5715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5717,
											"end": 5719,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5607,
											"end": 5720,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5720,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5726,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5405,
											"end": 5726,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11344,
											"end": 11472,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 11344,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11384,
											"end": 11387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11415,
											"end": 11416,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11411,
											"end": 11417,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11405,
											"end": 11418,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11402,
											"end": 11404,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11402,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 11402,
											"end": 11404,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11421,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 11421,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "622"
										},
										{
											"begin": 11421,
											"end": 11439,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11421,
											"end": 11439,
											"name": "tag",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 11421,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11457,
											"end": 11466,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11457,
											"end": 11466,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11392,
											"end": 11472,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11477,
											"end": 11751,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 11477,
											"end": 11751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11517,
											"end": 11518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11543,
											"end": 11544,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11533,
											"end": 11535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "624"
										},
										{
											"begin": 11533,
											"end": 11535,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11655,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11575,
											"end": 11576,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11568,
											"end": 11656,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11679,
											"end": 11683,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 11676,
											"end": 11677,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11669,
											"end": 11684,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11707,
											"end": 11711,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11704,
											"end": 11705,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11697,
											"end": 11712,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11533,
											"end": 11535,
											"name": "tag",
											"source": 9,
											"value": "624"
										},
										{
											"begin": 11533,
											"end": 11535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11736,
											"end": 11745,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11736,
											"end": 11745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11523,
											"end": 11751,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11756,
											"end": 11984,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 11756,
											"end": 11984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11796,
											"end": 11803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11922,
											"end": 11923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11854,
											"end": 11920,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11850,
											"end": 11924,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11847,
											"end": 11848,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11844,
											"end": 11925,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11839,
											"end": 11840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11832,
											"end": 11841,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11825,
											"end": 11842,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11821,
											"end": 11926,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11818,
											"end": 11820,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11818,
											"end": 11820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "627"
										},
										{
											"begin": 11818,
											"end": 11820,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11929,
											"end": 11947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "627"
										},
										{
											"begin": 11929,
											"end": 11947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "622"
										},
										{
											"begin": 11929,
											"end": 11947,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11929,
											"end": 11947,
											"name": "tag",
											"source": 9,
											"value": "627"
										},
										{
											"begin": 11929,
											"end": 11947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11969,
											"end": 11978,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11969,
											"end": 11978,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11808,
											"end": 11984,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11989,
											"end": 12114,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 11989,
											"end": 12114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12029,
											"end": 12033,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12057,
											"end": 12058,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12054,
											"end": 12055,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12059,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12048,
											"end": 12050,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12048,
											"end": 12050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "630"
										},
										{
											"begin": 12048,
											"end": 12050,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12062,
											"end": 12080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "630"
										},
										{
											"begin": 12062,
											"end": 12080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "622"
										},
										{
											"begin": 12062,
											"end": 12080,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12062,
											"end": 12080,
											"name": "tag",
											"source": 9,
											"value": "630"
										},
										{
											"begin": 12062,
											"end": 12080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12099,
											"end": 12108,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12099,
											"end": 12108,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12038,
											"end": 12114,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12119,
											"end": 12377,
											"name": "tag",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 12119,
											"end": 12377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12191,
											"end": 12192,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12201,
											"end": 12314,
											"name": "tag",
											"source": 9,
											"value": "632"
										},
										{
											"begin": 12201,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12215,
											"end": 12221,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12212,
											"end": 12213,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12209,
											"end": 12222,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12201,
											"end": 12314,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12201,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "634"
										},
										{
											"begin": 12201,
											"end": 12314,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12291,
											"end": 12302,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12291,
											"end": 12302,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12291,
											"end": 12302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12272,
											"end": 12283,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12272,
											"end": 12283,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12272,
											"end": 12283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12265,
											"end": 12304,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12237,
											"end": 12239,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12230,
											"end": 12240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12201,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "632"
										},
										{
											"begin": 12201,
											"end": 12314,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12201,
											"end": 12314,
											"name": "tag",
											"source": 9,
											"value": "634"
										},
										{
											"begin": 12201,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12332,
											"end": 12338,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12329,
											"end": 12330,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12326,
											"end": 12339,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12323,
											"end": 12325,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12323,
											"end": 12325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 12323,
											"end": 12325,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12367,
											"end": 12368,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12349,
											"end": 12365,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12365,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12342,
											"end": 12369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12172,
											"end": 12377,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12382,
											"end": 12577,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 12382,
											"end": 12577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12421,
											"end": 12424,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12452,
											"end": 12518,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12445,
											"end": 12450,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12442,
											"end": 12519,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12439,
											"end": 12441,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12439,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "638"
										},
										{
											"begin": 12439,
											"end": 12441,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12522,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "638"
										},
										{
											"begin": 12522,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "622"
										},
										{
											"begin": 12522,
											"end": 12540,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12522,
											"end": 12540,
											"name": "tag",
											"source": 9,
											"value": "638"
										},
										{
											"begin": 12522,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12569,
											"end": 12570,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12558,
											"end": 12571,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12558,
											"end": 12571,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12429,
											"end": 12577,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "tag",
											"source": 9,
											"value": "622"
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12634,
											"end": 12711,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12631,
											"end": 12632,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12624,
											"end": 12712,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 12735,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 12728,
											"end": 12729,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12721,
											"end": 12736,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12755,
											"end": 12759,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12752,
											"end": 12753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12745,
											"end": 12760,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12771,
											"end": 12955,
											"name": "tag",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 12771,
											"end": 12955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12823,
											"end": 12900,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12820,
											"end": 12821,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12813,
											"end": 12901,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12920,
											"end": 12924,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 12917,
											"end": 12918,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12910,
											"end": 12925,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12944,
											"end": 12948,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12941,
											"end": 12942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12934,
											"end": 12949,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addRewardToken(address)": "1c03e6cc",
							"balanceOf(address)": "70a08231",
							"depositRewardTokens(uint256[])": "6a1af3b7",
							"earned(address)": "008cc262",
							"emergencyWithdrawal(address)": "6e353a1d",
							"exit()": "e9fad8ee",
							"getReward()": "3d18b912",
							"getRewardForDuration()": "1c1f78eb",
							"getRewardTokens()": "c4f59f9b",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"notifyRewardAmount(uint256[])": "e71e7f78",
							"owner()": "8da5cb5b",
							"periodFinish()": "ebe2b12b",
							"removeRewardToken(address)": "3d509c97",
							"renounceOwnership()": "715018a6",
							"rewardForToken(address)": "a54f5e0d",
							"rewardPerToken()": "cd3daf9d",
							"rewardsDuration()": "386a9525",
							"stake(uint256)": "a694fc3a",
							"stakingToken()": "72f702f3",
							"totalRewardTokens()": "1b0875a6",
							"totalSupply()": "18160ddd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"rewardTokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"stakingToken_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"addRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"depositRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"emergencyWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerTokenStored\",\"type\":\"uint256\"}],\"internalType\":\"struct MultiRewardsStake.RewardToken[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"reward\",\"type\":\"uint256[]\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"rewardForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewardTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":\"MultiRewardsStake\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol\":{\"keccak256\":\"0x11188afcf3ab365e78d923d9587ef431a2d6b5127e3012bf73057a8d9bad0107\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8b943a0b6431ce7539969ec023d3171880a2994def9c457b58036acdbecd45\",\"dweb:/ipfs/QmPKdSQkEh7tATWvcFXUpyqbLFFUdU1zRRArdZbEC4xgV3\"]},\"github/nobi/staking/contracts/helpers/Context.sol\":{\"keccak256\":\"0x2d9821ede311a3c16183811be8bdc666e88c69d9d50321e3dff025fe7630d373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3719bc7fe267a79e84641b88901b10dbc58d27edaea65b7811d39ca7d2a3e409\",\"dweb:/ipfs/QmRDDpaByM3MhWs61gXmfaxoygifCJhLvguEFDGahhWMfX\"]},\"github/nobi/staking/contracts/helpers/Ownable.sol\":{\"keccak256\":\"0x28adb5f006cef52b73b613db99d0bc113d7b129a021e594dfdcf50225f260b3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3789666515f95aea6d9d3ebdbc25d7434182ba5599a7c2823ddd51bc5b6a0174\",\"dweb:/ipfs/QmSjW9pxWLnwqYKptEVQkxB8UWk99HuDGMZa6NjMBFoy5o\"]},\"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":{\"keccak256\":\"0xd29d3ea88157ac9005430d38c36abbd86ab628fb5cb3c4c3fb91d2a5a09bff51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0397e4f880919b51cc8d787dc31754b87d8d2d72ffc12c3a7b355914906b85d\",\"dweb:/ipfs/QmTA6qAG3vbACNSD1NATLWweKookxM5XqUhu4s12PZmKnU\"]},\"github/nobi/staking/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xb1aff979a5fa6968157ae8d85e0e06b910844c7ab72d0c8f6c90b3a1ef11c729\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eca4b1237dd40467c528de5bcba06ac32bd340c75b1f7e76ee57f0be117e5520\",\"dweb:/ipfs/QmfN76uFXumbuRb9vxHY2gvJCAaN73s9xrebPc1SwYcMfa\"]},\"github/nobi/staking/contracts/libraries/Address.sol\":{\"keccak256\":\"0xc3025aaa95aa8f9e80b9a7f76c40a4b94b60b065bd3bbe3cb0a476e95846d658\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89d75bac0237f5c371a2519ce92fbacf3c4ecdcff4cc9f10a5f3673d82876f56\",\"dweb:/ipfs/QmeTypoZNTYKmSdmKiFvJxwot72RE5Bddi5ssX3heW2xdP\"]},\"github/nobi/staking/contracts/libraries/Math.sol\":{\"keccak256\":\"0x8a903be45bf1d301fe43eea3c02b80dc30fed65e4fa2200cc21c134f36b5ac4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://738b1f2a968bf541334fa08b95c7bc4b14901bc66d808f0706b47902c5501123\",\"dweb:/ipfs/Qma8Z8WUyN5XFacMhjr1aynMT3Bf4zmMTjsHPkEinePBjs\"]},\"github/nobi/staking/contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0xd6354d43d1b73a5e5e3b41a5dce81630a40c27cfc8583cc8bd9f54b3c2f41bc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c590833f8817d434db6335b00e883fa5e05bd902092b14633c5a48c586448f2a\",\"dweb:/ipfs/Qmc6QTygvZ1R8jttToMySHKusEV3BCzsdJiU2VqzoiWBJm\"]},\"github/nobi/staking/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xf2a8aba77f7c47ac2fb29897622e3d3ceaf0dd3c1ef685895242fa9541f27c34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b1704be230acf1d4555a032bcd8b38d48dfe2763ea61ced2fd5e8889036acb2\",\"dweb:/ipfs/QmezxGeADPzpJA8PdSCYHQRDoytY14xY8SkvP9FwMVp54K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1471,
								"contract": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol:MultiRewardsStake",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1363,
								"contract": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol:MultiRewardsStake",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 21,
								"contract": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol:MultiRewardsStake",
								"label": "stakingToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)1584"
							},
							{
								"astId": 23,
								"contract": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol:MultiRewardsStake",
								"label": "periodFinish",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol:MultiRewardsStake",
								"label": "rewardsDuration",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 27,
								"contract": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol:MultiRewardsStake",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 33,
								"contract": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol:MultiRewardsStake",
								"label": "_userRewardPerTokenPaid",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 39,
								"contract": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol:MultiRewardsStake",
								"label": "_rewards",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 41,
								"contract": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol:MultiRewardsStake",
								"label": "_totalRewardTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 46,
								"contract": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol:MultiRewardsStake",
								"label": "_rewardTokens",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_struct(RewardToken)63_storage)"
							},
							{
								"astId": 50,
								"contract": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol:MultiRewardsStake",
								"label": "_rewardTokenToIndex",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 52,
								"contract": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol:MultiRewardsStake",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 56,
								"contract": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol:MultiRewardsStake",
								"label": "_balances",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)1584": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(RewardToken)63_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct MultiRewardsStake.RewardToken)",
								"numberOfBytes": "32",
								"value": "t_struct(RewardToken)63_storage"
							},
							"t_struct(RewardToken)63_storage": {
								"encoding": "inplace",
								"label": "struct MultiRewardsStake.RewardToken",
								"members": [
									{
										"astId": 58,
										"contract": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol:MultiRewardsStake",
										"label": "token",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 60,
										"contract": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol:MultiRewardsStake",
										"label": "rewardRate",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 62,
										"contract": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol:MultiRewardsStake",
										"label": "rewardPerTokenStored",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"github/nobi/staking/contracts/helpers/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github/nobi/staking/contracts/helpers/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"github/nobi/staking/contracts/helpers/Context.sol\":{\"keccak256\":\"0x2d9821ede311a3c16183811be8bdc666e88c69d9d50321e3dff025fe7630d373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3719bc7fe267a79e84641b88901b10dbc58d27edaea65b7811d39ca7d2a3e409\",\"dweb:/ipfs/QmRDDpaByM3MhWs61gXmfaxoygifCJhLvguEFDGahhWMfX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"github/nobi/staking/contracts/helpers/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github/nobi/staking/contracts/helpers/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"github/nobi/staking/contracts/helpers/Context.sol\":{\"keccak256\":\"0x2d9821ede311a3c16183811be8bdc666e88c69d9d50321e3dff025fe7630d373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3719bc7fe267a79e84641b88901b10dbc58d27edaea65b7811d39ca7d2a3e409\",\"dweb:/ipfs/QmRDDpaByM3MhWs61gXmfaxoygifCJhLvguEFDGahhWMfX\"]},\"github/nobi/staking/contracts/helpers/Ownable.sol\":{\"keccak256\":\"0x28adb5f006cef52b73b613db99d0bc113d7b129a021e594dfdcf50225f260b3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3789666515f95aea6d9d3ebdbc25d7434182ba5599a7c2823ddd51bc5b6a0174\",\"dweb:/ipfs/QmSjW9pxWLnwqYKptEVQkxB8UWk99HuDGMZa6NjMBFoy5o\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1363,
								"contract": "github/nobi/staking/contracts/helpers/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol\":{\"keccak256\":\"0xd29d3ea88157ac9005430d38c36abbd86ab628fb5cb3c4c3fb91d2a5a09bff51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0397e4f880919b51cc8d787dc31754b87d8d2d72ffc12c3a7b355914906b85d\",\"dweb:/ipfs/QmTA6qAG3vbACNSD1NATLWweKookxM5XqUhu4s12PZmKnU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1471,
								"contract": "github/nobi/staking/contracts/helpers/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"github/nobi/staking/contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the amount of decimals in the token"
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the amount of decimals in the token\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github/nobi/staking/contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"github/nobi/staking/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xb1aff979a5fa6968157ae8d85e0e06b910844c7ab72d0c8f6c90b3a1ef11c729\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eca4b1237dd40467c528de5bcba06ac32bd340c75b1f7e76ee57f0be117e5520\",\"dweb:/ipfs/QmfN76uFXumbuRb9vxHY2gvJCAaN73s9xrebPc1SwYcMfa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"github/nobi/staking/contracts/libraries/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"github/nobi/staking/contracts/libraries/Address.sol\":179:8240  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"github/nobi/staking/contracts/libraries/Address.sol\":179:8240  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220faf411c963fe59fd6ed4c12a4d73745701acdde495346fffc8b3a4f580a1e11064736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220faf411c963fe59fd6ed4c12a4d73745701acdde495346fffc8b3a4f580a1e11064736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL DELEGATECALL GT 0xC9 PUSH4 0xFE59FD6E 0xD4 0xC1 0x2A 0x4D PUSH20 0x745701ACDDE495346FFFC8B3A4F580A1E1106473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "179:8061:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:8061:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220faf411c963fe59fd6ed4c12a4d73745701acdde495346fffc8b3a4f580a1e11064736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL DELEGATECALL GT 0xC9 PUSH4 0xFE59FD6E 0xD4 0xC1 0x2A 0x4D PUSH20 0x745701ACDDE495346FFFC8B3A4F580A1E1106473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "179:8061:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220faf411c963fe59fd6ed4c12a4d73745701acdde495346fffc8b3a4f580a1e11064736f6c63430008040033",
									".code": [
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github/nobi/staking/contracts/libraries/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"github/nobi/staking/contracts/libraries/Address.sol\":{\"keccak256\":\"0xc3025aaa95aa8f9e80b9a7f76c40a4b94b60b065bd3bbe3cb0a476e95846d658\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89d75bac0237f5c371a2519ce92fbacf3c4ecdcff4cc9f10a5f3673d82876f56\",\"dweb:/ipfs/QmeTypoZNTYKmSdmKiFvJxwot72RE5Bddi5ssX3heW2xdP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"github/nobi/staking/contracts/libraries/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"github/nobi/staking/contracts/libraries/Math.sol\":187:1211  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"github/nobi/staking/contracts/libraries/Math.sol\":187:1211  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bfa44204ac9bbaee49bfb866c2f993553d99fc486ca0d3da4aecb264d7340dd864736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bfa44204ac9bbaee49bfb866c2f993553d99fc486ca0d3da4aecb264d7340dd864736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF LOG4 TIMESTAMP DIV 0xAC SWAP12 0xBA 0xEE 0x49 0xBF 0xB8 PUSH7 0xC2F993553D99FC 0x48 PUSH13 0xA0D3DA4AECB264D7340DD86473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "187:1024:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;187:1024:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bfa44204ac9bbaee49bfb866c2f993553d99fc486ca0d3da4aecb264d7340dd864736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF LOG4 TIMESTAMP DIV 0xAC SWAP12 0xBA 0xEE 0x49 0xBF 0xB8 PUSH7 0xC2F993553D99FC 0x48 PUSH13 0xA0D3DA4AECB264D7340DD86473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "187:1024:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bfa44204ac9bbaee49bfb866c2f993553d99fc486ca0d3da4aecb264d7340dd864736f6c63430008040033",
									".code": [
										{
											"begin": 187,
											"end": 1211,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 187,
											"end": 1211,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 187,
											"end": 1211,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 187,
											"end": 1211,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 1211,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 1211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 187,
											"end": 1211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 1211,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 1211,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github/nobi/staking/contracts/libraries/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"github/nobi/staking/contracts/libraries/Math.sol\":{\"keccak256\":\"0x8a903be45bf1d301fe43eea3c02b80dc30fed65e4fa2200cc21c134f36b5ac4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://738b1f2a968bf541334fa08b95c7bc4b14901bc66d808f0706b47902c5501123\",\"dweb:/ipfs/Qma8Z8WUyN5XFacMhjr1aynMT3Bf4zmMTjsHPkEinePBjs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"github/nobi/staking/contracts/libraries/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":643:3913  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"github/nobi/staking/contracts/libraries/SafeERC20.sol\":643:3913  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e48da21166e755978723e1ece86ab5d0758471180063b373865d972228749bd264736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e48da21166e755978723e1ece86ab5d0758471180063b373865d972228749bd264736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 DUP14 LOG2 GT PUSH7 0xE755978723E1EC 0xE8 PUSH11 0xB5D0758471180063B37386 0x5D SWAP8 0x22 0x28 PUSH21 0x9BD264736F6C634300080400330000000000000000 ",
							"sourceMap": "643:3270:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;643:3270:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e48da21166e755978723e1ece86ab5d0758471180063b373865d972228749bd264736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 DUP14 LOG2 GT PUSH7 0xE755978723E1EC 0xE8 PUSH11 0xB5D0758471180063B37386 0x5D SWAP8 0x22 0x28 PUSH21 0x9BD264736F6C634300080400330000000000000000 ",
							"sourceMap": "643:3270:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 643,
									"end": 3913,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 643,
									"end": 3913,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e48da21166e755978723e1ece86ab5d0758471180063b373865d972228749bd264736f6c63430008040033",
									".code": [
										{
											"begin": 643,
											"end": 3913,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 643,
											"end": 3913,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 643,
											"end": 3913,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 643,
											"end": 3913,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 643,
											"end": 3913,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 643,
											"end": 3913,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 643,
											"end": 3913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 643,
											"end": 3913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 643,
											"end": 3913,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github/nobi/staking/contracts/libraries/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"github/nobi/staking/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xb1aff979a5fa6968157ae8d85e0e06b910844c7ab72d0c8f6c90b3a1ef11c729\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eca4b1237dd40467c528de5bcba06ac32bd340c75b1f7e76ee57f0be117e5520\",\"dweb:/ipfs/QmfN76uFXumbuRb9vxHY2gvJCAaN73s9xrebPc1SwYcMfa\"]},\"github/nobi/staking/contracts/libraries/Address.sol\":{\"keccak256\":\"0xc3025aaa95aa8f9e80b9a7f76c40a4b94b60b065bd3bbe3cb0a476e95846d658\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89d75bac0237f5c371a2519ce92fbacf3c4ecdcff4cc9f10a5f3673d82876f56\",\"dweb:/ipfs/QmeTypoZNTYKmSdmKiFvJxwot72RE5Bddi5ssX3heW2xdP\"]},\"github/nobi/staking/contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0xd6354d43d1b73a5e5e3b41a5dce81630a40c27cfc8583cc8bd9f54b3c2f41bc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c590833f8817d434db6335b00e883fa5e05bd902092b14633c5a48c586448f2a\",\"dweb:/ipfs/Qmc6QTygvZ1R8jttToMySHKusEV3BCzsdJiU2VqzoiWBJm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"github/nobi/staking/contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"github/nobi/staking/contracts/libraries/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c60425052408e8e88d8b116f38140fb7d56a7f7a5ea93c76cda5d350c734da6164736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c60425052408e8e88d8b116f38140fb7d56a7f7a5ea93c76cda5d350c734da6164736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 DIV 0x25 SDIV 0x24 ADDMOD 0xE8 0xE8 DUP14 DUP12 GT PUSH16 0x38140FB7D56A7F7A5EA93C76CDA5D350 0xC7 CALLVALUE 0xDA PUSH2 0x6473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "467:6301:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c60425052408e8e88d8b116f38140fb7d56a7f7a5ea93c76cda5d350c734da6164736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 DIV 0x25 SDIV 0x24 ADDMOD 0xE8 0xE8 DUP14 DUP12 GT PUSH16 0x38140FB7D56A7F7A5EA93C76CDA5D350 0xC7 CALLVALUE 0xDA PUSH2 0x6473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "467:6301:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c60425052408e8e88d8b116f38140fb7d56a7f7a5ea93c76cda5d350c734da6164736f6c63430008040033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github/nobi/staking/contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"github/nobi/staking/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xf2a8aba77f7c47ac2fb29897622e3d3ceaf0dd3c1ef685895242fa9541f27c34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b1704be230acf1d4555a032bcd8b38d48dfe2763ea61ced2fd5e8889036acb2\",\"dweb:/ipfs/QmezxGeADPzpJA8PdSCYHQRDoytY14xY8SkvP9FwMVp54K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol": {
				"ast": {
					"absolutePath": "github/nobi/staking/contracts/MultiRewardsBeefSTEAK.sol",
					"exportedSymbols": {
						"Address": [
							1879
						],
						"Context": [
							1355
						],
						"IERC20": [
							1584
						],
						"Math": [
							1967
						],
						"MultiRewardsStake": [
							1333
						],
						"Ownable": [
							1460
						],
						"ReentrancyGuard": [
							1500
						],
						"SafeERC20": [
							2191
						],
						"SafeMath": [
							2503
						]
					},
					"id": 1334,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "github/nobi/staking/contracts/helpers/ReentrancyGuard.sol",
							"file": "./helpers/ReentrancyGuard.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 1501,
							"src": "57:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github/nobi/staking/contracts/helpers/Ownable.sol",
							"file": "./helpers/Ownable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 1461,
							"src": "97:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github/nobi/staking/contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 1585,
							"src": "129:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github/nobi/staking/contracts/libraries/Math.sol",
							"file": "./libraries/Math.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 1968,
							"src": "163:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github/nobi/staking/contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 2504,
							"src": "194:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github/nobi/staking/contracts/libraries/SafeERC20.sol",
							"file": "./libraries/SafeERC20.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 2192,
							"src": "229:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 8,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1500,
										"src": "331:15:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "331:15:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1460,
										"src": "348:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "348:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1333,
							"linearizedBaseContracts": [
								1333,
								1460,
								1355,
								1500
							],
							"name": "MultiRewardsStake",
							"nameLocation": "310:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 14,
									"libraryName": {
										"id": 12,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2503,
										"src": "368:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "362:27:0",
									"typeName": {
										"id": 13,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "381:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 18,
									"libraryName": {
										"id": 15,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2191,
										"src": "400:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "394:27:0",
									"typeName": {
										"id": 17,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 16,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1584,
											"src": "414:6:0"
										},
										"referencedDeclaration": 1584,
										"src": "414:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1584",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 21,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "466:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "452:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1584",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 20,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 19,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1584,
											"src": "452:6:0"
										},
										"referencedDeclaration": 1584,
										"src": "452:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1584",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ebe2b12b",
									"id": 23,
									"mutability": "mutable",
									"name": "periodFinish",
									"nameLocation": "499:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "484:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "484:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "386a9525",
									"id": 25,
									"mutability": "mutable",
									"name": "rewardsDuration",
									"nameLocation": "532:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "517:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "517:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 27,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "568:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "553:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "553:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "_userRewardPerTokenPaid",
									"nameLocation": "674:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "617:80:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 32,
										"keyType": {
											"id": 28,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "625:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "617:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 31,
											"keyType": {
												"id": 29,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "645:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "636:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 30,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "656:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 39,
									"mutability": "mutable",
									"name": "_rewards",
									"nameLocation": "760:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "703:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 38,
										"keyType": {
											"id": 34,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "711:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "703:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 37,
											"keyType": {
												"id": 35,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "731:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "722:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 36,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "742:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 41,
									"mutability": "mutable",
									"name": "_totalRewardTokens",
									"nameLocation": "816:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "800:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 40,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "800:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 46,
									"mutability": "mutable",
									"name": "_rewardTokens",
									"nameLocation": "878:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "840:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
										"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken)"
									},
									"typeName": {
										"id": 45,
										"keyType": {
											"id": 42,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "849:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "840:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
											"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken)"
										},
										"valueType": {
											"id": 44,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 43,
												"name": "RewardToken",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "857:11:0"
											},
											"referencedDeclaration": 63,
											"src": "857:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
												"typeString": "struct MultiRewardsStake.RewardToken"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 50,
									"mutability": "mutable",
									"name": "_rewardTokenToIndex",
									"nameLocation": "931:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "897:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 49,
										"keyType": {
											"id": 47,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "906:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "897:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 48,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "917:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 52,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "998:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "982:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 51,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "982:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 56,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1052:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "1016:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 55,
										"keyType": {
											"id": 53,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1024:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1016:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 54,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1035:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "MultiRewardsStake.RewardToken",
									"id": 63,
									"members": [
										{
											"constant": false,
											"id": 58,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "1136:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 63,
											"src": "1128:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 57,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1128:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 60,
											"mutability": "mutable",
											"name": "rewardRate",
											"nameLocation": "1159:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 63,
											"src": "1151:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 59,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1151:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 62,
											"mutability": "mutable",
											"name": "rewardPerTokenStored",
											"nameLocation": "1187:20:0",
											"nodeType": "VariableDeclaration",
											"scope": 63,
											"src": "1179:28:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 61,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1179:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RewardToken",
									"nameLocation": "1106:11:0",
									"nodeType": "StructDefinition",
									"scope": 1333,
									"src": "1099:115:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1309:441:0",
										"statements": [
											{
												"expression": {
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 71,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1319:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1584",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 73,
																"name": "stakingToken_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "1341:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 72,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "1334:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1584_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1334:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1584",
															"typeString": "contract IERC20"
														}
													},
													"src": "1319:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1584",
														"typeString": "contract IERC20"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "1319:36:0"
											},
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 77,
														"name": "_totalRewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1365:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 78,
															"name": "rewardTokens_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "1386:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1386:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1365:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1365:41:0"
											},
											{
												"body": {
													"id": 116,
													"nodeType": "Block",
													"src": "1461:247:0",
													"statements": [
														{
															"expression": {
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 92,
																		"name": "_rewardTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "1475:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																			"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																		}
																	},
																	"id": 96,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 95,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 93,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 83,
																			"src": "1489:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 94,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1493:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1489:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1475:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																		"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 98,
																				"name": "rewardTokens_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 66,
																				"src": "1535:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 100,
																			"indexExpression": {
																				"id": 99,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "1549:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1535:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"hexValue": "30",
																			"id": 101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1581:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		{
																			"hexValue": "30",
																			"id": 102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1622:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 97,
																		"name": "RewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 63,
																		"src": "1498:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_RewardToken_$63_storage_ptr_$",
																			"typeString": "type(struct MultiRewardsStake.RewardToken storage pointer)"
																		}
																	},
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [
																		"token",
																		"rewardRate",
																		"rewardPerTokenStored"
																	],
																	"nodeType": "FunctionCall",
																	"src": "1498:140:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RewardToken_$63_memory_ptr",
																		"typeString": "struct MultiRewardsStake.RewardToken memory"
																	}
																},
																"src": "1475:163:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																	"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																}
															},
															"id": 105,
															"nodeType": "ExpressionStatement",
															"src": "1475:163:0"
														},
														{
															"expression": {
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 106,
																		"name": "_rewardTokenToIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "1652:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 110,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 107,
																			"name": "rewardTokens_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 66,
																			"src": "1672:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 109,
																		"indexExpression": {
																			"id": 108,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 83,
																			"src": "1686:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1672:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1652:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 111,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 83,
																		"src": "1692:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1692:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1652:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 115,
															"nodeType": "ExpressionStatement",
															"src": "1652:45:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 85,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "1430:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 86,
															"name": "rewardTokens_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "1434:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1434:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1430:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 117,
												"initializationExpression": {
													"assignments": [
														83
													],
													"declarations": [
														{
															"constant": false,
															"id": 83,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1427:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 117,
															"src": "1422:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 82,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1422:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 84,
													"nodeType": "VariableDeclarationStatement",
													"src": "1422:6:0"
												},
												"loopExpression": {
													"expression": {
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1456:3:0",
														"subExpression": {
															"id": 89,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "1456:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 91,
													"nodeType": "ExpressionStatement",
													"src": "1456:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1417:291:0"
											},
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 118,
														"name": "rewardsDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1718:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3134",
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1736:7:0",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1209600_by_1",
															"typeString": "int_const 1209600"
														},
														"value": "14"
													},
													"src": "1718:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1718:25:0"
											}
										]
									},
									"id": 123,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "rewardTokens_",
												"nameLocation": "1258:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1241:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 64,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1241:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 65,
													"nodeType": "ArrayTypeName",
													"src": "1241:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "stakingToken_",
												"nameLocation": "1289:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1281:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1231:77:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1309:0:0"
									},
									"scope": 1333,
									"src": "1220:530:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1828:36:0",
										"statements": [
											{
												"expression": {
													"id": 128,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 52,
													"src": "1845:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 127,
												"id": 129,
												"nodeType": "Return",
												"src": "1838:19:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1782:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1819:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1818:9:0"
									},
									"scope": 1333,
									"src": "1773:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "1938:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 138,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "1955:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 140,
													"indexExpression": {
														"id": 139,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "1965:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1955:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 137,
												"id": 141,
												"nodeType": "Return",
												"src": "1948:25:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1879:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1897:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1889:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1888:17:0"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1929:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1928:9:0"
									},
									"scope": 1333,
									"src": "1870:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "2052:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 150,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2078:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2078:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 152,
															"name": "periodFinish",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2095:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 148,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "2069:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$1967_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1918,
														"src": "2069:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 147,
												"id": 154,
												"nodeType": "Return",
												"src": "2062:46:0"
											}
										]
									},
									"functionSelector": "80faa57d",
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "1995:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2019:2:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2043:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2042:9:0"
									},
									"scope": 1333,
									"src": "1986:129:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "2182:42:0",
										"statements": [
											{
												"expression": {
													"id": 161,
													"name": "_totalRewardTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 41,
													"src": "2199:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "2192:25:0"
											}
										]
									},
									"functionSelector": "1b0875a6",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalRewardTokens",
									"nameLocation": "2130:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2147:2:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "2173:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2172:9:0"
									},
									"scope": 1333,
									"src": "2121:103:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "2333:743:0",
										"statements": [
											{
												"assignments": [
													174
												],
												"declarations": [
													{
														"constant": false,
														"id": 174,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "2360:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "2343:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 172,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2343:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 173,
															"nodeType": "ArrayTypeName",
															"src": "2343:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"arguments": [
														{
															"id": 178,
															"name": "_totalRewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2383:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2369:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 175,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2373:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 176,
															"nodeType": "ArrayTypeName",
															"src": "2373:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2369:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 181,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2416:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2432:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2416:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "2597:449:0",
													"statements": [
														{
															"body": {
																"id": 251,
																"nodeType": "Block",
																"src": "2657:379:0",
																"statements": [
																	{
																		"assignments": [
																			220
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 220,
																				"mutability": "mutable",
																				"name": "rewardToken",
																				"nameLocation": "2695:11:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 251,
																				"src": "2675:31:0",
																				"stateVariable": false,
																				"storageLocation": "storage",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																					"typeString": "struct MultiRewardsStake.RewardToken"
																				},
																				"typeName": {
																					"id": 219,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 218,
																						"name": "RewardToken",
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 63,
																						"src": "2675:11:0"
																					},
																					"referencedDeclaration": 63,
																					"src": "2675:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																						"typeString": "struct MultiRewardsStake.RewardToken"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 226,
																		"initialValue": {
																			"baseExpression": {
																				"id": 221,
																				"name": "_rewardTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 46,
																				"src": "2709:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																					"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																				}
																			},
																			"id": 225,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 224,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 222,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "2723:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 223,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2727:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "2723:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2709:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																				"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2675:54:0"
																	},
																	{
																		"expression": {
																			"id": 249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 227,
																					"name": "tokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 174,
																					"src": "2747:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 229,
																				"indexExpression": {
																					"id": 228,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 209,
																					"src": "2754:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2747:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 246,
																								"name": "_totalSupply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 52,
																								"src": "2990:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "31653138",
																										"id": 243,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2959:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_1000000000000000000_by_1",
																											"typeString": "int_const 1000000000000000000"
																										},
																										"value": "1e18"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_1000000000000000000_by_1",
																											"typeString": "int_const 1000000000000000000"
																										}
																									],
																									"expression": {
																										"arguments": [
																											{
																												"expression": {
																													"id": 239,
																													"name": "rewardToken",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 220,
																													"src": "2910:11:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																														"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																													}
																												},
																												"id": 240,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "rewardRate",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 60,
																												"src": "2910:22:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"id": 236,
																														"name": "lastUpdateTime",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 27,
																														"src": "2869:14:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"arguments": [],
																														"expression": {
																															"argumentTypes": [],
																															"id": 233,
																															"name": "lastTimeRewardApplicable",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 156,
																															"src": "2817:24:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																																"typeString": "function () view returns (uint256)"
																															}
																														},
																														"id": 234,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "2817:26:0",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 235,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "sub",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 2382,
																													"src": "2817:51:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 237,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "2817:67:0",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 238,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "mul",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2397,
																											"src": "2817:92:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 241,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "2817:116:0",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 242,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2397,
																									"src": "2817:141:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 244,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2817:147:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 245,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2412,
																							"src": "2817:172:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 247,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2817:186:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 230,
																							"name": "rewardToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 220,
																							"src": "2759:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																								"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																							}
																						},
																						"id": 231,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "rewardPerTokenStored",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 62,
																						"src": "2759:32:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 232,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2367,
																					"src": "2759:36:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 248,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2759:262:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2747:274:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 250,
																		"nodeType": "ExpressionStatement",
																		"src": "2747:274:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 212,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "2628:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 213,
																	"name": "_totalRewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "2632:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2628:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 252,
															"initializationExpression": {
																"assignments": [
																	209
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 209,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "2621:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 252,
																		"src": "2616:6:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 208,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "2616:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 211,
																"initialValue": {
																	"hexValue": "30",
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2625:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "2616:10:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "2652:3:0",
																	"subExpression": {
																		"id": 215,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "2652:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 217,
																"nodeType": "ExpressionStatement",
																"src": "2652:3:0"
															},
															"nodeType": "ForStatement",
															"src": "2611:425:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "2412:634:0",
												"trueBody": {
													"id": 207,
													"nodeType": "Block",
													"src": "2435:156:0",
													"statements": [
														{
															"body": {
																"id": 205,
																"nodeType": "Block",
																"src": "2495:86:0",
																"statements": [
																	{
																		"expression": {
																			"id": 203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 194,
																					"name": "tokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 174,
																					"src": "2513:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 196,
																				"indexExpression": {
																					"id": 195,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 185,
																					"src": "2520:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2513:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 197,
																						"name": "_rewardTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 46,
																						"src": "2525:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																							"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																						}
																					},
																					"id": 201,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 200,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 198,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 185,
																							"src": "2539:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 199,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2543:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "2539:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2525:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																						"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																					}
																				},
																				"id": 202,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "rewardPerTokenStored",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 62,
																				"src": "2525:41:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2513:53:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 204,
																		"nodeType": "ExpressionStatement",
																		"src": "2513:53:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 188,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "2466:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 189,
																	"name": "_totalRewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "2470:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2466:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 206,
															"initializationExpression": {
																"assignments": [
																	185
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 185,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "2459:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 206,
																		"src": "2454:6:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 184,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "2454:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 187,
																"initialValue": {
																	"hexValue": "30",
																	"id": 186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2463:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "2454:10:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "2490:3:0",
																	"subExpression": {
																		"id": 191,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2490:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 193,
																"nodeType": "ExpressionStatement",
																"src": "2490:3:0"
															},
															"nodeType": "ForStatement",
															"src": "2449:132:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 255,
													"name": "tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 174,
													"src": "3063:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 169,
												"id": 256,
												"nodeType": "Return",
												"src": "3056:13:0"
											}
										]
									},
									"functionSelector": "cd3daf9d",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "2277:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2315:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 166,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 167,
													"nodeType": "ArrayTypeName",
													"src": "2315:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2314:18:0"
									},
									"scope": 1333,
									"src": "2268:808:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "3195:458:0",
										"statements": [
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "3213:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "3205:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3205:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 270,
												"initialValue": {
													"baseExpression": {
														"id": 267,
														"name": "_rewardTokenToIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "3221:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 269,
													"indexExpression": {
														"id": 268,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "3241:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3221:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3205:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 271,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "3261:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3277:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3261:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 304,
													"nodeType": "Block",
													"src": "3359:288:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 300,
																				"name": "_totalSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "3609:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"hexValue": "31653138",
																						"id": 297,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3582:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"value": "1e18"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"baseExpression": {
																										"id": 291,
																										"name": "_rewardTokens",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 46,
																										"src": "3528:13:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																											"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																										}
																									},
																									"id": 293,
																									"indexExpression": {
																										"id": 292,
																										"name": "index",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 266,
																										"src": "3542:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "3528:20:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																										"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																									}
																								},
																								"id": 294,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "rewardRate",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 60,
																								"src": "3528:31:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"id": 288,
																										"name": "lastUpdateTime",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 27,
																										"src": "3491:14:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"arguments": [],
																										"expression": {
																											"argumentTypes": [],
																											"id": 285,
																											"name": "lastTimeRewardApplicable",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 156,
																											"src": "3443:24:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																												"typeString": "function () view returns (uint256)"
																											}
																										},
																										"id": 286,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "3443:26:0",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 287,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sub",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2382,
																									"src": "3443:47:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 289,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3443:63:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 290,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2397,
																							"src": "3443:84:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 295,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3443:117:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 296,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2397,
																					"src": "3443:138:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 298,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3443:144:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2412,
																			"src": "3443:165:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3443:179:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 280,
																				"name": "_rewardTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 46,
																				"src": "3380:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																					"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																				}
																			},
																			"id": 282,
																			"indexExpression": {
																				"id": 281,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 266,
																				"src": "3394:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3380:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																				"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardPerTokenStored",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 62,
																		"src": "3380:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2367,
																	"src": "3380:45:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3380:256:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 264,
															"id": 303,
															"nodeType": "Return",
															"src": "3373:263:0"
														}
													]
												},
												"id": 305,
												"nodeType": "IfStatement",
												"src": "3257:390:0",
												"trueBody": {
													"id": 279,
													"nodeType": "Block",
													"src": "3280:73:0",
													"statements": [
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 274,
																		"name": "_rewardTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "3301:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																			"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "3315:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3301:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																		"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																	}
																},
																"id": 277,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "rewardPerTokenStored",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 62,
																"src": "3301:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 264,
															"id": 278,
															"nodeType": "Return",
															"src": "3294:48:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "a54f5e0d",
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardForToken",
									"nameLocation": "3135:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3158:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3150:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3149:15:0"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3186:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3185:9:0"
									},
									"scope": 1333,
									"src": "3126:527:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "3729:220:0",
										"statements": [
											{
												"assignments": [
													318
												],
												"declarations": [
													{
														"constant": false,
														"id": 318,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "3760:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "3739:27:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_RewardToken_$63_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct MultiRewardsStake.RewardToken[]"
														},
														"typeName": {
															"baseType": {
																"id": 316,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 315,
																	"name": "RewardToken",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 63,
																	"src": "3739:11:0"
																},
																"referencedDeclaration": 63,
																"src": "3739:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																	"typeString": "struct MultiRewardsStake.RewardToken"
																}
															},
															"id": 317,
															"nodeType": "ArrayTypeName",
															"src": "3739:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_RewardToken_$63_storage_$dyn_storage_ptr",
																"typeString": "struct MultiRewardsStake.RewardToken[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 325,
												"initialValue": {
													"arguments": [
														{
															"id": 323,
															"name": "_totalRewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "3787:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3769:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_RewardToken_$63_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct MultiRewardsStake.RewardToken memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 320,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 319,
																	"name": "RewardToken",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 63,
																	"src": "3773:11:0"
																},
																"referencedDeclaration": 63,
																"src": "3773:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																	"typeString": "struct MultiRewardsStake.RewardToken"
																}
															},
															"id": 321,
															"nodeType": "ArrayTypeName",
															"src": "3773:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_RewardToken_$63_storage_$dyn_storage_ptr",
																"typeString": "struct MultiRewardsStake.RewardToken[]"
															}
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3769:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_RewardToken_$63_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct MultiRewardsStake.RewardToken memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3739:67:0"
											},
											{
												"body": {
													"id": 346,
													"nodeType": "Block",
													"src": "3862:57:0",
													"statements": [
														{
															"expression": {
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 336,
																		"name": "tokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "3876:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_RewardToken_$63_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct MultiRewardsStake.RewardToken memory[] memory"
																		}
																	},
																	"id": 338,
																	"indexExpression": {
																		"id": 337,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "3883:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3876:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RewardToken_$63_memory_ptr",
																		"typeString": "struct MultiRewardsStake.RewardToken memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 339,
																		"name": "_rewardTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "3888:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																			"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																		}
																	},
																	"id": 343,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 340,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "3902:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3906:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3902:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3888:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																		"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																	}
																},
																"src": "3876:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardToken_$63_memory_ptr",
																	"typeString": "struct MultiRewardsStake.RewardToken memory"
																}
															},
															"id": 345,
															"nodeType": "ExpressionStatement",
															"src": "3876:32:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 330,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "3833:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 331,
														"name": "_totalRewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3837:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3833:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 347,
												"initializationExpression": {
													"assignments": [
														327
													],
													"declarations": [
														{
															"constant": false,
															"id": 327,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3826:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 347,
															"src": "3821:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 326,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3821:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 329,
													"initialValue": {
														"hexValue": "30",
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3830:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3821:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3857:3:0",
														"subExpression": {
															"id": 333,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "3857:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 335,
													"nodeType": "ExpressionStatement",
													"src": "3857:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3816:103:0"
											},
											{
												"expression": {
													"id": 348,
													"name": "tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 318,
													"src": "3936:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_RewardToken_$63_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct MultiRewardsStake.RewardToken memory[] memory"
													}
												},
												"functionReturnParameters": 313,
												"id": 349,
												"nodeType": "Return",
												"src": "3929:13:0"
											}
										]
									},
									"functionSelector": "c4f59f9b",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardTokens",
									"nameLocation": "3668:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3683:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "3707:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_RewardToken_$63_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct MultiRewardsStake.RewardToken[]"
												},
												"typeName": {
													"baseType": {
														"id": 310,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 309,
															"name": "RewardToken",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 63,
															"src": "3707:11:0"
														},
														"referencedDeclaration": 63,
														"src": "3707:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
															"typeString": "struct MultiRewardsStake.RewardToken"
														}
													},
													"id": 311,
													"nodeType": "ArrayTypeName",
													"src": "3707:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_RewardToken_$63_storage_$dyn_storage_ptr",
														"typeString": "struct MultiRewardsStake.RewardToken[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3706:22:0"
									},
									"scope": 1333,
									"src": "3659:290:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "4027:538:0",
										"statements": [
											{
												"assignments": [
													363
												],
												"declarations": [
													{
														"constant": false,
														"id": 363,
														"mutability": "mutable",
														"name": "earnings",
														"nameLocation": "4054:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 431,
														"src": "4037:25:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 361,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4037:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 362,
															"nodeType": "ArrayTypeName",
															"src": "4037:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 369,
												"initialValue": {
													"arguments": [
														{
															"id": 367,
															"name": "_totalRewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "4079:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4065:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 364,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4069:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 365,
															"nodeType": "ArrayTypeName",
															"src": "4069:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4037:61:0"
											},
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "tokenRewards",
														"nameLocation": "4125:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 431,
														"src": "4108:29:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 372,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4108:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 373,
															"nodeType": "ArrayTypeName",
															"src": "4108:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "rewardPerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "4140:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function () view returns (uint256[] memory)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4140:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4108:48:0"
											},
											{
												"body": {
													"id": 427,
													"nodeType": "Block",
													"src": "4212:321:0",
													"statements": [
														{
															"assignments": [
																389
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 389,
																	"mutability": "mutable",
																	"name": "token",
																	"nameLocation": "4234:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 427,
																	"src": "4226:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 388,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4226:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 396,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 390,
																		"name": "_rewardTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "4242:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																			"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																		}
																	},
																	"id": 394,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 391,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 379,
																			"src": "4256:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4260:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4256:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4242:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																		"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "4242:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4226:42:0"
														},
														{
															"expression": {
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 397,
																		"name": "earnings",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "4282:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 399,
																	"indexExpression": {
																		"id": 398,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "4291:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4282:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"baseExpression": {
																					"id": 419,
																					"name": "_rewards",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 39,
																					"src": "4484:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 421,
																				"indexExpression": {
																					"id": 420,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 353,
																					"src": "4493:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4484:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 423,
																			"indexExpression": {
																				"id": 422,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 389,
																				"src": "4502:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4484:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "31653138",
																					"id": 416,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4457:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"baseExpression": {
																										"baseExpression": {
																											"id": 408,
																											"name": "_userRewardPerTokenPaid",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 33,
																											"src": "4377:23:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																												"typeString": "mapping(address => mapping(address => uint256))"
																											}
																										},
																										"id": 410,
																										"indexExpression": {
																											"id": 409,
																											"name": "account",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 353,
																											"src": "4401:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "4377:32:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																											"typeString": "mapping(address => uint256)"
																										}
																									},
																									"id": 412,
																									"indexExpression": {
																										"id": 411,
																										"name": "token",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 389,
																										"src": "4410:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "4377:39:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"baseExpression": {
																										"id": 404,
																										"name": "tokenRewards",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 374,
																										"src": "4336:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																											"typeString": "uint256[] memory"
																										}
																									},
																									"id": 406,
																									"indexExpression": {
																										"id": 405,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 379,
																										"src": "4349:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "4336:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 407,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sub",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2382,
																								"src": "4336:40:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 413,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4336:81:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"baseExpression": {
																								"id": 400,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 56,
																								"src": "4296:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 402,
																							"indexExpression": {
																								"id": 401,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 353,
																								"src": "4306:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "4296:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 403,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2397,
																						"src": "4296:39:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 414,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4296:139:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2412,
																				"src": "4296:160:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4296:166:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2367,
																		"src": "4296:187:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4296:226:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4282:240:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 426,
															"nodeType": "ExpressionStatement",
															"src": "4282:240:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 382,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "4183:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 383,
														"name": "_totalRewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "4187:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4183:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 428,
												"initializationExpression": {
													"assignments": [
														379
													],
													"declarations": [
														{
															"constant": false,
															"id": 379,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4176:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 428,
															"src": "4171:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 378,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4171:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 381,
													"initialValue": {
														"hexValue": "30",
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4180:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4171:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4207:3:0",
														"subExpression": {
															"id": 385,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "4207:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 387,
													"nodeType": "ExpressionStatement",
													"src": "4207:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4166:367:0"
											},
											{
												"expression": {
													"id": 429,
													"name": "earnings",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 363,
													"src": "4550:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 358,
												"id": 430,
												"nodeType": "Return",
												"src": "4543:15:0"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "3964:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3979:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "3971:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3970:17:0"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "4009:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 355,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4009:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 356,
													"nodeType": "ArrayTypeName",
													"src": "4009:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4008:18:0"
									},
									"scope": 1333,
									"src": "3955:610:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "4644:268:0",
										"statements": [
											{
												"assignments": [
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"mutability": "mutable",
														"name": "currentRewards",
														"nameLocation": "4671:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 477,
														"src": "4654:31:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 440,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4654:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 441,
															"nodeType": "ArrayTypeName",
															"src": "4654:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"arguments": [
														{
															"id": 446,
															"name": "_totalRewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "4702:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4688:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 443,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4692:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 444,
															"nodeType": "ArrayTypeName",
															"src": "4692:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4688:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4654:67:0"
											},
											{
												"body": {
													"id": 473,
													"nodeType": "Block",
													"src": "4777:97:0",
													"statements": [
														{
															"expression": {
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 459,
																		"name": "currentRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "4791:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 461,
																	"indexExpression": {
																		"id": 460,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "4806:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4791:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 469,
																			"name": "rewardsDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "4847:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"baseExpression": {
																					"id": 462,
																					"name": "_rewardTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 46,
																					"src": "4811:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																						"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																					}
																				},
																				"id": 466,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 465,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 463,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 450,
																						"src": "4825:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 464,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4829:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "4825:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4811:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																					"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																				}
																			},
																			"id": 467,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "rewardRate",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 60,
																			"src": "4811:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2397,
																		"src": "4811:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4811:52:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4791:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 472,
															"nodeType": "ExpressionStatement",
															"src": "4791:72:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 453,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "4748:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 454,
														"name": "_totalRewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "4752:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4748:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 474,
												"initializationExpression": {
													"assignments": [
														450
													],
													"declarations": [
														{
															"constant": false,
															"id": 450,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4741:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 474,
															"src": "4736:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 449,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4736:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 452,
													"initialValue": {
														"hexValue": "30",
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4745:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4736:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4772:3:0",
														"subExpression": {
															"id": 456,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "4772:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 458,
													"nodeType": "ExpressionStatement",
													"src": "4772:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4731:143:0"
											},
											{
												"expression": {
													"id": 475,
													"name": "currentRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 442,
													"src": "4891:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 437,
												"id": 476,
												"nodeType": "Return",
												"src": "4884:21:0"
											}
										]
									},
									"functionSelector": "1c1f78eb",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForDuration",
									"nameLocation": "4580:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4600:2:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "4626:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 434,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4626:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 435,
													"nodeType": "ArrayTypeName",
													"src": "4626:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4625:18:0"
									},
									"scope": 1333,
									"src": "4571:341:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "5025:494:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 490,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "5043:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5052:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5043:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5055:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5035:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5035:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "5035:37:0"
											},
											{
												"assignments": [
													497
												],
												"declarations": [
													{
														"constant": false,
														"id": 497,
														"mutability": "mutable",
														"name": "currentBalance",
														"nameLocation": "5090:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "5082:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 496,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5082:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 502,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5138:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																		"typeString": "contract MultiRewardsStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																		"typeString": "contract MultiRewardsStake"
																	}
																],
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5130:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 500,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5130:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5130:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 498,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "5107:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1584",
																"typeString": "contract IERC20"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1517,
														"src": "5107:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5107:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5082:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 509,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5184:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5184:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 513,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5204:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																		"typeString": "contract MultiRewardsStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																		"typeString": "contract MultiRewardsStake"
																	}
																],
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5196:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 511,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5196:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5196:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "5211:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 506,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "5154:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1584",
																"typeString": "contract IERC20"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2024,
														"src": "5154:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1584_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1584_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5154:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "5154:64:0"
											},
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "newBalance",
														"nameLocation": "5236:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "5228:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5228:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 527,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 524,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5280:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																		"typeString": "contract MultiRewardsStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																		"typeString": "contract MultiRewardsStake"
																	}
																],
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5272:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5272:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5272:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 520,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "5249:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1584",
																"typeString": "contract IERC20"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1517,
														"src": "5249:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5249:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5228:58:0"
											},
											{
												"assignments": [
													529
												],
												"declarations": [
													{
														"constant": false,
														"id": 529,
														"mutability": "mutable",
														"name": "supplyDiff",
														"nameLocation": "5304:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "5296:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 528,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5296:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 534,
												"initialValue": {
													"arguments": [
														{
															"id": 532,
															"name": "currentBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "5332:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 530,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "5317:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2382,
														"src": "5317:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5317:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5296:51:0"
											},
											{
												"expression": {
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 535,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "5357:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 538,
																"name": "supplyDiff",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "5389:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 536,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "5372:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2367,
															"src": "5372:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5372:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5357:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "5357:43:0"
											},
											{
												"expression": {
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 542,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "5410:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 545,
														"indexExpression": {
															"expression": {
																"id": 543,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5420:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5420:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5410:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 551,
																"name": "supplyDiff",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "5460:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 546,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "5434:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 549,
																"indexExpression": {
																	"expression": {
																		"id": 547,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5444:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5444:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5434:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2367,
															"src": "5434:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5434:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5410:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "5410:61:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 556,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5493:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5493:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 558,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "5505:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 555,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "5486:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5486:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "EmitStatement",
												"src": "5481:31:0"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 483,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 482,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1499,
												"src": "4987:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4987:12:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 485,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5013:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5013:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 487,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 484,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "5000:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5000:24:0"
										}
									],
									"name": "stake",
									"nameLocation": "4956:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4970:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4962:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4961:16:0"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5025:0:0"
									},
									"scope": 1333,
									"src": "4947:572:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "5604:272:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 574,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "5622:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5631:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5622:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742077697468647261772030",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5634:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															},
															"value": "Cannot withdraw 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															}
														],
														"id": 573,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5614:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5614:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "5614:40:0"
											},
											{
												"expression": {
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 580,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "5664:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 583,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "5696:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 581,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "5679:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2382,
															"src": "5679:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5679:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5664:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "5664:39:0"
											},
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 587,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "5713:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 590,
														"indexExpression": {
															"expression": {
																"id": 588,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5723:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5723:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5713:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 596,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "5763:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 591,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "5737:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 594,
																"indexExpression": {
																	"expression": {
																		"id": 592,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5747:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5747:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5737:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2382,
															"src": "5737:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5737:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5713:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "5713:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 603,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5806:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5806:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5818:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 600,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "5780:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1584",
																"typeString": "contract IERC20"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1998,
														"src": "5780:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1584_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1584_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5780:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "5780:45:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 609,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5850:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5850:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5862:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 608,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "5840:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5840:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "EmitStatement",
												"src": "5835:34:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 567,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 566,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1499,
												"src": "5566:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5566:12:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 569,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5592:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5592:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 571,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 568,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "5579:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5579:24:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "5534:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5551:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "5543:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5542:16:0"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5604:0:0"
									},
									"scope": 1333,
									"src": "5525:351:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "5948:432:0",
										"statements": [
											{
												"body": {
													"id": 687,
													"nodeType": "Block",
													"src": "6004:370:0",
													"statements": [
														{
															"assignments": [
																635
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 635,
																	"mutability": "mutable",
																	"name": "currentReward",
																	"nameLocation": "6026:13:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 687,
																	"src": "6018:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 634,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6018:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 647,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 636,
																		"name": "_rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "6042:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 639,
																	"indexExpression": {
																		"expression": {
																			"id": 637,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6051:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6051:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6042:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 646,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 640,
																			"name": "_rewardTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "6063:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																				"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																			}
																		},
																		"id": 644,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 641,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "6077:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6081:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "6077:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6063:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																			"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																		}
																	},
																	"id": 645,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "token",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 58,
																	"src": "6063:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6042:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6018:72:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 648,
																	"name": "currentReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "6108:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6124:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6108:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 686,
															"nodeType": "IfStatement",
															"src": "6104:260:0",
															"trueBody": {
																"id": 685,
																"nodeType": "Block",
																"src": "6127:237:0",
																"statements": [
																	{
																		"expression": {
																			"id": 663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 651,
																						"name": "_rewards",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 39,
																						"src": "6145:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(address => mapping(address => uint256))"
																						}
																					},
																					"id": 660,
																					"indexExpression": {
																						"expression": {
																							"id": 652,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "6154:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 653,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "6154:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6145:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 661,
																				"indexExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 654,
																							"name": "_rewardTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 46,
																							"src": "6166:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																								"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																							}
																						},
																						"id": 658,
																						"indexExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 657,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 655,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 625,
																								"src": "6180:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 656,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6184:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "6180:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6166:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																							"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																						}
																					},
																					"id": 659,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "token",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 58,
																					"src": "6166:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6145:48:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6196:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "6145:52:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 664,
																		"nodeType": "ExpressionStatement",
																		"src": "6145:52:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 674,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "6263:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 675,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "6263:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 676,
																					"name": "currentReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 635,
																					"src": "6275:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 666,
																									"name": "_rewardTokens",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 46,
																									"src": "6222:13:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																										"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																									}
																								},
																								"id": 670,
																								"indexExpression": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 669,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 667,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 625,
																										"src": "6236:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "+",
																									"rightExpression": {
																										"hexValue": "31",
																										"id": 668,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "6240:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_1_by_1",
																											"typeString": "int_const 1"
																										},
																										"value": "1"
																									},
																									"src": "6236:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6222:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																									"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																								}
																							},
																							"id": 671,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "token",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 58,
																							"src": "6222:26:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 665,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1584,
																						"src": "6215:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$1584_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 672,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6215:34:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1584",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1998,
																				"src": "6215:47:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1584_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1584_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6215:74:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 678,
																		"nodeType": "ExpressionStatement",
																		"src": "6215:74:0"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 680,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "6323:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 681,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "6323:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 682,
																					"name": "currentReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 635,
																					"src": "6335:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 679,
																				"name": "RewardPaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1332,
																				"src": "6312:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6312:37:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 684,
																		"nodeType": "EmitStatement",
																		"src": "6307:42:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 628,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "5975:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 629,
														"name": "_totalRewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "5979:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5975:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"initializationExpression": {
													"assignments": [
														625
													],
													"declarations": [
														{
															"constant": false,
															"id": 625,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5968:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 688,
															"src": "5963:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 624,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5963:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 627,
													"initialValue": {
														"hexValue": "30",
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5972:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5963:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5999:3:0",
														"subExpression": {
															"id": 631,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "5999:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 633,
													"nodeType": "ExpressionStatement",
													"src": "5999:3:0"
												},
												"nodeType": "ForStatement",
												"src": "5958:416:0"
											}
										]
									},
									"functionSelector": "3d18b912",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 618,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 617,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1499,
												"src": "5910:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5910:12:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 620,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5936:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5936:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 622,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 619,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "5923:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5923:24:0"
										}
									],
									"name": "getReward",
									"nameLocation": "5891:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5900:2:0"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5948:0:0"
									},
									"scope": 1333,
									"src": "5882:498:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "6411:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 694,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "6430:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 697,
															"indexExpression": {
																"expression": {
																	"id": 695,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6440:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6440:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6430:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 693,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "6421:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6421:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "6421:31:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 700,
														"name": "getReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "6462:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6462:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "6462:11:0"
											}
										]
									},
									"functionSelector": "e9fad8ee",
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nameLocation": "6395:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6399:2:0"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6411:0:0"
									},
									"scope": 1333,
									"src": "6386:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "6599:1314:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 713,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "6617:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6617:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 715,
																"name": "_totalRewardTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "6634:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6617:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57726f6e6720616d6f756e7473",
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6654:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6818acafc3391f4bc771496b2b0951ea652f681be7991f8106c505736b6c7b1a",
																"typeString": "literal_string \"Wrong amounts\""
															},
															"value": "Wrong amounts"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6818acafc3391f4bc771496b2b0951ea652f681be7991f8106c505736b6c7b1a",
																"typeString": "literal_string \"Wrong amounts\""
															}
														],
														"id": 712,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6609:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6609:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "6609:61:0"
											},
											{
												"body": {
													"id": 856,
													"nodeType": "Block",
													"src": "6803:956:0",
													"statements": [
														{
															"assignments": [
																732
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 732,
																	"mutability": "mutable",
																	"name": "rewardToken",
																	"nameLocation": "6837:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 856,
																	"src": "6817:31:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																		"typeString": "struct MultiRewardsStake.RewardToken"
																	},
																	"typeName": {
																		"id": 731,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 730,
																			"name": "RewardToken",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 63,
																			"src": "6817:11:0"
																		},
																		"referencedDeclaration": 63,
																		"src": "6817:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																			"typeString": "struct MultiRewardsStake.RewardToken"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 738,
															"initialValue": {
																"baseExpression": {
																	"id": 733,
																	"name": "_rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "6851:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																		"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																	}
																},
																"id": 737,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 734,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "6865:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6869:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "6865:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6851:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																	"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6817:54:0"
														},
														{
															"assignments": [
																740
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 740,
																	"mutability": "mutable",
																	"name": "prevBalance",
																	"nameLocation": "6893:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 856,
																	"src": "6885:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 739,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6885:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 751,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 748,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6951:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																					"typeString": "contract MultiRewardsStake"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																					"typeString": "contract MultiRewardsStake"
																				}
																			],
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6943:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 746,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6943:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6943:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 742,
																					"name": "rewardToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 732,
																					"src": "6914:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																						"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																					}
																				},
																				"id": 743,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 58,
																				"src": "6914:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 741,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1584,
																			"src": "6907:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1584_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6907:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1584",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1517,
																	"src": "6907:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6907:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6885:72:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 757,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7014:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7014:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 761,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "7034:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																					"typeString": "contract MultiRewardsStake"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																					"typeString": "contract MultiRewardsStake"
																				}
																			],
																			"id": 760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7026:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 759,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7026:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7026:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 763,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 707,
																			"src": "7041:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 765,
																		"indexExpression": {
																			"id": 764,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 721,
																			"src": "7048:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7041:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 753,
																					"name": "rewardToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 732,
																					"src": "6978:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																						"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																					}
																				},
																				"id": 754,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 58,
																				"src": "6978:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 752,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1584,
																			"src": "6971:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1584_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6971:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1584",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2024,
																	"src": "6971:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1584_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1584_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6971:80:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 767,
															"nodeType": "ExpressionStatement",
															"src": "6971:80:0"
														},
														{
															"assignments": [
																769
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 769,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "7070:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 856,
																	"src": "7065:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 768,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "7065:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 783,
															"initialValue": {
																"arguments": [
																	{
																		"id": 781,
																		"name": "prevBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "7134:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 777,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "7123:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																							"typeString": "contract MultiRewardsStake"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																							"typeString": "contract MultiRewardsStake"
																						}
																					],
																					"id": 776,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7115:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 775,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "7115:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 778,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7115:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 771,
																							"name": "rewardToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 732,
																							"src": "7086:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																								"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																							}
																						},
																						"id": 772,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "token",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 58,
																						"src": "7086:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 770,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1584,
																					"src": "7079:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$1584_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7079:25:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1584",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1517,
																			"src": "7079:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7079:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2382,
																	"src": "7079:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7079:67:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7065:81:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 784,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7164:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7164:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 786,
																	"name": "periodFinish",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "7183:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7164:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 826,
																"nodeType": "Block",
																"src": "7288:244:0",
																"statements": [
																	{
																		"assignments": [
																			799
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 799,
																				"mutability": "mutable",
																				"name": "remaining",
																				"nameLocation": "7314:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 826,
																				"src": "7306:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 798,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7306:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 805,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 802,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "7343:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 803,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "7343:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 800,
																					"name": "periodFinish",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 23,
																					"src": "7326:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2382,
																				"src": "7326:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7326:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7306:53:0"
																	},
																	{
																		"assignments": [
																			807
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 807,
																				"mutability": "mutable",
																				"name": "leftover",
																				"nameLocation": "7385:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 826,
																				"src": "7377:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 806,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7377:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 813,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 810,
																						"name": "rewardToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 732,
																						"src": "7410:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																							"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																						}
																					},
																					"id": 811,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "rewardRate",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 60,
																					"src": "7410:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 808,
																					"name": "remaining",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "7396:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2397,
																				"src": "7396:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7396:37:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7377:56:0"
																	},
																	{
																		"expression": {
																			"id": 824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 814,
																					"name": "rewardToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 732,
																					"src": "7451:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																						"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																					}
																				},
																				"id": 816,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "rewardRate",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 60,
																				"src": "7451:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 822,
																						"name": "rewardsDuration",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 25,
																						"src": "7501:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 819,
																								"name": "leftover",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 807,
																								"src": "7487:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 817,
																								"name": "reward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 769,
																								"src": "7476:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 818,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2367,
																							"src": "7476:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 820,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7476:20:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 821,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "div",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2412,
																					"src": "7476:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 823,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7476:41:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7451:66:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 825,
																		"nodeType": "ExpressionStatement",
																		"src": "7451:66:0"
																	}
																]
															},
															"id": 827,
															"nodeType": "IfStatement",
															"src": "7160:372:0",
															"trueBody": {
																"id": 797,
																"nodeType": "Block",
																"src": "7197:85:0",
																"statements": [
																	{
																		"expression": {
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 788,
																					"name": "rewardToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 732,
																					"src": "7215:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																						"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																					}
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "rewardRate",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 60,
																				"src": "7215:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 793,
																						"name": "rewardsDuration",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 25,
																						"src": "7251:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 791,
																						"name": "reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 769,
																						"src": "7240:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 792,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "div",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2412,
																					"src": "7240:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 794,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7240:27:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7215:52:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 796,
																		"nodeType": "ExpressionStatement",
																		"src": "7215:52:0"
																	}
																]
															}
														},
														{
															"assignments": [
																829
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 829,
																	"mutability": "mutable",
																	"name": "balance",
																	"nameLocation": "7554:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 856,
																	"src": "7546:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 828,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7546:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 840,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 837,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "7608:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																					"typeString": "contract MultiRewardsStake"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																					"typeString": "contract MultiRewardsStake"
																				}
																			],
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7600:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 835,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7600:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7600:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 831,
																					"name": "rewardToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 732,
																					"src": "7571:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																						"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																					}
																				},
																				"id": 832,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 58,
																				"src": "7571:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 830,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1584,
																			"src": "7564:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1584_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7564:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1584",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1517,
																	"src": "7564:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7564:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7546:68:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 842,
																				"name": "rewardToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 732,
																				"src": "7636:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																					"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																				}
																			},
																			"id": 843,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "rewardRate",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 60,
																			"src": "7636:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 846,
																					"name": "rewardsDuration",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "7674:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 844,
																					"name": "balance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 829,
																					"src": "7662:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2412,
																				"src": "7662:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7662:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7636:54:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "52657761726420746f6f2068696768",
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7692:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_da6a2c2e75a1ef97996a5ed7ec90b51579be684745c2068143284d67c1b2f0f1",
																			"typeString": "literal_string \"Reward too high\""
																		},
																		"value": "Reward too high"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_da6a2c2e75a1ef97996a5ed7ec90b51579be684745c2068143284d67c1b2f0f1",
																			"typeString": "literal_string \"Reward too high\""
																		}
																	],
																	"id": 841,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7628:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7628:82:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 851,
															"nodeType": "ExpressionStatement",
															"src": "7628:82:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 853,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 769,
																		"src": "7741:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 852,
																	"name": "RewardAdded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1314,
																	"src": "7729:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7729:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 855,
															"nodeType": "EmitStatement",
															"src": "7724:24:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 724,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "6774:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 725,
														"name": "_totalRewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "6778:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6774:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 857,
												"initializationExpression": {
													"assignments": [
														721
													],
													"declarations": [
														{
															"constant": false,
															"id": 721,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6767:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 857,
															"src": "6762:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 720,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6762:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 723,
													"initialValue": {
														"hexValue": "30",
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6771:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6762:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6798:3:0",
														"subExpression": {
															"id": 727,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "6798:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 729,
													"nodeType": "ExpressionStatement",
													"src": "6798:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6757:1002:0"
											},
											{
												"expression": {
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 858,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "7769:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 859,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7786:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7769:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "7769:32:0"
											},
											{
												"expression": {
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 863,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "7811:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 867,
																"name": "rewardsDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "7846:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 864,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7826:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7826:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2367,
															"src": "7826:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7826:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7811:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "7811:51:0"
											}
										]
									},
									"functionSelector": "6a1af3b7",
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 710,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 709,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1402,
												"src": "6589:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6589:9:0"
										}
									],
									"name": "depositRewardTokens",
									"nameLocation": "6535:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6572:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "6555:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 705,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6555:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 706,
													"nodeType": "ArrayTypeName",
													"src": "6555:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6554:25:0"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6599:0:0"
									},
									"scope": 1333,
									"src": "6526:1387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "8014:934:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 887,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "8032:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8032:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 889,
																"name": "_totalRewardTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "8049:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8032:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57726f6e672072657761726420616d6f756e7473",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8069:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67a3ded8799194fca390772802e46c6b945e9d06ccf5007a6fea03dc10e1e668",
																"typeString": "literal_string \"Wrong reward amounts\""
															},
															"value": "Wrong reward amounts"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67a3ded8799194fca390772802e46c6b945e9d06ccf5007a6fea03dc10e1e668",
																"typeString": "literal_string \"Wrong reward amounts\""
															}
														],
														"id": 886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8024:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8024:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "8024:68:0"
											},
											{
												"body": {
													"id": 991,
													"nodeType": "Block",
													"src": "8148:690:0",
													"statements": [
														{
															"assignments": [
																906
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 906,
																	"mutability": "mutable",
																	"name": "rewardToken",
																	"nameLocation": "8182:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 991,
																	"src": "8162:31:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																		"typeString": "struct MultiRewardsStake.RewardToken"
																	},
																	"typeName": {
																		"id": 905,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 904,
																			"name": "RewardToken",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 63,
																			"src": "8162:11:0"
																		},
																		"referencedDeclaration": 63,
																		"src": "8162:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																			"typeString": "struct MultiRewardsStake.RewardToken"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 912,
															"initialValue": {
																"baseExpression": {
																	"id": 907,
																	"name": "_rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "8196:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																		"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																	}
																},
																"id": 911,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 908,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "8210:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8214:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8210:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8196:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																	"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8162:54:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 913,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8234:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "8234:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 915,
																	"name": "periodFinish",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "8253:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8234:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 959,
																"nodeType": "Block",
																"src": "8361:247:0",
																"statements": [
																	{
																		"assignments": [
																			930
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 930,
																				"mutability": "mutable",
																				"name": "remaining",
																				"nameLocation": "8387:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 959,
																				"src": "8379:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 929,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8379:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 936,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 933,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "8416:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 934,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "8416:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 931,
																					"name": "periodFinish",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 23,
																					"src": "8399:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2382,
																				"src": "8399:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8399:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8379:53:0"
																	},
																	{
																		"assignments": [
																			938
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 938,
																				"mutability": "mutable",
																				"name": "leftover",
																				"nameLocation": "8458:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 959,
																				"src": "8450:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 937,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8450:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 944,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 941,
																						"name": "rewardToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 906,
																						"src": "8483:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																							"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																						}
																					},
																					"id": 942,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "rewardRate",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 60,
																					"src": "8483:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 939,
																					"name": "remaining",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "8469:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2397,
																				"src": "8469:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8469:37:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8450:56:0"
																	},
																	{
																		"expression": {
																			"id": 957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 945,
																					"name": "rewardToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 906,
																					"src": "8524:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																						"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																					}
																				},
																				"id": 947,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "rewardRate",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 60,
																				"src": "8524:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 955,
																						"name": "rewardsDuration",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 25,
																						"src": "8577:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 952,
																								"name": "leftover",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 938,
																								"src": "8563:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"id": 948,
																									"name": "reward",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 875,
																									"src": "8549:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																										"typeString": "uint256[] memory"
																									}
																								},
																								"id": 950,
																								"indexExpression": {
																									"id": 949,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 895,
																									"src": "8556:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "8549:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 951,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2367,
																							"src": "8549:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 953,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8549:23:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 954,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "div",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2412,
																					"src": "8549:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 956,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8549:44:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8524:69:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 958,
																		"nodeType": "ExpressionStatement",
																		"src": "8524:69:0"
																	}
																]
															},
															"id": 960,
															"nodeType": "IfStatement",
															"src": "8230:378:0",
															"trueBody": {
																"id": 928,
																"nodeType": "Block",
																"src": "8267:88:0",
																"statements": [
																	{
																		"expression": {
																			"id": 926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 917,
																					"name": "rewardToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 906,
																					"src": "8285:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																						"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																					}
																				},
																				"id": 919,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "rewardRate",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 60,
																				"src": "8285:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 924,
																						"name": "rewardsDuration",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 25,
																						"src": "8324:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"id": 920,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 875,
																							"src": "8310:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 922,
																						"indexExpression": {
																							"id": 921,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 895,
																							"src": "8317:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8310:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 923,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "div",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2412,
																					"src": "8310:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8310:30:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8285:55:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 927,
																		"nodeType": "ExpressionStatement",
																		"src": "8285:55:0"
																	}
																]
															}
														},
														{
															"assignments": [
																962
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 962,
																	"mutability": "mutable",
																	"name": "balance",
																	"nameLocation": "8630:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 991,
																	"src": "8622:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 961,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8622:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 973,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 970,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "8684:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																					"typeString": "contract MultiRewardsStake"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																					"typeString": "contract MultiRewardsStake"
																				}
																			],
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8676:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 968,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8676:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8676:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 964,
																					"name": "rewardToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 906,
																					"src": "8647:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																						"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																					}
																				},
																				"id": 965,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 58,
																				"src": "8647:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 963,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1584,
																			"src": "8640:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1584_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8640:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1584",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1517,
																	"src": "8640:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8640:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8622:68:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 975,
																				"name": "rewardToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 906,
																				"src": "8712:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																					"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																				}
																			},
																			"id": 976,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "rewardRate",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 60,
																			"src": "8712:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 979,
																					"name": "rewardsDuration",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "8750:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 977,
																					"name": "balance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 962,
																					"src": "8738:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 978,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2412,
																				"src": "8738:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8738:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8712:54:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "52657761726420746f6f2068696768",
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8768:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_da6a2c2e75a1ef97996a5ed7ec90b51579be684745c2068143284d67c1b2f0f1",
																			"typeString": "literal_string \"Reward too high\""
																		},
																		"value": "Reward too high"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_da6a2c2e75a1ef97996a5ed7ec90b51579be684745c2068143284d67c1b2f0f1",
																			"typeString": "literal_string \"Reward too high\""
																		}
																	],
																	"id": 974,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8704:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8704:82:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 984,
															"nodeType": "ExpressionStatement",
															"src": "8704:82:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 986,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 875,
																			"src": "8817:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 988,
																		"indexExpression": {
																			"id": 987,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 895,
																			"src": "8824:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8817:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 985,
																	"name": "RewardAdded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1314,
																	"src": "8805:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8805:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 990,
															"nodeType": "EmitStatement",
															"src": "8800:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 898,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "8119:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 899,
														"name": "_totalRewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "8123:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8119:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 992,
												"initializationExpression": {
													"assignments": [
														895
													],
													"declarations": [
														{
															"constant": false,
															"id": 895,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8112:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 992,
															"src": "8107:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 894,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "8107:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 897,
													"initialValue": {
														"hexValue": "30",
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8116:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8107:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8143:3:0",
														"subExpression": {
															"id": 901,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "8143:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 903,
													"nodeType": "ExpressionStatement",
													"src": "8143:3:0"
												},
												"nodeType": "ForStatement",
												"src": "8102:736:0"
											},
											{
												"expression": {
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 993,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "8848:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 994,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8865:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8865:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8848:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "8848:32:0"
											},
											{
												"expression": {
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 998,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8890:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1002,
																"name": "rewardsDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "8925:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 999,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8905:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8905:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2367,
															"src": "8905:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8905:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8890:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "8890:51:0"
											}
										]
									},
									"functionSelector": "e71e7f78",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 878,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 877,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1402,
												"src": "7979:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7979:9:0"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8010:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8002:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 880,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8002:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8002:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 884,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 879,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "7989:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7989:24:0"
										}
									],
									"name": "notifyRewardAmount",
									"nameLocation": "7928:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "7964:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "7947:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 873,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7947:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 874,
													"nodeType": "ArrayTypeName",
													"src": "7947:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7946:25:0"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8014:0:0"
									},
									"scope": 1333,
									"src": "7919:1029:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "9012:812:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1015,
																"name": "_totalRewardTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "9030:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "36",
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																},
																"value": "6"
															},
															"src": "9030:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6f206d616e7920746f6b656e73",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9054:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2854eb83cae56883ea7529babcc9778251f9933ac00867d851a4275271ac901a",
																"typeString": "literal_string \"Too many tokens\""
															},
															"value": "Too many tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2854eb83cae56883ea7529babcc9778251f9933ac00867d851a4275271ac901a",
																"typeString": "literal_string \"Too many tokens\""
															}
														],
														"id": 1014,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9022:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9022:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "9022:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1028,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "9122:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																					"typeString": "contract MultiRewardsStake"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																					"typeString": "contract MultiRewardsStake"
																				}
																			],
																			"id": 1027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9114:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1026,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9114:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9114:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1023,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1009,
																				"src": "9097:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1022,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1584,
																			"src": "9090:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1584_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9090:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1584",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1517,
																	"src": "9090:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9090:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9131:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742070726566756e6420636f6e7472616374",
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9134:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d2a30cfb4e76336d9b2c80cb01546acee0bf34fecc17e954358e98c0fe2578a",
																"typeString": "literal_string \"Must prefund contract\""
															},
															"value": "Must prefund contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d2a30cfb4e76336d9b2c80cb01546acee0bf34fecc17e954358e98c0fe2578a",
																"typeString": "literal_string \"Must prefund contract\""
															}
														],
														"id": 1021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9082:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9082:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "9082:76:0"
											},
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1036,
														"name": "_totalRewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "9210:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9232:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9210:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "9210:23:0"
											},
											{
												"expression": {
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1040,
															"name": "_rewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "9286:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
															}
														},
														"id": 1042,
														"indexExpression": {
															"id": 1041,
															"name": "_totalRewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "9300:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9286:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RewardToken_$63_storage",
															"typeString": "struct MultiRewardsStake.RewardToken storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1044,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "9355:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9386:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9423:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1043,
															"name": "RewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "9322:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_RewardToken_$63_storage_ptr_$",
																"typeString": "type(struct MultiRewardsStake.RewardToken storage pointer)"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"token",
															"rewardRate",
															"rewardPerTokenStored"
														],
														"nodeType": "FunctionCall",
														"src": "9322:113:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RewardToken_$63_memory_ptr",
															"typeString": "struct MultiRewardsStake.RewardToken memory"
														}
													},
													"src": "9286:149:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RewardToken_$63_storage",
														"typeString": "struct MultiRewardsStake.RewardToken storage ref"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "9286:149:0"
											},
											{
												"expression": {
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1050,
															"name": "_rewardTokenToIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "9446:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1052,
														"indexExpression": {
															"id": 1051,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "9466:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9446:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1053,
														"name": "_totalRewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "9475:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9446:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "9446:47:0"
											},
											{
												"assignments": [
													1060
												],
												"declarations": [
													{
														"constant": false,
														"id": 1060,
														"mutability": "mutable",
														"name": "rewardAmounts",
														"nameLocation": "9521:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1104,
														"src": "9504:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1058,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9504:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1059,
															"nodeType": "ArrayTypeName",
															"src": "9504:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1066,
												"initialValue": {
													"arguments": [
														{
															"id": 1064,
															"name": "_totalRewardTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "9551:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9537:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1061,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9541:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1062,
															"nodeType": "ArrayTypeName",
															"src": "9541:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9537:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9504:66:0"
											},
											{
												"body": {
													"id": 1098,
													"nodeType": "Block",
													"src": "9627:147:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1077,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "9645:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1078,
																		"name": "_totalRewardTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "9650:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9671:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9650:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9645:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1097,
															"nodeType": "IfStatement",
															"src": "9641:123:0",
															"trueBody": {
																"id": 1096,
																"nodeType": "Block",
																"src": "9674:90:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1082,
																					"name": "rewardAmounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1060,
																					"src": "9692:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1084,
																				"indexExpression": {
																					"id": 1083,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1068,
																					"src": "9706:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "9692:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 1091,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "9743:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																									"typeString": "contract MultiRewardsStake"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																									"typeString": "contract MultiRewardsStake"
																								}
																							],
																							"id": 1090,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "9735:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 1089,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "9735:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1092,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9735:13:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 1086,
																								"name": "token",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1009,
																								"src": "9718:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 1085,
																							"name": "IERC20",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1584,
																							"src": "9711:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_IERC20_$1584_$",
																								"typeString": "type(contract IERC20)"
																							}
																						},
																						"id": 1087,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9711:13:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$1584",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 1088,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balanceOf",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1517,
																					"src": "9711:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view external returns (uint256)"
																					}
																				},
																				"id": 1093,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9711:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9692:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1095,
																		"nodeType": "ExpressionStatement",
																		"src": "9692:57:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1071,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "9598:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1072,
														"name": "_totalRewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "9602:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9598:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1099,
												"initializationExpression": {
													"assignments": [
														1068
													],
													"declarations": [
														{
															"constant": false,
															"id": 1068,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9591:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1099,
															"src": "9586:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1067,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "9586:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1070,
													"initialValue": {
														"hexValue": "30",
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9595:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9586:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9622:3:0",
														"subExpression": {
															"id": 1074,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "9622:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1076,
													"nodeType": "ExpressionStatement",
													"src": "9622:3:0"
												},
												"nodeType": "ForStatement",
												"src": "9581:193:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1101,
															"name": "rewardAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "9803:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1100,
														"name": "notifyRewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "9784:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256[] memory)"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9784:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "9784:33:0"
											}
										]
									},
									"functionSelector": "1c03e6cc",
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1012,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1011,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1402,
												"src": "9002:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9002:9:0"
										}
									],
									"name": "addRewardToken",
									"nameLocation": "8963:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8986:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "8978:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8978:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8977:15:0"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9012:0:0"
									},
									"scope": 1333,
									"src": "8954:870:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "9914:765:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1119,
																"name": "_totalRewardTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "9932:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9953:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "9932:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206861766520302072657761726420746f6b656e73",
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9956:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_440d0bb91dcfc5e17342b3768116df531a121a1693edbb4baf6c405d72e94d91",
																"typeString": "literal_string \"Cannot have 0 reward tokens\""
															},
															"value": "Cannot have 0 reward tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_440d0bb91dcfc5e17342b3768116df531a121a1693edbb4baf6c405d72e94d91",
																"typeString": "literal_string \"Cannot have 0 reward tokens\""
															}
														],
														"id": 1118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9924:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "9924:62:0"
											},
											{
												"assignments": [
													1126
												],
												"declarations": [
													{
														"constant": false,
														"id": 1126,
														"mutability": "mutable",
														"name": "indexToDelete",
														"nameLocation": "10045:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1176,
														"src": "10040:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1125,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10040:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1130,
												"initialValue": {
													"baseExpression": {
														"id": 1127,
														"name": "_rewardTokenToIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "10061:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1129,
													"indexExpression": {
														"id": 1128,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "10081:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10061:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10040:47:0"
											},
											{
												"body": {
													"id": 1170,
													"nodeType": "Block",
													"src": "10250:389:0",
													"statements": [
														{
															"assignments": [
																1143
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1143,
																	"mutability": "mutable",
																	"name": "rewardToken",
																	"nameLocation": "10328:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1170,
																	"src": "10308:31:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																		"typeString": "struct MultiRewardsStake.RewardToken"
																	},
																	"typeName": {
																		"id": 1142,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1141,
																			"name": "RewardToken",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 63,
																			"src": "10308:11:0"
																		},
																		"referencedDeclaration": 63,
																		"src": "10308:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																			"typeString": "struct MultiRewardsStake.RewardToken"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1149,
															"initialValue": {
																"baseExpression": {
																	"id": 1144,
																	"name": "_rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "10342:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																		"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																	}
																},
																"id": 1148,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1145,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "10356:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10360:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10356:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10342:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																	"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10308:54:0"
														},
														{
															"expression": {
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1150,
																		"name": "_rewardTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "10439:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																			"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																		}
																	},
																	"id": 1152,
																	"indexExpression": {
																		"id": 1151,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "10453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10439:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																		"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1153,
																	"name": "rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "10458:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																		"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																	}
																},
																"src": "10439:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																	"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																}
															},
															"id": 1155,
															"nodeType": "ExpressionStatement",
															"src": "10439:30:0"
														},
														{
															"expression": {
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "10515:27:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 1156,
																		"name": "_rewardTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "10522:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																			"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																		}
																	},
																	"id": 1160,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1157,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1132,
																			"src": "10536:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10540:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10536:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10522:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																		"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1162,
															"nodeType": "ExpressionStatement",
															"src": "10515:27:0"
														},
														{
															"expression": {
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1163,
																		"name": "_rewardTokenToIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "10586:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1166,
																	"indexExpression": {
																		"expression": {
																			"id": 1164,
																			"name": "rewardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1143,
																			"src": "10606:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																				"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																			}
																		},
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 58,
																		"src": "10606:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10586:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1167,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "10627:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10586:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1169,
															"nodeType": "ExpressionStatement",
															"src": "10586:42:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1135,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "10220:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1136,
														"name": "_totalRewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "10225:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10220:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1171,
												"initializationExpression": {
													"assignments": [
														1132
													],
													"declarations": [
														{
															"constant": false,
															"id": 1132,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10201:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1171,
															"src": "10196:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1131,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "10196:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1134,
													"initialValue": {
														"id": 1133,
														"name": "indexToDelete",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "10205:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10196:22:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10245:3:0",
														"subExpression": {
															"id": 1138,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "10245:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1140,
													"nodeType": "ExpressionStatement",
													"src": "10245:3:0"
												},
												"nodeType": "ForStatement",
												"src": "10191:448:0"
											},
											{
												"expression": {
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1172,
														"name": "_totalRewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "10649:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10671:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10649:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "10649:23:0"
											}
										]
									},
									"functionSelector": "3d509c97",
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1110,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1109,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1402,
												"src": "9879:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9879:9:0"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9910:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9902:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1112,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9902:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9902:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1116,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1111,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "9889:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9889:24:0"
										}
									],
									"name": "removeRewardToken",
									"nameLocation": "9839:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9865:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "9857:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9856:15:0"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9914:0:0"
									},
									"scope": 1333,
									"src": "9830:849:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "10773:215:0",
										"statements": [
											{
												"assignments": [
													1191
												],
												"declarations": [
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "10791:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "10783:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1190,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10783:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1198,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10833:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																		"typeString": "contract MultiRewardsStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MultiRewardsStake_$1333",
																		"typeString": "contract MultiRewardsStake"
																	}
																],
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10825:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1196,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10825:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10825:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1193,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "10808:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1192,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1584,
																"src": "10801:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1584_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10801:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1584",
																"typeString": "contract IERC20"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1517,
														"src": "10801:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10801:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10783:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1203,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1191,
																"src": "10857:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10867:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10857:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420686f6c6473206e6f20746f6b656e73",
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10870:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f59ac452818e0de8831336b02924e8d8f784421e5ded6b2890861e5496a0111d",
																"typeString": "literal_string \"Contract holds no tokens\""
															},
															"value": "Contract holds no tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f59ac452818e0de8831336b02924e8d8f784421e5ded6b2890861e5496a0111d",
																"typeString": "literal_string \"Contract holds no tokens\""
															}
														],
														"id": 1202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10849:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10849:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "10849:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1213,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "10930:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10930:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "10939:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1210,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "10914:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1209,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1584,
																"src": "10907:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1584_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10907:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1584",
																"typeString": "contract IERC20"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1527,
														"src": "10907:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10907:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "10907:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1219,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "10975:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1218,
														"name": "removeRewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "10957:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10957:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "10957:24:0"
											}
										]
									},
									"functionSelector": "6e353a1d",
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1181,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1402,
												"src": "10738:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10738:9:0"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10769:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10761:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1184,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10761:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10761:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1188,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1183,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "10748:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10748:24:0"
										}
									],
									"name": "emergencyWithdrawal",
									"nameLocation": "10694:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "10722:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "10714:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10713:15:0"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10773:0:0"
									},
									"scope": 1333,
									"src": "10685:303:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "11062:629:0",
										"statements": [
											{
												"assignments": [
													1231
												],
												"declarations": [
													{
														"constant": false,
														"id": 1231,
														"mutability": "mutable",
														"name": "rewardsPerToken",
														"nameLocation": "11089:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1309,
														"src": "11072:32:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1229,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11072:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1230,
															"nodeType": "ArrayTypeName",
															"src": "11072:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1234,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1232,
														"name": "rewardPerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "11107:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function () view returns (uint256[] memory)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11107:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11072:51:0"
											},
											{
												"assignments": [
													1239
												],
												"declarations": [
													{
														"constant": false,
														"id": 1239,
														"mutability": "mutable",
														"name": "currentEarnings",
														"nameLocation": "11150:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1309,
														"src": "11133:32:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1237,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11133:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1238,
															"nodeType": "ArrayTypeName",
															"src": "11133:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1243,
												"initialValue": {
													"arguments": [
														{
															"id": 1241,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "11175:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1240,
														"name": "earned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "11168:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (address) view returns (uint256[] memory)"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11168:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11133:50:0"
											},
											{
												"expression": {
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1244,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "11193:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1245,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "11210:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11210:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11193:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "11193:43:0"
											},
											{
												"body": {
													"id": 1306,
													"nodeType": "Block",
													"src": "11292:382:0",
													"statements": [
														{
															"assignments": [
																1261
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1261,
																	"mutability": "mutable",
																	"name": "rewardToken",
																	"nameLocation": "11326:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1306,
																	"src": "11306:31:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																		"typeString": "struct MultiRewardsStake.RewardToken"
																	},
																	"typeName": {
																		"id": 1260,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1259,
																			"name": "RewardToken",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 63,
																			"src": "11306:11:0"
																		},
																		"referencedDeclaration": 63,
																		"src": "11306:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																			"typeString": "struct MultiRewardsStake.RewardToken"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1267,
															"initialValue": {
																"baseExpression": {
																	"id": 1262,
																	"name": "_rewardTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "11340:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardToken_$63_storage_$",
																		"typeString": "mapping(uint256 => struct MultiRewardsStake.RewardToken storage ref)"
																	}
																},
																"id": 1266,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1263,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1250,
																		"src": "11354:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11358:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "11354:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11340:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardToken_$63_storage",
																	"typeString": "struct MultiRewardsStake.RewardToken storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11306:54:0"
														},
														{
															"expression": {
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1268,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "11374:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																			"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																		}
																	},
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardPerTokenStored",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 62,
																	"src": "11374:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1271,
																		"name": "rewardsPerToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "11409:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1273,
																	"indexExpression": {
																		"id": 1272,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1250,
																		"src": "11425:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11409:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11374:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1275,
															"nodeType": "ExpressionStatement",
															"src": "11374:53:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1276,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "11445:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11464:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11456:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1277,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11456:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11456:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "11445:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1305,
															"nodeType": "IfStatement",
															"src": "11441:223:0",
															"trueBody": {
																"id": 1304,
																"nodeType": "Block",
																"src": "11468:196:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 1282,
																						"name": "_rewards",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 39,
																						"src": "11486:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(address => mapping(address => uint256))"
																						}
																					},
																					"id": 1286,
																					"indexExpression": {
																						"id": 1283,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1225,
																						"src": "11495:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "11486:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1287,
																				"indexExpression": {
																					"expression": {
																						"id": 1284,
																						"name": "rewardToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1261,
																						"src": "11504:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																							"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																						}
																					},
																					"id": 1285,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "token",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 58,
																					"src": "11504:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "11486:36:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1288,
																					"name": "currentEarnings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1239,
																					"src": "11525:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1290,
																				"indexExpression": {
																					"id": 1289,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1250,
																					"src": "11541:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11525:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11486:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1292,
																		"nodeType": "ExpressionStatement",
																		"src": "11486:57:0"
																	},
																	{
																		"expression": {
																			"id": 1302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 1293,
																						"name": "_userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 33,
																						"src": "11561:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(address => mapping(address => uint256))"
																						}
																					},
																					"id": 1297,
																					"indexExpression": {
																						"id": 1294,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1225,
																						"src": "11585:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "11561:32:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1298,
																				"indexExpression": {
																					"expression": {
																						"id": 1295,
																						"name": "rewardToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1261,
																						"src": "11594:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_RewardToken_$63_storage_ptr",
																							"typeString": "struct MultiRewardsStake.RewardToken storage pointer"
																						}
																					},
																					"id": 1296,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "token",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 58,
																					"src": "11594:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "11561:51:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1299,
																					"name": "rewardsPerToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1231,
																					"src": "11615:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1301,
																				"indexExpression": {
																					"id": 1300,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1250,
																					"src": "11631:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11615:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11561:72:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1303,
																		"nodeType": "ExpressionStatement",
																		"src": "11561:72:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1253,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "11263:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1254,
														"name": "_totalRewardTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "11267:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11263:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1307,
												"initializationExpression": {
													"assignments": [
														1250
													],
													"declarations": [
														{
															"constant": false,
															"id": 1250,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11256:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1307,
															"src": "11251:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1249,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "11251:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1252,
													"initialValue": {
														"hexValue": "30",
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11260:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11251:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11287:3:0",
														"subExpression": {
															"id": 1256,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "11287:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1258,
													"nodeType": "ExpressionStatement",
													"src": "11287:3:0"
												},
												"nodeType": "ForStatement",
												"src": "11246:428:0"
											},
											{
												"id": 1308,
												"nodeType": "PlaceholderStatement",
												"src": "11683:1:0"
											}
										]
									},
									"id": 1310,
									"name": "updateReward",
									"nameLocation": "11032:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11053:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "11045:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11045:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11044:17:0"
									},
									"src": "11023:668:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 1314,
									"name": "RewardAdded",
									"nameLocation": "11729:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "11749:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "11741:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11740:16:0"
									},
									"src": "11723:34:0"
								},
								{
									"anonymous": false,
									"id": 1320,
									"name": "Staked",
									"nameLocation": "11768:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11791:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "11775:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11805:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "11797:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11774:38:0"
									},
									"src": "11762:51:0"
								},
								{
									"anonymous": false,
									"id": 1326,
									"name": "Withdrawn",
									"nameLocation": "11824:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11850:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11834:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11834:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11864:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11856:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11833:38:0"
									},
									"src": "11818:54:0"
								},
								{
									"anonymous": false,
									"id": 1332,
									"name": "RewardPaid",
									"nameLocation": "11883:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11910:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "11894:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "11924:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "11916:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11893:38:0"
									},
									"src": "11877:55:0"
								}
							],
							"scope": 1334,
							"src": "301:11633:0",
							"usedErrors": []
						}
					],
					"src": "32:11902:0"
				},
				"id": 0
			},
			"github/nobi/staking/contracts/helpers/Context.sol": {
				"ast": {
					"absolutePath": "github/nobi/staking/contracts/helpers/Context.sol",
					"exportedSymbols": {
						"Context": [
							1355
						]
					},
					"id": 1356,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1335,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1336,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1355,
							"linearizedBaseContracts": [
								1355
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1341,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1340,
												"id": 1343,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 1355,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1350,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1349,
												"id": 1352,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1347,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 1355,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1356,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:757:1"
				},
				"id": 1
			},
			"github/nobi/staking/contracts/helpers/Ownable.sol": {
				"ast": {
					"absolutePath": "github/nobi/staking/contracts/helpers/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1355
						],
						"Ownable": [
							1460
						]
					},
					"id": 1461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1357,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:2"
						},
						{
							"absolutePath": "github/nobi/staking/contracts/helpers/Context.sol",
							"file": "./Context.sol",
							"id": 1358,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1461,
							"sourceUnit": 1356,
							"src": "112:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1360,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1355,
										"src": "661:7:2"
									},
									"id": 1361,
									"nodeType": "InheritanceSpecifier",
									"src": "661:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1359,
								"nodeType": "StructuredDocumentation",
								"src": "137:494:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1460,
							"linearizedBaseContracts": [
								1460,
								1355
							],
							"name": "Ownable",
							"nameLocation": "650:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1363,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "691:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1460,
									"src": "675:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1362,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "675:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 1369,
									"name": "OwnershipTransferred",
									"nameLocation": "710:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "747:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "731:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "778:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "762:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:57:2"
									},
									"src": "704:84:2"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "904:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1374,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "933:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "933:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1373,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "914:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "914:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "914:32:2"
											}
										]
									},
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "794:91:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1379,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "901:2:2"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:0:2"
									},
									"scope": 1460,
									"src": "890:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "1084:30:2",
										"statements": [
											{
												"expression": {
													"id": 1385,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1363,
													"src": "1101:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1384,
												"id": 1386,
												"nodeType": "Return",
												"src": "1094:13:2"
											}
										]
									},
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "959:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1038:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1043:2:2"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "1075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:2"
									},
									"scope": 1460,
									"src": "1029:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "1223:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1392,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "1241:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1241:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1394,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1345,
																	"src": "1252:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1252:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1241:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1266:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1233:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1233:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "1233:68:2"
											},
											{
												"id": 1400,
												"nodeType": "PlaceholderStatement",
												"src": "1311:1:2"
											}
										]
									},
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "1120:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1402,
									"name": "onlyOwner",
									"nameLocation": "1211:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1220:2:2"
									},
									"src": "1202:117:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "1715:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1752:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1744:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1409,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1744:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1744:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1408,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "1725:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1725:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "1725:30:2"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "1325:331:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1406,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1405,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1402,
												"src": "1705:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1705:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1670:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1687:2:2"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1715:0:2"
									},
									"scope": 1460,
									"src": "1661:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "1981:128:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1425,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "1999:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2019:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2011:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1426,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2011:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2011:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1999:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2023:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1991:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1991:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1433,
												"nodeType": "ExpressionStatement",
												"src": "1991:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1435,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "2093:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1434,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "2074:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "2074:28:2"
											}
										]
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "1768:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1422,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1421,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1402,
												"src": "1971:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1971:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1920:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1946:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "1938:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:18:2"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1981:0:2"
									},
									"scope": 1460,
									"src": "1911:198:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1458,
										"nodeType": "Block",
										"src": "2326:124:2",
										"statements": [
											{
												"assignments": [
													1446
												],
												"declarations": [
													{
														"constant": false,
														"id": 1446,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2344:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1458,
														"src": "2336:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1445,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2336:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1448,
												"initialValue": {
													"id": 1447,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1363,
													"src": "2355:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2336:25:2"
											},
											{
												"expression": {
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1449,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "2371:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1450,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "2380:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2371:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1452,
												"nodeType": "ExpressionStatement",
												"src": "2371:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1454,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "2424:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1455,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "2434:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1453,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "2403:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2403:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1457,
												"nodeType": "EmitStatement",
												"src": "2398:45:2"
											}
										]
									},
									"documentation": {
										"id": 1440,
										"nodeType": "StructuredDocumentation",
										"src": "2115:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2272:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2299:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "2291:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:18:2"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2326:0:2"
									},
									"scope": 1460,
									"src": "2263:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1461,
							"src": "632:1820:2",
							"usedErrors": []
						}
					],
					"src": "87:2365:2"
				},
				"id": 2
			},
			"github/nobi/staking/contracts/helpers/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "github/nobi/staking/contracts/helpers/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1500
						]
					},
					"id": 1501,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1463,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1500,
							"linearizedBaseContracts": [
								1500
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1466,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1500,
									"src": "1661:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1464,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1465,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1469,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 1500,
									"src": "1708:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1467,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1468,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1471,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1500,
									"src": "1752:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1470,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "1796:39:3",
										"statements": [
											{
												"expression": {
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1474,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "1806:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1475,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "1816:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:3"
											}
										]
									},
									"id": 1479,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:3"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:3"
									},
									"scope": 1500,
									"src": "1782:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1498,
										"nodeType": "Block",
										"src": "2236:421:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1483,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "2325:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1484,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "2336:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 1482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:3"
											},
											{
												"expression": {
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1489,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "2455:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1490,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "2465:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:3"
											},
											{
												"id": 1493,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:3"
											},
											{
												"expression": {
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1494,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "2628:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1495,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "2638:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:3"
											}
										]
									},
									"documentation": {
										"id": 1480,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1499,
									"name": "nonReentrant",
									"nameLocation": "2221:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:3"
									},
									"src": "2212:445:3",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1501,
							"src": "873:1786:3",
							"usedErrors": []
						}
					],
					"src": "97:2562:3"
				},
				"id": 3
			},
			"github/nobi/staking/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "github/nobi/staking/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1584
						]
					},
					"id": 1585,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1502,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1503,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1584,
							"linearizedBaseContracts": [
								1584
							],
							"name": "IERC20",
							"nameLocation": "197:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:4"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "327:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:4"
									},
									"scope": 1584,
									"src": "281:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "438:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:4"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "478:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:4"
									},
									"scope": 1584,
									"src": "419:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "493:202:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "709:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "726:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "718:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "738:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "730:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:28:4"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "764:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "764:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:6:4"
									},
									"scope": 1584,
									"src": "700:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "776:67:4",
										"text": " @dev Returns the amount of decimals in the token"
									},
									"functionSelector": "313ce567",
									"id": 1533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "857:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:4"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "891:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:9:4"
									},
									"scope": 1584,
									"src": "848:52:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "906:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1543,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1184:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1202:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "1194:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1194:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1217:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "1209:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1193:32:4"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "1249:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1248:9:4"
									},
									"scope": 1584,
									"src": "1175:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1544,
										"nodeType": "StructuredDocumentation",
										"src": "1264:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1920:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1936:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "1928:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1953:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "1945:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1927:33:4"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "1979:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1979:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1978:6:4"
									},
									"scope": 1584,
									"src": "1911:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "1991:287:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2292:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2322:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "2314:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2344:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "2336:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2364:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "2356:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2304:72:4"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "2395:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2395:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:6:4"
									},
									"scope": 1584,
									"src": "2283:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "2407:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1574,
									"name": "Transfer",
									"nameLocation": "2576:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2601:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "2585:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2623:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "2607:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2635:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "2627:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2584:57:4"
									},
									"src": "2570:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "2648:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1583,
									"name": "Approval",
									"nameLocation": "2807:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2832:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "2816:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2816:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2855:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "2839:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2839:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2872:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "2864:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2864:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2815:63:4"
									},
									"src": "2801:78:4"
								}
							],
							"scope": 1585,
							"src": "187:2694:4",
							"usedErrors": []
						}
					],
					"src": "91:2790:4"
				},
				"id": 4
			},
			"github/nobi/staking/contracts/libraries/Address.sol": {
				"ast": {
					"absolutePath": "github/nobi/staking/contracts/libraries/Address.sol",
					"exportedSymbols": {
						"Address": [
							1879
						]
					},
					"id": 1880,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1586,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1587,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1879,
							"linearizedBaseContracts": [
								1879
							],
							"name": "Address",
							"nameLocation": "187:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "1226:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1595,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "1450:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1450:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1450:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1472:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1450:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1594,
												"id": 1600,
												"nodeType": "Return",
												"src": "1443:30:5"
											}
										]
									},
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "201:954:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1169:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1188:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "1180:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:17:5"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "1220:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1592,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1220:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:6:5"
									},
									"scope": 1879,
									"src": "1160:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "2468:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1613,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2494:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1879",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1879",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2486:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1611,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2486:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2486:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2486:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1616,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1607,
																"src": "2511:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2486:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2519:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2478:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2478:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1620,
												"nodeType": "ExpressionStatement",
												"src": "2478:73:5"
											},
											{
												"assignments": [
													1622,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2568:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1635,
														"src": "2563:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1621,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2563:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1629,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2611:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1623,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "2581:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2581:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1625,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1607,
																"src": "2603:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2581:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2562:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1631,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "2632:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2641:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1630,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2624:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2624:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1634,
												"nodeType": "ExpressionStatement",
												"src": "2624:78:5"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "1486:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2406:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2432:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "2416:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2416:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2451:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "2443:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2415:43:5"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2468:0:5"
									},
									"scope": 1879,
									"src": "2397:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "3540:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1647,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "3570:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1648,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "3578:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3584:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1646,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1653,
															1673
														],
														"referencedDeclaration": 1673,
														"src": "3557:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3557:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1645,
												"id": 1651,
												"nodeType": "Return",
												"src": "3550:67:5"
											}
										]
									},
									"documentation": {
										"id": 1637,
										"nodeType": "StructuredDocumentation",
										"src": "2715:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3460:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3481:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "3473:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3502:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "3489:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3489:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3472:35:5"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "3526:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3526:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:14:5"
									},
									"scope": 1879,
									"src": "3451:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1672,
										"nodeType": "Block",
										"src": "3993:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1666,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1656,
															"src": "4032:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1667,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "4040:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4046:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1669,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "4049:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1665,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1693,
															1743
														],
														"referencedDeclaration": 1743,
														"src": "4010:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4010:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1664,
												"id": 1671,
												"nodeType": "Return",
												"src": "4003:59:5"
											}
										]
									},
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "3630:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3855:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3885:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3877:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3877:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3914:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3901:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1657,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3901:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3942:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3928:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1659,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3928:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3867:93:5"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3979:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3979:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:14:5"
									},
									"scope": 1879,
									"src": "3846:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "4574:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1686,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "4613:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1687,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "4621:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1688,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1680,
															"src": "4627:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4634:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1685,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1693,
															1743
														],
														"referencedDeclaration": 1743,
														"src": "4591:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4591:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1684,
												"id": 1691,
												"nodeType": "Return",
												"src": "4584:94:5"
											}
										]
									},
									"documentation": {
										"id": 1674,
										"nodeType": "StructuredDocumentation",
										"src": "4075:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4440:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4479:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "4471:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4508:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "4495:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1677,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4530:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "4522:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4522:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4461:80:5"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "4560:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4560:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4559:14:5"
									},
									"scope": 1879,
									"src": "4431:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1742,
										"nodeType": "Block",
										"src": "5112:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1710,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5138:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1879",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1879",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5130:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1708,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5130:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5130:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5130:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1713,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1700,
																"src": "5155:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5130:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5162:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5122:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5122:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1717,
												"nodeType": "ExpressionStatement",
												"src": "5122:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1720,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1696,
																	"src": "5232:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1719,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "5221:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5221:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5241:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1718,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5213:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5213:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "5213:60:5"
											},
											{
												"assignments": [
													1726,
													1728
												],
												"declarations": [
													{
														"constant": false,
														"id": 1726,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5290:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1742,
														"src": "5285:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1725,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5285:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1728,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5312:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1742,
														"src": "5299:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1727,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5299:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1735,
												"initialValue": {
													"arguments": [
														{
															"id": 1733,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "5352:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1729,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "5326:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5326:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1731,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1700,
																"src": "5345:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5326:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5326:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5284:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1737,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "5391:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1738,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "5400:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1739,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "5412:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1736,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "5374:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5374:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1706,
												"id": 1741,
												"nodeType": "Return",
												"src": "5367:58:5"
											}
										]
									},
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "4691:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4942:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4981:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "4973:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4973:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5010:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "4997:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1697,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4997:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5032:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "5024:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5024:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5061:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "5047:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1701,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5047:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:116:5"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "5098:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5098:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5097:14:5"
									},
									"scope": 1879,
									"src": "4933:499:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "5709:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1754,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "5745:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1755,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "5753:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1753,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1760,
															1795
														],
														"referencedDeclaration": 1795,
														"src": "5726:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5726:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1752,
												"id": 1758,
												"nodeType": "Return",
												"src": "5719:80:5"
											}
										]
									},
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "5438:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5618:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5645:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "5637:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "5653:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1747,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5653:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:35:5"
									},
									"returnParameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "5695:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1750,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5695:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5694:14:5"
									},
									"scope": 1879,
									"src": "5609:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "6148:228:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1774,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1763,
																	"src": "6177:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1773,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "6166:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6166:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6186:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1772,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6158:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6158:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "6158:67:5"
											},
											{
												"assignments": [
													1780,
													1782
												],
												"declarations": [
													{
														"constant": false,
														"id": 1780,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6242:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1794,
														"src": "6237:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1779,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6237:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1782,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6264:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1794,
														"src": "6251:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1781,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6251:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1787,
												"initialValue": {
													"arguments": [
														{
															"id": 1785,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "6296:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1783,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "6278:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6278:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6278:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6236:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1789,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1780,
															"src": "6335:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1790,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "6344:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1791,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "6356:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1788,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "6318:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6318:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1771,
												"id": 1793,
												"nodeType": "Return",
												"src": "6311:58:5"
											}
										]
									},
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "5812:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5999:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6035:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "6027:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6027:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6064:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "6051:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1764,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6051:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6092:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "6078:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6078:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6017:93:5"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "6134:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6134:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6133:14:5"
									},
									"scope": 1879,
									"src": "5990:386:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "6652:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1806,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "6690:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1807,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "6698:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6704:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1805,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1812,
															1847
														],
														"referencedDeclaration": 1847,
														"src": "6669:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6669:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1804,
												"id": 1810,
												"nodeType": "Return",
												"src": "6662:84:5"
											}
										]
									},
									"documentation": {
										"id": 1796,
										"nodeType": "StructuredDocumentation",
										"src": "6382:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6564:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6593:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "6585:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6585:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6614:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "6601:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1799,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6601:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6584:35:5"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "6638:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1802,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6638:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6637:14:5"
									},
									"scope": 1879,
									"src": "6555:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1846,
										"nodeType": "Block",
										"src": "7094:232:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1826,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "7123:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1825,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "7112:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7112:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7132:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1824,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7104:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7104:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1830,
												"nodeType": "ExpressionStatement",
												"src": "7104:69:5"
											},
											{
												"assignments": [
													1832,
													1834
												],
												"declarations": [
													{
														"constant": false,
														"id": 1832,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7190:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1846,
														"src": "7185:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1831,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7185:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1834,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7212:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1846,
														"src": "7199:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1833,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7199:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1839,
												"initialValue": {
													"arguments": [
														{
															"id": 1837,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "7246:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1835,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1815,
															"src": "7226:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7226:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7226:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7184:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1841,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "7285:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1842,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "7294:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1843,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "7306:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1840,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "7268:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7268:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1823,
												"id": 1845,
												"nodeType": "Return",
												"src": "7261:58:5"
											}
										]
									},
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "6759:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6948:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6986:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "6978:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6978:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7015:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "7002:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1816,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7002:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7043:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "7029:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1818,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7029:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6968:93:5"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "7080:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1821,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7080:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7079:14:5"
									},
									"scope": 1879,
									"src": "6939:387:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "7706:532:5",
										"statements": [
											{
												"condition": {
													"id": 1859,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1850,
													"src": "7720:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1875,
													"nodeType": "Block",
													"src": "7777:455:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1863,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1852,
																		"src": "7861:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7861:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7881:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7861:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1873,
																"nodeType": "Block",
																"src": "8169:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1870,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1854,
																					"src": "8194:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1869,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8187:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8187:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1872,
																		"nodeType": "ExpressionStatement",
																		"src": "8187:20:5"
																	}
																]
															},
															"id": 1874,
															"nodeType": "IfStatement",
															"src": "7857:365:5",
															"trueBody": {
																"id": 1868,
																"nodeType": "Block",
																"src": "7884:279:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8004:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8026:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8055:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8049:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8049:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8030:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8098:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8102:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8094:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8094:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8115:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8087:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8087:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8087:44:5"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1852,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8055:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1852,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8102:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1867,
																		"nodeType": "InlineAssembly",
																		"src": "7995:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1876,
												"nodeType": "IfStatement",
												"src": "7716:516:5",
												"trueBody": {
													"id": 1862,
													"nodeType": "Block",
													"src": "7729:42:5",
													"statements": [
														{
															"expression": {
																"id": 1860,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1852,
																"src": "7750:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1858,
															"id": 1861,
															"nodeType": "Return",
															"src": "7743:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "7332:209:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7555:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7586:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "7581:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1849,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7581:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7616:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "7603:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1851,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7603:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7650:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "7636:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1853,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7636:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7571:97:5"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "7692:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1856,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7692:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7691:14:5"
									},
									"scope": 1879,
									"src": "7546:692:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1880,
							"src": "179:8061:5",
							"usedErrors": []
						}
					],
					"src": "86:8154:5"
				},
				"id": 5
			},
			"github/nobi/staking/contracts/libraries/Math.sol": {
				"ast": {
					"absolutePath": "github/nobi/staking/contracts/libraries/Math.sol",
					"exportedSymbols": {
						"Math": [
							1967
						]
					},
					"id": 1968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1881,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1882,
								"nodeType": "StructuredDocumentation",
								"src": "113:73:6",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1967,
							"linearizedBaseContracts": [
								1967
							],
							"name": "Math",
							"nameLocation": "195:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1899,
										"nodeType": "Block",
										"src": "337:38:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1892,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "354:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 1893,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1887,
															"src": "359:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "354:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1896,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1887,
														"src": "367:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "354:14:6",
													"trueExpression": {
														"id": 1895,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1885,
														"src": "363:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1891,
												"id": 1898,
												"nodeType": "Return",
												"src": "347:21:6"
											}
										]
									},
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "206:59:6",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "279:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "291:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "283:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "302:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "294:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "282:22:6"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "328:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "327:9:6"
									},
									"scope": 1967,
									"src": "270:105:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "513:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1910,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "530:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1911,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "534:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "530:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1914,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1905,
														"src": "542:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "530:13:6",
													"trueExpression": {
														"id": 1913,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1903,
														"src": "538:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1909,
												"id": 1916,
												"nodeType": "Return",
												"src": "523:20:6"
											}
										]
									},
									"documentation": {
										"id": 1901,
										"nodeType": "StructuredDocumentation",
										"src": "381:60:6",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "455:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "467:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "459:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "478:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "470:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:22:6"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "504:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:9:6"
									},
									"scope": 1967,
									"src": "446:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "734:82:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1928,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1921,
																	"src": "789:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1929,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1923,
																	"src": "793:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "789:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1931,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "788:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1932,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1921,
																		"src": "799:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1933,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1923,
																		"src": "803:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "799:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1935,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "798:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "808:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "798:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "788:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1927,
												"id": 1939,
												"nodeType": "Return",
												"src": "781:28:6"
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "556:102:6",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "672:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "688:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "680:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "699:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "691:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "679:22:6"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "725:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:9:6"
									},
									"scope": 1967,
									"src": "663:153:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "1086:123:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1951,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "1174:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1952,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "1178:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1174:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1954,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1944,
																			"src": "1183:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 1955,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1946,
																			"src": "1187:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1183:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1192:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1183:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "31",
																	"id": 1960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1200:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1183:18:6",
																"trueExpression": {
																	"hexValue": "30",
																	"id": 1959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1196:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 1962,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1182:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1174:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1950,
												"id": 1964,
												"nodeType": "Return",
												"src": "1167:35:6"
											}
										]
									},
									"documentation": {
										"id": 1942,
										"nodeType": "StructuredDocumentation",
										"src": "822:188:6",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1024:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1040:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "1032:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1051:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "1043:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:22:6"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "1077:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:9:6"
									},
									"scope": 1967,
									"src": "1015:194:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1968,
							"src": "187:1024:6",
							"usedErrors": []
						}
					],
					"src": "88:1123:6"
				},
				"id": 6
			},
			"github/nobi/staking/contracts/libraries/SafeERC20.sol": {
				"ast": {
					"absolutePath": "github/nobi/staking/contracts/libraries/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1879
						],
						"IERC20": [
							1584
						],
						"SafeERC20": [
							2191
						]
					},
					"id": 2192,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1969,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"absolutePath": "github/nobi/staking/contracts/interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 1970,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2192,
							"sourceUnit": 1585,
							"src": "125:34:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github/nobi/staking/contracts/libraries/Address.sol",
							"file": "./Address.sol",
							"id": 1971,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2192,
							"sourceUnit": 1880,
							"src": "160:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1972,
								"nodeType": "StructuredDocumentation",
								"src": "185:457:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2191,
							"linearizedBaseContracts": [
								2191
							],
							"name": "SafeERC20",
							"nameLocation": "651:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1975,
									"libraryName": {
										"id": 1973,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1879,
										"src": "673:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "667:26:7",
									"typeName": {
										"id": 1974,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "685:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "801:103:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1986,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1978,
															"src": "831:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1584",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1989,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1978,
																			"src": "861:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1584",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1527,
																		"src": "861:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "861:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1992,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1980,
																	"src": "886:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1993,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1982,
																	"src": "890:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1987,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "838:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "838:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "838:58:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1584",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1985,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2190,
														"src": "811:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1584_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "811:86:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1996,
												"nodeType": "ExpressionStatement",
												"src": "811:86:7"
											}
										]
									},
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "708:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "737:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "730:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1584",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1977,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1976,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1584,
														"src": "730:6:7"
													},
													"referencedDeclaration": 1584,
													"src": "730:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1584",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "760:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "752:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "780:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "772:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:71:7"
									},
									"returnParameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "801:0:7"
									},
									"scope": 2191,
									"src": "699:205:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2023,
										"nodeType": "Block",
										"src": "1038:113:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2011,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "1068:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1584",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2014,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2001,
																			"src": "1098:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1584",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1565,
																		"src": "1098:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1098:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2017,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2003,
																	"src": "1127:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2018,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2005,
																	"src": "1133:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2019,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2007,
																	"src": "1137:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2012,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1075:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1075:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1075:68:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1584",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2010,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2190,
														"src": "1048:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1584_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1048:96:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2022,
												"nodeType": "ExpressionStatement",
												"src": "1048:96:7"
											}
										]
									},
									"id": 2024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "919:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "952:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "945:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1584",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2000,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1999,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1584,
														"src": "945:6:7"
													},
													"referencedDeclaration": 1584,
													"src": "945:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1584",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "975:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "967:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "997:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "989:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1017:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "1009:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "935:93:7"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1038:0:7"
									},
									"scope": 2191,
									"src": "910:241:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "1517:497:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2036,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2032,
																			"src": "1766:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1775:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1766:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2039,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1765:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2044,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1806:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$2191",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$2191",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 2043,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1798:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2042,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1798:7:7",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2045,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1798:13:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2046,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2030,
																					"src": "1813:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 2040,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2028,
																					"src": "1782:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1584",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2041,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1543,
																				"src": "1782:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 2047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1782:39:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1825:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1782:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2050,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1781:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1765:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:56:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 2035,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1744:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1744:163:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2054,
												"nodeType": "ExpressionStatement",
												"src": "1744:163:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2056,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "1937:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1584",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2059,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2028,
																			"src": "1967:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1584",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1553,
																		"src": "1967:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1967:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2062,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2030,
																	"src": "1991:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2063,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2032,
																	"src": "2000:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2057,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1944:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1944:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1944:62:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1584",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2055,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2190,
														"src": "1917:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1584_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1917:90:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2066,
												"nodeType": "ExpressionStatement",
												"src": "1917:90:7"
											}
										]
									},
									"documentation": {
										"id": 2025,
										"nodeType": "StructuredDocumentation",
										"src": "1157:249:7",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 2068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1420:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1448:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "1441:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1584",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2027,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2026,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1584,
														"src": "1441:6:7"
													},
													"referencedDeclaration": 1584,
													"src": "1441:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1584",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1471:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "1463:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1496:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "1488:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:76:7"
									},
									"returnParameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1517:0:7"
									},
									"scope": 2191,
									"src": "1411:603:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2103,
										"nodeType": "Block",
										"src": "2136:194:7",
										"statements": [
											{
												"assignments": [
													2079
												],
												"declarations": [
													{
														"constant": false,
														"id": 2079,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2154:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 2103,
														"src": "2146:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2078,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2146:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2090,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2084,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2193:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$2191",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$2191",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 2083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2185:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2082,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2185:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2185:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2086,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2073,
																"src": "2200:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2080,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "2169:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1584",
																	"typeString": "contract IERC20"
																}
															},
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1543,
															"src": "2169:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2169:39:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2088,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2075,
														"src": "2211:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2169:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2146:70:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2092,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2071,
															"src": "2246:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1584",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2095,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2071,
																			"src": "2276:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1584",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1553,
																		"src": "2276:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2276:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2098,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2073,
																	"src": "2300:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2099,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2079,
																	"src": "2309:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2093,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2253:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2253:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2253:69:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1584",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2091,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2190,
														"src": "2226:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1584_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2226:97:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2102,
												"nodeType": "ExpressionStatement",
												"src": "2226:97:7"
											}
										]
									},
									"id": 2104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2029:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2067:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "2060:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1584",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2070,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2069,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1584,
														"src": "2060:6:7"
													},
													"referencedDeclaration": 1584,
													"src": "2060:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1584",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2090:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "2082:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2082:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2115:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "2107:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2050:76:7"
									},
									"returnParameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:7"
									},
									"scope": 2191,
									"src": "2020:310:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2151,
										"nodeType": "Block",
										"src": "2452:370:7",
										"statements": [
											{
												"id": 2150,
												"nodeType": "UncheckedBlock",
												"src": "2462:354:7",
												"statements": [
													{
														"assignments": [
															2115
														],
														"declarations": [
															{
																"constant": false,
																"id": 2115,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2494:12:7",
																"nodeType": "VariableDeclaration",
																"scope": 2150,
																"src": "2486:20:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2114,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2124,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2120,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2533:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2191",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2191",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2525:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2118,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2525:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2525:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2122,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "2540:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2116,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2107,
																	"src": "2509:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1584",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1543,
																"src": "2509:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2486:62:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2126,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "2570:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 2127,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2111,
																		"src": "2586:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2570:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 2129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2593:43:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 2125,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2562:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2562:75:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2131,
														"nodeType": "ExpressionStatement",
														"src": "2562:75:7"
													},
													{
														"assignments": [
															2133
														],
														"declarations": [
															{
																"constant": false,
																"id": 2133,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2659:12:7",
																"nodeType": "VariableDeclaration",
																"scope": 2150,
																"src": "2651:20:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2132,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2651:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2137,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2134,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "2674:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2135,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2111,
																"src": "2689:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2674:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2651:43:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2139,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2107,
																	"src": "2728:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1584",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 2142,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2107,
																					"src": "2758:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1584",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1553,
																				"src": "2758:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2758:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 2145,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2109,
																			"src": "2782:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2146,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2133,
																			"src": "2791:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2140,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2735:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 2141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2735:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 2147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2735:69:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1584",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2138,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "2708:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1584_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2708:97:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2149,
														"nodeType": "ExpressionStatement",
														"src": "2708:97:7"
													}
												]
											}
										]
									},
									"id": 2152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2345:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2383:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "2376:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1584",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2106,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2105,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1584,
														"src": "2376:6:7"
													},
													"referencedDeclaration": 1584,
													"src": "2376:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1584",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2406:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "2398:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2431:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "2423:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2366:76:7"
									},
									"returnParameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2452:0:7"
									},
									"scope": 2191,
									"src": "2336:486:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2189,
										"nodeType": "Block",
										"src": "3275:636:7",
										"statements": [
											{
												"assignments": [
													2162
												],
												"declarations": [
													{
														"constant": false,
														"id": 2162,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3637:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 2189,
														"src": "3624:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2161,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3624:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2171,
												"initialValue": {
													"arguments": [
														{
															"id": 2168,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "3678:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3684:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2165,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2156,
																	"src": "3658:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1584",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1584",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3650:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2163,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3650:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3650:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1673,
														"src": "3650:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3650:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3624:95:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2172,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "3733:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3733:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3753:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3733:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2188,
												"nodeType": "IfStatement",
												"src": "3729:176:7",
												"trueBody": {
													"id": 2187,
													"nodeType": "Block",
													"src": "3756:149:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2179,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2162,
																				"src": "3828:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2181,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3841:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2180,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3841:4:7",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2182,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3840:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 2177,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3817:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3817:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3817:30:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 2184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3849:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 2176,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3809:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3809:85:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2186,
															"nodeType": "ExpressionStatement",
															"src": "3809:85:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2153,
										"nodeType": "StructuredDocumentation",
										"src": "2828:372:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3214:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3241:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "3234:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1584",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2155,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2154,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1584,
														"src": "3234:6:7"
													},
													"referencedDeclaration": 1584,
													"src": "3234:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1584",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3261:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "3248:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3248:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3233:33:7"
									},
									"returnParameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:0:7"
									},
									"scope": 2191,
									"src": "3205:706:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2192,
							"src": "643:3270:7",
							"usedErrors": []
						}
					],
					"src": "100:3813:7"
				},
				"id": 7
			},
			"github/nobi/staking/contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "github/nobi/staking/contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2503
						]
					},
					"id": 2504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2193,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2194,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:8",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 2503,
							"linearizedBaseContracts": [
								2503
							],
							"name": "SafeMath",
							"nameLocation": "475:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "702:140:8",
										"statements": [
											{
												"id": 2224,
												"nodeType": "UncheckedBlock",
												"src": "712:124:8",
												"statements": [
													{
														"assignments": [
															2207
														],
														"declarations": [
															{
																"constant": false,
																"id": 2207,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 2224,
																"src": "736:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2206,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2211,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2208,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "748:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2209,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "752:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2212,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "771:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2213,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "775:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2219,
														"nodeType": "IfStatement",
														"src": "767:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2217,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2205,
															"id": 2218,
															"nodeType": "Return",
															"src": "778:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2221,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2207,
																	"src": "823:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2222,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2205,
														"id": 2223,
														"nodeType": "Return",
														"src": "809:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2195,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "642:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "653:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:8"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "687:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2201,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:8"
									},
									"scope": 2503,
									"src": "626:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2253,
										"nodeType": "Block",
										"src": "1064:113:8",
										"statements": [
											{
												"id": 2252,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2238,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2231,
																"src": "1102:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2239,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "1106:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2245,
														"nodeType": "IfStatement",
														"src": "1098:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2243,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2237,
															"id": 2244,
															"nodeType": "Return",
															"src": "1109:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2247,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2229,
																		"src": "1154:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2231,
																		"src": "1158:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2250,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2237,
														"id": 2251,
														"nodeType": "Return",
														"src": "1140:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2227,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:8",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "1004:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "1015:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:8"
									},
									"returnParameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "1049:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "1055:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:8"
									},
									"scope": 2503,
									"src": "988:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2295,
										"nodeType": "Block",
										"src": "1401:417:8",
										"statements": [
											{
												"id": 2294,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2266,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "1669:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2273,
														"nodeType": "IfStatement",
														"src": "1665:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2271,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2265,
															"id": 2272,
															"nodeType": "Return",
															"src": "1677:16:8"
														}
													},
													{
														"assignments": [
															2275
														],
														"declarations": [
															{
																"constant": false,
																"id": 2275,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 2294,
																"src": "1707:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2274,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2279,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2276,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "1719:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2277,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2259,
																"src": "1723:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2280,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2275,
																	"src": "1742:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2281,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2257,
																	"src": "1746:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2283,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2259,
																"src": "1751:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2289,
														"nodeType": "IfStatement",
														"src": "1738:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2287,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2265,
															"id": 2288,
															"nodeType": "Return",
															"src": "1754:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2291,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2275,
																	"src": "1799:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2292,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2265,
														"id": 2293,
														"nodeType": "Return",
														"src": "1785:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2255,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "1341:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "1352:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:8"
									},
									"returnParameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "1386:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "1392:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:8"
									},
									"scope": 2503,
									"src": "1325:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2323,
										"nodeType": "Block",
										"src": "2043:114:8",
										"statements": [
											{
												"id": 2322,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2308,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2301,
																"src": "2081:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2315,
														"nodeType": "IfStatement",
														"src": "2077:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2313,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2307,
															"id": 2314,
															"nodeType": "Return",
															"src": "2089:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2317,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2299,
																		"src": "2134:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2318,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2301,
																		"src": "2138:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2320,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2307,
														"id": 2321,
														"nodeType": "Return",
														"src": "2120:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2297,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "1983:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "1994:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:8"
									},
									"returnParameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "2028:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2303,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "2034:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:8"
									},
									"scope": 2503,
									"src": "1967:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2351,
										"nodeType": "Block",
										"src": "2392:114:8",
										"statements": [
											{
												"id": 2350,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2336,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2329,
																"src": "2430:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2343,
														"nodeType": "IfStatement",
														"src": "2426:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2341,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2335,
															"id": 2342,
															"nodeType": "Return",
															"src": "2438:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2345,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2327,
																		"src": "2483:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2346,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2329,
																		"src": "2487:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2348,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2335,
														"id": 2349,
														"nodeType": "Return",
														"src": "2469:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2325,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "2332:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "2343:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:8"
									},
									"returnParameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "2377:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "2383:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:8"
									},
									"scope": 2503,
									"src": "2316:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2366,
										"nodeType": "Block",
										"src": "2808:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2362,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2355,
														"src": "2825:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2363,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2357,
														"src": "2829:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2361,
												"id": 2365,
												"nodeType": "Return",
												"src": "2818:12:8"
											}
										]
									},
									"documentation": {
										"id": 2353,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "2754:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "2765:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:8"
									},
									"returnParameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "2799:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:8"
									},
									"scope": 2503,
									"src": "2741:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2381,
										"nodeType": "Block",
										"src": "3175:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2377,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2370,
														"src": "3192:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2378,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2372,
														"src": "3196:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2376,
												"id": 2380,
												"nodeType": "Return",
												"src": "3185:12:8"
											}
										]
									},
									"documentation": {
										"id": 2368,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "3121:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "3132:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:8"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "3166:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:8"
									},
									"scope": 2503,
									"src": "3108:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2396,
										"nodeType": "Block",
										"src": "3518:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2392,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2385,
														"src": "3535:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2393,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2387,
														"src": "3539:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2391,
												"id": 2395,
												"nodeType": "Return",
												"src": "3528:12:8"
											}
										]
									},
									"documentation": {
										"id": 2383,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "3464:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "3475:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:8"
									},
									"returnParameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "3509:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:8"
									},
									"scope": 2503,
									"src": "3451:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2411,
										"nodeType": "Block",
										"src": "3903:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2407,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2400,
														"src": "3920:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2408,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2402,
														"src": "3924:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2406,
												"id": 2410,
												"nodeType": "Return",
												"src": "3913:12:8"
											}
										]
									},
									"documentation": {
										"id": 2398,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "3849:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "3860:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:8"
									},
									"returnParameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "3894:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:8"
									},
									"scope": 2503,
									"src": "3836:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2426,
										"nodeType": "Block",
										"src": "4452:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2422,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2415,
														"src": "4469:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2423,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2417,
														"src": "4473:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2421,
												"id": 2425,
												"nodeType": "Return",
												"src": "4462:12:8"
											}
										]
									},
									"documentation": {
										"id": 2413,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "4398:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "4409:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:8"
									},
									"returnParameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "4443:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:8"
									},
									"scope": 2503,
									"src": "4385:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2451,
										"nodeType": "Block",
										"src": "5070:106:8",
										"statements": [
											{
												"id": 2450,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2440,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2432,
																		"src": "5112:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2441,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2430,
																		"src": "5117:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2443,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2434,
																	"src": "5120:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2439,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2445,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2446,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2430,
																"src": "5154:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2447,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2432,
																"src": "5158:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2438,
														"id": 2449,
														"nodeType": "Return",
														"src": "5147:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2428,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2452,
												"src": "4967:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2452,
												"src": "4986:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2452,
												"src": "5005:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2433,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:8"
									},
									"returnParameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2452,
												"src": "5061:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:8"
									},
									"scope": 2503,
									"src": "4945:231:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2476,
										"nodeType": "Block",
										"src": "5785:105:8",
										"statements": [
											{
												"id": 2475,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2465,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2457,
																		"src": "5827:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2468,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2459,
																	"src": "5834:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2464,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2470,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2471,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2455,
																"src": "5868:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2472,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2457,
																"src": "5872:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2463,
														"id": 2474,
														"nodeType": "Return",
														"src": "5861:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2453,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2455,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "5682:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "5701:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "5720:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:8"
									},
									"returnParameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "5776:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:8"
									},
									"scope": 2503,
									"src": "5660:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2501,
										"nodeType": "Block",
										"src": "6661:105:8",
										"statements": [
											{
												"id": 2500,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2490,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2482,
																		"src": "6703:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2493,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "6710:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2489,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2495,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2496,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2480,
																"src": "6744:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2497,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2482,
																"src": "6748:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2488,
														"id": 2499,
														"nodeType": "Return",
														"src": "6737:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2478,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "6558:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "6577:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "6596:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:8"
									},
									"returnParameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "6652:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:8"
									},
									"scope": 2503,
									"src": "6536:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2504,
							"src": "467:6301:8",
							"usedErrors": []
						}
					],
					"src": "92:6676:8"
				},
				"id": 8
			}
		}
	}
}